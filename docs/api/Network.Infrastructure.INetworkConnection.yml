### YamlMime:ManagedReference
items:
- uid: Network.Infrastructure.INetworkConnection
  commentId: T:Network.Infrastructure.INetworkConnection
  id: INetworkConnection
  parent: Network.Infrastructure
  children:
  - Network.Infrastructure.INetworkConnection.Close(Network.Infrastructure.EDisconnectReason)
  - Network.Infrastructure.INetworkConnection.FragmentLength
  - Network.Infrastructure.INetworkConnection.Latency
  - Network.Infrastructure.INetworkConnection.MaxPackageLength
  - Network.Infrastructure.INetworkConnection.SendRaw(System.ArraySegment{System.Byte},Network.Infrastructure.EDeliveryMethod)
  langs:
  - csharp
  - vb
  name: INetworkConnection
  nameWithType: INetworkConnection
  fullName: Network.Infrastructure.INetworkConnection
  type: Interface
  source:
    remote:
      path: source/Network/Infrastructure/INetworkConnection.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: INetworkConnection
    path: ../source/Network/Infrastructure/INetworkConnection.cs
    startLine: 25
  assemblies:
  - Network
  namespace: Network.Infrastructure
  syntax:
    content: public interface INetworkConnection
    content.vb: Public Interface INetworkConnection
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Network.Infrastructure.INetworkConnection.FragmentLength
  commentId: P:Network.Infrastructure.INetworkConnection.FragmentLength
  id: FragmentLength
  parent: Network.Infrastructure.INetworkConnection
  langs:
  - csharp
  - vb
  name: FragmentLength
  nameWithType: INetworkConnection.FragmentLength
  fullName: Network.Infrastructure.INetworkConnection.FragmentLength
  type: Property
  source:
    remote:
      path: source/Network/Infrastructure/INetworkConnection.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: FragmentLength
    path: ../source/Network/Infrastructure/INetworkConnection.cs
    startLine: 27
  assemblies:
  - Network
  namespace: Network.Infrastructure
  syntax:
    content: int FragmentLength { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property FragmentLength As Integer
  overload: Network.Infrastructure.INetworkConnection.FragmentLength*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Network.Infrastructure.INetworkConnection.MaxPackageLength
  commentId: P:Network.Infrastructure.INetworkConnection.MaxPackageLength
  id: MaxPackageLength
  parent: Network.Infrastructure.INetworkConnection
  langs:
  - csharp
  - vb
  name: MaxPackageLength
  nameWithType: INetworkConnection.MaxPackageLength
  fullName: Network.Infrastructure.INetworkConnection.MaxPackageLength
  type: Property
  source:
    remote:
      path: source/Network/Infrastructure/INetworkConnection.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: MaxPackageLength
    path: ../source/Network/Infrastructure/INetworkConnection.cs
    startLine: 28
  assemblies:
  - Network
  namespace: Network.Infrastructure
  syntax:
    content: int MaxPackageLength { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property MaxPackageLength As Integer
  overload: Network.Infrastructure.INetworkConnection.MaxPackageLength*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Network.Infrastructure.INetworkConnection.Latency
  commentId: P:Network.Infrastructure.INetworkConnection.Latency
  id: Latency
  parent: Network.Infrastructure.INetworkConnection
  langs:
  - csharp
  - vb
  name: Latency
  nameWithType: INetworkConnection.Latency
  fullName: Network.Infrastructure.INetworkConnection.Latency
  type: Property
  source:
    remote:
      path: source/Network/Infrastructure/INetworkConnection.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Latency
    path: ../source/Network/Infrastructure/INetworkConnection.cs
    startLine: 29
  assemblies:
  - Network
  namespace: Network.Infrastructure
  syntax:
    content: int Latency { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property Latency As Integer
  overload: Network.Infrastructure.INetworkConnection.Latency*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Network.Infrastructure.INetworkConnection.SendRaw(System.ArraySegment{System.Byte},Network.Infrastructure.EDeliveryMethod)
  commentId: M:Network.Infrastructure.INetworkConnection.SendRaw(System.ArraySegment{System.Byte},Network.Infrastructure.EDeliveryMethod)
  id: SendRaw(System.ArraySegment{System.Byte},Network.Infrastructure.EDeliveryMethod)
  parent: Network.Infrastructure.INetworkConnection
  langs:
  - csharp
  - vb
  name: SendRaw(ArraySegment<Byte>, EDeliveryMethod)
  nameWithType: INetworkConnection.SendRaw(ArraySegment<Byte>, EDeliveryMethod)
  fullName: Network.Infrastructure.INetworkConnection.SendRaw(System.ArraySegment<System.Byte>, Network.Infrastructure.EDeliveryMethod)
  type: Method
  source:
    remote:
      path: source/Network/Infrastructure/INetworkConnection.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: SendRaw
    path: ../source/Network/Infrastructure/INetworkConnection.cs
    startLine: 30
  assemblies:
  - Network
  namespace: Network.Infrastructure
  syntax:
    content: void SendRaw(ArraySegment<byte> raw, EDeliveryMethod eMethod)
    parameters:
    - id: raw
      type: System.ArraySegment{System.Byte}
    - id: eMethod
      type: Network.Infrastructure.EDeliveryMethod
    content.vb: Sub SendRaw(raw As ArraySegment(Of Byte), eMethod As EDeliveryMethod)
  overload: Network.Infrastructure.INetworkConnection.SendRaw*
  nameWithType.vb: INetworkConnection.SendRaw(ArraySegment(Of Byte), EDeliveryMethod)
  fullName.vb: Network.Infrastructure.INetworkConnection.SendRaw(System.ArraySegment(Of System.Byte), Network.Infrastructure.EDeliveryMethod)
  name.vb: SendRaw(ArraySegment(Of Byte), EDeliveryMethod)
- uid: Network.Infrastructure.INetworkConnection.Close(Network.Infrastructure.EDisconnectReason)
  commentId: M:Network.Infrastructure.INetworkConnection.Close(Network.Infrastructure.EDisconnectReason)
  id: Close(Network.Infrastructure.EDisconnectReason)
  parent: Network.Infrastructure.INetworkConnection
  langs:
  - csharp
  - vb
  name: Close(EDisconnectReason)
  nameWithType: INetworkConnection.Close(EDisconnectReason)
  fullName: Network.Infrastructure.INetworkConnection.Close(Network.Infrastructure.EDisconnectReason)
  type: Method
  source:
    remote:
      path: source/Network/Infrastructure/INetworkConnection.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Close
    path: ../source/Network/Infrastructure/INetworkConnection.cs
    startLine: 31
  assemblies:
  - Network
  namespace: Network.Infrastructure
  syntax:
    content: void Close(EDisconnectReason eReason)
    parameters:
    - id: eReason
      type: Network.Infrastructure.EDisconnectReason
    content.vb: Sub Close(eReason As EDisconnectReason)
  overload: Network.Infrastructure.INetworkConnection.Close*
references:
- uid: Network.Infrastructure
  commentId: N:Network.Infrastructure
  name: Network.Infrastructure
  nameWithType: Network.Infrastructure
  fullName: Network.Infrastructure
- uid: Network.Infrastructure.INetworkConnection.FragmentLength*
  commentId: Overload:Network.Infrastructure.INetworkConnection.FragmentLength
  name: FragmentLength
  nameWithType: INetworkConnection.FragmentLength
  fullName: Network.Infrastructure.INetworkConnection.FragmentLength
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Network.Infrastructure.INetworkConnection.MaxPackageLength*
  commentId: Overload:Network.Infrastructure.INetworkConnection.MaxPackageLength
  name: MaxPackageLength
  nameWithType: INetworkConnection.MaxPackageLength
  fullName: Network.Infrastructure.INetworkConnection.MaxPackageLength
- uid: Network.Infrastructure.INetworkConnection.Latency*
  commentId: Overload:Network.Infrastructure.INetworkConnection.Latency
  name: Latency
  nameWithType: INetworkConnection.Latency
  fullName: Network.Infrastructure.INetworkConnection.Latency
- uid: Network.Infrastructure.INetworkConnection.SendRaw*
  commentId: Overload:Network.Infrastructure.INetworkConnection.SendRaw
  name: SendRaw
  nameWithType: INetworkConnection.SendRaw
  fullName: Network.Infrastructure.INetworkConnection.SendRaw
- uid: System.ArraySegment{System.Byte}
  commentId: T:System.ArraySegment{System.Byte}
  parent: System
  definition: System.ArraySegment`1
  name: ArraySegment<Byte>
  nameWithType: ArraySegment<Byte>
  fullName: System.ArraySegment<System.Byte>
  nameWithType.vb: ArraySegment(Of Byte)
  fullName.vb: System.ArraySegment(Of System.Byte)
  name.vb: ArraySegment(Of Byte)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Network.Infrastructure.EDeliveryMethod
  commentId: T:Network.Infrastructure.EDeliveryMethod
  parent: Network.Infrastructure
  name: EDeliveryMethod
  nameWithType: EDeliveryMethod
  fullName: Network.Infrastructure.EDeliveryMethod
- uid: System.ArraySegment`1
  commentId: T:System.ArraySegment`1
  isExternal: true
  name: ArraySegment<T>
  nameWithType: ArraySegment<T>
  fullName: System.ArraySegment<T>
  nameWithType.vb: ArraySegment(Of T)
  fullName.vb: System.ArraySegment(Of T)
  name.vb: ArraySegment(Of T)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Network.Infrastructure.INetworkConnection.Close*
  commentId: Overload:Network.Infrastructure.INetworkConnection.Close
  name: Close
  nameWithType: INetworkConnection.Close
  fullName: Network.Infrastructure.INetworkConnection.Close
- uid: Network.Infrastructure.EDisconnectReason
  commentId: T:Network.Infrastructure.EDisconnectReason
  parent: Network.Infrastructure
  name: EDisconnectReason
  nameWithType: EDisconnectReason
  fullName: Network.Infrastructure.EDisconnectReason
