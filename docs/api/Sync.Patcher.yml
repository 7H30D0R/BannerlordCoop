### YamlMime:ManagedReference
items:
- uid: Sync.Patcher
  commentId: T:Sync.Patcher
  id: Patcher
  parent: Sync
  children:
  - Sync.Patcher.HarmonyInstance
  - Sync.Patcher.HarmonyLock
  - Sync.Patcher.m_HarmonyInstance
  langs:
  - csharp
  - vb
  name: Patcher
  nameWithType: Patcher
  fullName: Sync.Patcher
  type: Class
  source:
    remote:
      path: source/Sync/Patcher.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Patcher
    path: ../source/Sync/Patcher.cs
    startLine: 5
  assemblies:
  - Sync
  namespace: Sync
  syntax:
    content: public static class Patcher
    content.vb: Public Module Patcher
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Sync.Patcher.m_HarmonyInstance
  commentId: F:Sync.Patcher.m_HarmonyInstance
  id: m_HarmonyInstance
  parent: Sync.Patcher
  langs:
  - csharp
  - vb
  name: m_HarmonyInstance
  nameWithType: Patcher.m_HarmonyInstance
  fullName: Sync.Patcher.m_HarmonyInstance
  type: Field
  source:
    remote:
      path: source/Sync/Patcher.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_HarmonyInstance
    path: ../source/Sync/Patcher.cs
    startLine: 7
  assemblies:
  - Sync
  namespace: Sync
  syntax:
    content: static readonly Lazy<Harmony> m_HarmonyInstance
    return:
      type: System.Lazy{HarmonyLib.Harmony}
    content.vb: Shared ReadOnly m_HarmonyInstance As Lazy(Of Harmony)
  modifiers.csharp:
  - static
  - readonly
  modifiers.vb:
  - Shared
  - ReadOnly
- uid: Sync.Patcher.HarmonyInstance
  commentId: P:Sync.Patcher.HarmonyInstance
  id: HarmonyInstance
  parent: Sync.Patcher
  langs:
  - csharp
  - vb
  name: HarmonyInstance
  nameWithType: Patcher.HarmonyInstance
  fullName: Sync.Patcher.HarmonyInstance
  type: Property
  source:
    remote:
      path: source/Sync/Patcher.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: HarmonyInstance
    path: ../source/Sync/Patcher.cs
    startLine: 10
  assemblies:
  - Sync
  namespace: Sync
  syntax:
    content: public static Harmony HarmonyInstance { get; }
    parameters: []
    return:
      type: HarmonyLib.Harmony
    content.vb: Public Shared ReadOnly Property HarmonyInstance As Harmony
  overload: Sync.Patcher.HarmonyInstance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Sync.Patcher.HarmonyLock
  commentId: P:Sync.Patcher.HarmonyLock
  id: HarmonyLock
  parent: Sync.Patcher
  langs:
  - csharp
  - vb
  name: HarmonyLock
  nameWithType: Patcher.HarmonyLock
  fullName: Sync.Patcher.HarmonyLock
  type: Property
  source:
    remote:
      path: source/Sync/Patcher.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: HarmonyLock
    path: ../source/Sync/Patcher.cs
    startLine: 11
  assemblies:
  - Sync
  namespace: Sync
  syntax:
    content: public static object HarmonyLock { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Shared ReadOnly Property HarmonyLock As Object
  overload: Sync.Patcher.HarmonyLock*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Sync
  commentId: N:Sync
  name: Sync
  nameWithType: Sync
  fullName: Sync
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Lazy{HarmonyLib.Harmony}
  commentId: T:System.Lazy{HarmonyLib.Harmony}
  parent: System
  definition: System.Lazy`1
  name: Lazy<Harmony>
  nameWithType: Lazy<Harmony>
  fullName: System.Lazy<HarmonyLib.Harmony>
  nameWithType.vb: Lazy(Of Harmony)
  fullName.vb: System.Lazy(Of HarmonyLib.Harmony)
  name.vb: Lazy(Of Harmony)
  spec.csharp:
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: HarmonyLib.Harmony
    name: Harmony
    nameWithType: Harmony
    fullName: HarmonyLib.Harmony
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: HarmonyLib.Harmony
    name: Harmony
    nameWithType: Harmony
    fullName: HarmonyLib.Harmony
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Lazy`1
  commentId: T:System.Lazy`1
  isExternal: true
  name: Lazy<T>
  nameWithType: Lazy<T>
  fullName: System.Lazy<T>
  nameWithType.vb: Lazy(Of T)
  fullName.vb: System.Lazy(Of T)
  name.vb: Lazy(Of T)
  spec.csharp:
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sync.Patcher.HarmonyInstance*
  commentId: Overload:Sync.Patcher.HarmonyInstance
  name: HarmonyInstance
  nameWithType: Patcher.HarmonyInstance
  fullName: Sync.Patcher.HarmonyInstance
- uid: HarmonyLib.Harmony
  commentId: T:HarmonyLib.Harmony
  parent: HarmonyLib
  isExternal: true
  name: Harmony
  nameWithType: Harmony
  fullName: HarmonyLib.Harmony
- uid: HarmonyLib
  commentId: N:HarmonyLib
  isExternal: true
  name: HarmonyLib
  nameWithType: HarmonyLib
  fullName: HarmonyLib
- uid: Sync.Patcher.HarmonyLock*
  commentId: Overload:Sync.Patcher.HarmonyLock
  name: HarmonyLock
  nameWithType: Patcher.HarmonyLock
  fullName: Sync.Patcher.HarmonyLock
