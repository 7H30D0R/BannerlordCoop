### YamlMime:ManagedReference
items:
- uid: Coop.Mod.DebugUtil.CLICommands
  commentId: T:Coop.Mod.DebugUtil.CLICommands
  id: CLICommands
  parent: Coop.Mod.DebugUtil
  children:
  - Coop.Mod.DebugUtil.CLICommands.ConnectTo(System.Collections.Generic.List{System.String})
  - Coop.Mod.DebugUtil.CLICommands.DisableWarn(System.Collections.Generic.List{System.String})
  - Coop.Mod.DebugUtil.CLICommands.Disconnect(System.Collections.Generic.List{System.String})
  - Coop.Mod.DebugUtil.CLICommands.DumpInfo(System.Collections.Generic.List{System.String})
  - Coop.Mod.DebugUtil.CLICommands.Help(System.Collections.Generic.List{System.String})
  - Coop.Mod.DebugUtil.CLICommands.m_DebugUI
  - Coop.Mod.DebugUtil.CLICommands.Play(System.Collections.Generic.List{System.String})
  - Coop.Mod.DebugUtil.CLICommands.Record(System.Collections.Generic.List{System.String})
  - Coop.Mod.DebugUtil.CLICommands.sGroupName
  - Coop.Mod.DebugUtil.CLICommands.ShowDebugUi(System.Collections.Generic.List{System.String})
  - Coop.Mod.DebugUtil.CLICommands.Spawn(System.Collections.Generic.List{System.String})
  - Coop.Mod.DebugUtil.CLICommands.StartServer(System.Collections.Generic.List{System.String})
  - Coop.Mod.DebugUtil.CLICommands.sTestGroupName
  - Coop.Mod.DebugUtil.CLICommands.Stop(System.Collections.Generic.List{System.String})
  langs:
  - csharp
  - vb
  name: CLICommands
  nameWithType: CLICommands
  fullName: Coop.Mod.DebugUtil.CLICommands
  type: Class
  source:
    remote:
      path: source/Coop/Mod/DebugUtil/CLICommands.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: CLICommands
    path: ../source/Coop/Mod/DebugUtil/CLICommands.cs
    startLine: 10
  assemblies:
  - Coop
  namespace: Coop.Mod.DebugUtil
  syntax:
    content: public static class CLICommands
    content.vb: Public Module CLICommands
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Coop.Mod.DebugUtil.CLICommands.sGroupName
  commentId: F:Coop.Mod.DebugUtil.CLICommands.sGroupName
  id: sGroupName
  parent: Coop.Mod.DebugUtil.CLICommands
  langs:
  - csharp
  - vb
  name: sGroupName
  nameWithType: CLICommands.sGroupName
  fullName: Coop.Mod.DebugUtil.CLICommands.sGroupName
  type: Field
  source:
    remote:
      path: source/Coop/Mod/DebugUtil/CLICommands.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: sGroupName
    path: ../source/Coop/Mod/DebugUtil/CLICommands.cs
    startLine: 12
  assemblies:
  - Coop
  namespace: Coop.Mod.DebugUtil
  syntax:
    content: const string sGroupName = "coop"
    return:
      type: System.String
    content.vb: Const sGroupName As String = "coop"
  modifiers.csharp:
  - const
  modifiers.vb:
  - Const
- uid: Coop.Mod.DebugUtil.CLICommands.sTestGroupName
  commentId: F:Coop.Mod.DebugUtil.CLICommands.sTestGroupName
  id: sTestGroupName
  parent: Coop.Mod.DebugUtil.CLICommands
  langs:
  - csharp
  - vb
  name: sTestGroupName
  nameWithType: CLICommands.sTestGroupName
  fullName: Coop.Mod.DebugUtil.CLICommands.sTestGroupName
  type: Field
  source:
    remote:
      path: source/Coop/Mod/DebugUtil/CLICommands.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: sTestGroupName
    path: ../source/Coop/Mod/DebugUtil/CLICommands.cs
    startLine: 13
  assemblies:
  - Coop
  namespace: Coop.Mod.DebugUtil
  syntax:
    content: const string sTestGroupName = "test"
    return:
      type: System.String
    content.vb: Const sTestGroupName As String = "test"
  modifiers.csharp:
  - const
  modifiers.vb:
  - Const
- uid: Coop.Mod.DebugUtil.CLICommands.m_DebugUI
  commentId: F:Coop.Mod.DebugUtil.CLICommands.m_DebugUI
  id: m_DebugUI
  parent: Coop.Mod.DebugUtil.CLICommands
  langs:
  - csharp
  - vb
  name: m_DebugUI
  nameWithType: CLICommands.m_DebugUI
  fullName: Coop.Mod.DebugUtil.CLICommands.m_DebugUI
  type: Field
  source:
    remote:
      path: source/Coop/Mod/DebugUtil/CLICommands.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_DebugUI
    path: ../source/Coop/Mod/DebugUtil/CLICommands.cs
    startLine: 15
  assemblies:
  - Coop
  namespace: Coop.Mod.DebugUtil
  syntax:
    content: static DebugUI m_DebugUI
    return:
      type: Coop.Mod.DebugUtil.DebugUI
    content.vb: Shared m_DebugUI As DebugUI
  modifiers.csharp:
  - static
  modifiers.vb:
  - Shared
- uid: Coop.Mod.DebugUtil.CLICommands.DumpInfo(System.Collections.Generic.List{System.String})
  commentId: M:Coop.Mod.DebugUtil.CLICommands.DumpInfo(System.Collections.Generic.List{System.String})
  id: DumpInfo(System.Collections.Generic.List{System.String})
  parent: Coop.Mod.DebugUtil.CLICommands
  langs:
  - csharp
  - vb
  name: DumpInfo(List<String>)
  nameWithType: CLICommands.DumpInfo(List<String>)
  fullName: Coop.Mod.DebugUtil.CLICommands.DumpInfo(System.Collections.Generic.List<System.String>)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/DebugUtil/CLICommands.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: DumpInfo
    path: ../source/Coop/Mod/DebugUtil/CLICommands.cs
    startLine: 17
  assemblies:
  - Coop
  namespace: Coop.Mod.DebugUtil
  syntax:
    content: >-
      [CommandLineFunctionality.CommandLineArgumentFunction("info", "coop")]

      public static string DumpInfo(List<string> parameters)
    parameters:
    - id: parameters
      type: System.Collections.Generic.List{System.String}
    return:
      type: System.String
    content.vb: >-
      <CommandLineFunctionality.CommandLineArgumentFunction("info", "coop")>

      Public Shared Function DumpInfo(parameters As List(Of String)) As String
  overload: Coop.Mod.DebugUtil.CLICommands.DumpInfo*
  attributes:
  - type: TaleWorlds.Library.CommandLineFunctionality.CommandLineArgumentFunction
    ctor: TaleWorlds.Library.CommandLineFunctionality.CommandLineArgumentFunction.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: info
    - type: System.String
      value: coop
  nameWithType.vb: CLICommands.DumpInfo(List(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Coop.Mod.DebugUtil.CLICommands.DumpInfo(System.Collections.Generic.List(Of System.String))
  name.vb: DumpInfo(List(Of String))
- uid: Coop.Mod.DebugUtil.CLICommands.ShowDebugUi(System.Collections.Generic.List{System.String})
  commentId: M:Coop.Mod.DebugUtil.CLICommands.ShowDebugUi(System.Collections.Generic.List{System.String})
  id: ShowDebugUi(System.Collections.Generic.List{System.String})
  parent: Coop.Mod.DebugUtil.CLICommands
  langs:
  - csharp
  - vb
  name: ShowDebugUi(List<String>)
  nameWithType: CLICommands.ShowDebugUi(List<String>)
  fullName: Coop.Mod.DebugUtil.CLICommands.ShowDebugUi(System.Collections.Generic.List<System.String>)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/DebugUtil/CLICommands.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ShowDebugUi
    path: ../source/Coop/Mod/DebugUtil/CLICommands.cs
    startLine: 27
  assemblies:
  - Coop
  namespace: Coop.Mod.DebugUtil
  syntax:
    content: >-
      [CommandLineFunctionality.CommandLineArgumentFunction("show_debug_ui", "coop")]

      public static string ShowDebugUi(List<string> parameters)
    parameters:
    - id: parameters
      type: System.Collections.Generic.List{System.String}
    return:
      type: System.String
    content.vb: >-
      <CommandLineFunctionality.CommandLineArgumentFunction("show_debug_ui", "coop")>

      Public Shared Function ShowDebugUi(parameters As List(Of String)) As String
  overload: Coop.Mod.DebugUtil.CLICommands.ShowDebugUi*
  attributes:
  - type: TaleWorlds.Library.CommandLineFunctionality.CommandLineArgumentFunction
    ctor: TaleWorlds.Library.CommandLineFunctionality.CommandLineArgumentFunction.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: show_debug_ui
    - type: System.String
      value: coop
  nameWithType.vb: CLICommands.ShowDebugUi(List(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Coop.Mod.DebugUtil.CLICommands.ShowDebugUi(System.Collections.Generic.List(Of System.String))
  name.vb: ShowDebugUi(List(Of String))
- uid: Coop.Mod.DebugUtil.CLICommands.StartServer(System.Collections.Generic.List{System.String})
  commentId: M:Coop.Mod.DebugUtil.CLICommands.StartServer(System.Collections.Generic.List{System.String})
  id: StartServer(System.Collections.Generic.List{System.String})
  parent: Coop.Mod.DebugUtil.CLICommands
  langs:
  - csharp
  - vb
  name: StartServer(List<String>)
  nameWithType: CLICommands.StartServer(List<String>)
  fullName: Coop.Mod.DebugUtil.CLICommands.StartServer(System.Collections.Generic.List<System.String>)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/DebugUtil/CLICommands.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: StartServer
    path: ../source/Coop/Mod/DebugUtil/CLICommands.cs
    startLine: 40
  assemblies:
  - Coop
  namespace: Coop.Mod.DebugUtil
  syntax:
    content: >-
      [CommandLineFunctionality.CommandLineArgumentFunction("start_local_server", "coop")]

      public static string StartServer(List<string> parameters)
    parameters:
    - id: parameters
      type: System.Collections.Generic.List{System.String}
    return:
      type: System.String
    content.vb: >-
      <CommandLineFunctionality.CommandLineArgumentFunction("start_local_server", "coop")>

      Public Shared Function StartServer(parameters As List(Of String)) As String
  overload: Coop.Mod.DebugUtil.CLICommands.StartServer*
  attributes:
  - type: TaleWorlds.Library.CommandLineFunctionality.CommandLineArgumentFunction
    ctor: TaleWorlds.Library.CommandLineFunctionality.CommandLineArgumentFunction.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: start_local_server
    - type: System.String
      value: coop
  nameWithType.vb: CLICommands.StartServer(List(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Coop.Mod.DebugUtil.CLICommands.StartServer(System.Collections.Generic.List(Of System.String))
  name.vb: StartServer(List(Of String))
- uid: Coop.Mod.DebugUtil.CLICommands.ConnectTo(System.Collections.Generic.List{System.String})
  commentId: M:Coop.Mod.DebugUtil.CLICommands.ConnectTo(System.Collections.Generic.List{System.String})
  id: ConnectTo(System.Collections.Generic.List{System.String})
  parent: Coop.Mod.DebugUtil.CLICommands
  langs:
  - csharp
  - vb
  name: ConnectTo(List<String>)
  nameWithType: CLICommands.ConnectTo(List<String>)
  fullName: Coop.Mod.DebugUtil.CLICommands.ConnectTo(System.Collections.Generic.List<System.String>)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/DebugUtil/CLICommands.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ConnectTo
    path: ../source/Coop/Mod/DebugUtil/CLICommands.cs
    startLine: 53
  assemblies:
  - Coop
  namespace: Coop.Mod.DebugUtil
  syntax:
    content: >-
      [CommandLineFunctionality.CommandLineArgumentFunction("connect_to", "coop")]

      public static string ConnectTo(List<string> parameters)
    parameters:
    - id: parameters
      type: System.Collections.Generic.List{System.String}
    return:
      type: System.String
    content.vb: >-
      <CommandLineFunctionality.CommandLineArgumentFunction("connect_to", "coop")>

      Public Shared Function ConnectTo(parameters As List(Of String)) As String
  overload: Coop.Mod.DebugUtil.CLICommands.ConnectTo*
  attributes:
  - type: TaleWorlds.Library.CommandLineFunctionality.CommandLineArgumentFunction
    ctor: TaleWorlds.Library.CommandLineFunctionality.CommandLineArgumentFunction.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: connect_to
    - type: System.String
      value: coop
  nameWithType.vb: CLICommands.ConnectTo(List(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Coop.Mod.DebugUtil.CLICommands.ConnectTo(System.Collections.Generic.List(Of System.String))
  name.vb: ConnectTo(List(Of String))
- uid: Coop.Mod.DebugUtil.CLICommands.Disconnect(System.Collections.Generic.List{System.String})
  commentId: M:Coop.Mod.DebugUtil.CLICommands.Disconnect(System.Collections.Generic.List{System.String})
  id: Disconnect(System.Collections.Generic.List{System.String})
  parent: Coop.Mod.DebugUtil.CLICommands
  langs:
  - csharp
  - vb
  name: Disconnect(List<String>)
  nameWithType: CLICommands.Disconnect(List<String>)
  fullName: Coop.Mod.DebugUtil.CLICommands.Disconnect(System.Collections.Generic.List<System.String>)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/DebugUtil/CLICommands.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Disconnect
    path: ../source/Coop/Mod/DebugUtil/CLICommands.cs
    startLine: 69
  assemblies:
  - Coop
  namespace: Coop.Mod.DebugUtil
  syntax:
    content: >-
      [CommandLineFunctionality.CommandLineArgumentFunction("disconnect", "coop")]

      public static string Disconnect(List<string> parameters)
    parameters:
    - id: parameters
      type: System.Collections.Generic.List{System.String}
    return:
      type: System.String
    content.vb: >-
      <CommandLineFunctionality.CommandLineArgumentFunction("disconnect", "coop")>

      Public Shared Function Disconnect(parameters As List(Of String)) As String
  overload: Coop.Mod.DebugUtil.CLICommands.Disconnect*
  attributes:
  - type: TaleWorlds.Library.CommandLineFunctionality.CommandLineArgumentFunction
    ctor: TaleWorlds.Library.CommandLineFunctionality.CommandLineArgumentFunction.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: disconnect
    - type: System.String
      value: coop
  nameWithType.vb: CLICommands.Disconnect(List(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Coop.Mod.DebugUtil.CLICommands.Disconnect(System.Collections.Generic.List(Of System.String))
  name.vb: Disconnect(List(Of String))
- uid: Coop.Mod.DebugUtil.CLICommands.Help(System.Collections.Generic.List{System.String})
  commentId: M:Coop.Mod.DebugUtil.CLICommands.Help(System.Collections.Generic.List{System.String})
  id: Help(System.Collections.Generic.List{System.String})
  parent: Coop.Mod.DebugUtil.CLICommands
  langs:
  - csharp
  - vb
  name: Help(List<String>)
  nameWithType: CLICommands.Help(List<String>)
  fullName: Coop.Mod.DebugUtil.CLICommands.Help(System.Collections.Generic.List<System.String>)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/DebugUtil/CLICommands.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Help
    path: ../source/Coop/Mod/DebugUtil/CLICommands.cs
    startLine: 76
  assemblies:
  - Coop
  namespace: Coop.Mod.DebugUtil
  syntax:
    content: >-
      [CommandLineFunctionality.CommandLineArgumentFunction("help", "coop")]

      public static string Help(List<string> parameters)
    parameters:
    - id: parameters
      type: System.Collections.Generic.List{System.String}
    return:
      type: System.String
    content.vb: >-
      <CommandLineFunctionality.CommandLineArgumentFunction("help", "coop")>

      Public Shared Function Help(parameters As List(Of String)) As String
  overload: Coop.Mod.DebugUtil.CLICommands.Help*
  attributes:
  - type: TaleWorlds.Library.CommandLineFunctionality.CommandLineArgumentFunction
    ctor: TaleWorlds.Library.CommandLineFunctionality.CommandLineArgumentFunction.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: help
    - type: System.String
      value: coop
  nameWithType.vb: CLICommands.Help(List(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Coop.Mod.DebugUtil.CLICommands.Help(System.Collections.Generic.List(Of System.String))
  name.vb: Help(List(Of String))
- uid: Coop.Mod.DebugUtil.CLICommands.Record(System.Collections.Generic.List{System.String})
  commentId: M:Coop.Mod.DebugUtil.CLICommands.Record(System.Collections.Generic.List{System.String})
  id: Record(System.Collections.Generic.List{System.String})
  parent: Coop.Mod.DebugUtil.CLICommands
  langs:
  - csharp
  - vb
  name: Record(List<String>)
  nameWithType: CLICommands.Record(List<String>)
  fullName: Coop.Mod.DebugUtil.CLICommands.Record(System.Collections.Generic.List<System.String>)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/DebugUtil/CLICommands.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Record
    path: ../source/Coop/Mod/DebugUtil/CLICommands.cs
    startLine: 85
  assemblies:
  - Coop
  namespace: Coop.Mod.DebugUtil
  syntax:
    content: >-
      [CommandLineFunctionality.CommandLineArgumentFunction("record", "coop")]

      public static string Record(List<string> parameters)
    parameters:
    - id: parameters
      type: System.Collections.Generic.List{System.String}
    return:
      type: System.String
    content.vb: >-
      <CommandLineFunctionality.CommandLineArgumentFunction("record", "coop")>

      Public Shared Function Record(parameters As List(Of String)) As String
  overload: Coop.Mod.DebugUtil.CLICommands.Record*
  attributes:
  - type: TaleWorlds.Library.CommandLineFunctionality.CommandLineArgumentFunction
    ctor: TaleWorlds.Library.CommandLineFunctionality.CommandLineArgumentFunction.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: record
    - type: System.String
      value: coop
  nameWithType.vb: CLICommands.Record(List(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Coop.Mod.DebugUtil.CLICommands.Record(System.Collections.Generic.List(Of System.String))
  name.vb: Record(List(Of String))
- uid: Coop.Mod.DebugUtil.CLICommands.Play(System.Collections.Generic.List{System.String})
  commentId: M:Coop.Mod.DebugUtil.CLICommands.Play(System.Collections.Generic.List{System.String})
  id: Play(System.Collections.Generic.List{System.String})
  parent: Coop.Mod.DebugUtil.CLICommands
  langs:
  - csharp
  - vb
  name: Play(List<String>)
  nameWithType: CLICommands.Play(List<String>)
  fullName: Coop.Mod.DebugUtil.CLICommands.Play(System.Collections.Generic.List<System.String>)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/DebugUtil/CLICommands.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Play
    path: ../source/Coop/Mod/DebugUtil/CLICommands.cs
    startLine: 96
  assemblies:
  - Coop
  namespace: Coop.Mod.DebugUtil
  syntax:
    content: >-
      [CommandLineFunctionality.CommandLineArgumentFunction("play", "coop")]

      public static string Play(List<string> parameters)
    parameters:
    - id: parameters
      type: System.Collections.Generic.List{System.String}
    return:
      type: System.String
    content.vb: >-
      <CommandLineFunctionality.CommandLineArgumentFunction("play", "coop")>

      Public Shared Function Play(parameters As List(Of String)) As String
  overload: Coop.Mod.DebugUtil.CLICommands.Play*
  attributes:
  - type: TaleWorlds.Library.CommandLineFunctionality.CommandLineArgumentFunction
    ctor: TaleWorlds.Library.CommandLineFunctionality.CommandLineArgumentFunction.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: play
    - type: System.String
      value: coop
  nameWithType.vb: CLICommands.Play(List(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Coop.Mod.DebugUtil.CLICommands.Play(System.Collections.Generic.List(Of System.String))
  name.vb: Play(List(Of String))
- uid: Coop.Mod.DebugUtil.CLICommands.Stop(System.Collections.Generic.List{System.String})
  commentId: M:Coop.Mod.DebugUtil.CLICommands.Stop(System.Collections.Generic.List{System.String})
  id: Stop(System.Collections.Generic.List{System.String})
  parent: Coop.Mod.DebugUtil.CLICommands
  langs:
  - csharp
  - vb
  name: Stop(List<String>)
  nameWithType: CLICommands.Stop(List<String>)
  fullName: Coop.Mod.DebugUtil.CLICommands.Stop(System.Collections.Generic.List<System.String>)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/DebugUtil/CLICommands.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Stop
    path: ../source/Coop/Mod/DebugUtil/CLICommands.cs
    startLine: 107
  assemblies:
  - Coop
  namespace: Coop.Mod.DebugUtil
  syntax:
    content: >-
      [CommandLineFunctionality.CommandLineArgumentFunction("stop", "coop")]

      public static string Stop(List<string> parameters)
    parameters:
    - id: parameters
      type: System.Collections.Generic.List{System.String}
    return:
      type: System.String
    content.vb: >-
      <CommandLineFunctionality.CommandLineArgumentFunction("stop", "coop")>

      Public Shared Function Stop(parameters As List(Of String)) As String
  overload: Coop.Mod.DebugUtil.CLICommands.Stop*
  attributes:
  - type: TaleWorlds.Library.CommandLineFunctionality.CommandLineArgumentFunction
    ctor: TaleWorlds.Library.CommandLineFunctionality.CommandLineArgumentFunction.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: stop
    - type: System.String
      value: coop
  nameWithType.vb: CLICommands.Stop(List(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Coop.Mod.DebugUtil.CLICommands.Stop(System.Collections.Generic.List(Of System.String))
  name.vb: Stop(List(Of String))
- uid: Coop.Mod.DebugUtil.CLICommands.DisableWarn(System.Collections.Generic.List{System.String})
  commentId: M:Coop.Mod.DebugUtil.CLICommands.DisableWarn(System.Collections.Generic.List{System.String})
  id: DisableWarn(System.Collections.Generic.List{System.String})
  parent: Coop.Mod.DebugUtil.CLICommands
  langs:
  - csharp
  - vb
  name: DisableWarn(List<String>)
  nameWithType: CLICommands.DisableWarn(List<String>)
  fullName: Coop.Mod.DebugUtil.CLICommands.DisableWarn(System.Collections.Generic.List<System.String>)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/DebugUtil/CLICommands.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: DisableWarn
    path: ../source/Coop/Mod/DebugUtil/CLICommands.cs
    startLine: 113
  assemblies:
  - Coop
  namespace: Coop.Mod.DebugUtil
  syntax:
    content: >-
      [CommandLineFunctionality.CommandLineArgumentFunction("disable_inconsistent_state_warnings", "coop")]

      public static string DisableWarn(List<string> parameters)
    parameters:
    - id: parameters
      type: System.Collections.Generic.List{System.String}
    return:
      type: System.String
    content.vb: >-
      <CommandLineFunctionality.CommandLineArgumentFunction("disable_inconsistent_state_warnings", "coop")>

      Public Shared Function DisableWarn(parameters As List(Of String)) As String
  overload: Coop.Mod.DebugUtil.CLICommands.DisableWarn*
  attributes:
  - type: TaleWorlds.Library.CommandLineFunctionality.CommandLineArgumentFunction
    ctor: TaleWorlds.Library.CommandLineFunctionality.CommandLineArgumentFunction.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: disable_inconsistent_state_warnings
    - type: System.String
      value: coop
  nameWithType.vb: CLICommands.DisableWarn(List(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Coop.Mod.DebugUtil.CLICommands.DisableWarn(System.Collections.Generic.List(Of System.String))
  name.vb: DisableWarn(List(Of String))
- uid: Coop.Mod.DebugUtil.CLICommands.Spawn(System.Collections.Generic.List{System.String})
  commentId: M:Coop.Mod.DebugUtil.CLICommands.Spawn(System.Collections.Generic.List{System.String})
  id: Spawn(System.Collections.Generic.List{System.String})
  parent: Coop.Mod.DebugUtil.CLICommands
  langs:
  - csharp
  - vb
  name: Spawn(List<String>)
  nameWithType: CLICommands.Spawn(List<String>)
  fullName: Coop.Mod.DebugUtil.CLICommands.Spawn(System.Collections.Generic.List<System.String>)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/DebugUtil/CLICommands.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Spawn
    path: ../source/Coop/Mod/DebugUtil/CLICommands.cs
    startLine: 148
  assemblies:
  - Coop
  namespace: Coop.Mod.DebugUtil
  syntax:
    content: >-
      [CommandLineFunctionality.CommandLineArgumentFunction("spawn_party", "test")]

      public static string Spawn(List<string> parameters)
    parameters:
    - id: parameters
      type: System.Collections.Generic.List{System.String}
    return:
      type: System.String
    content.vb: >-
      <CommandLineFunctionality.CommandLineArgumentFunction("spawn_party", "test")>

      Public Shared Function Spawn(parameters As List(Of String)) As String
  overload: Coop.Mod.DebugUtil.CLICommands.Spawn*
  attributes:
  - type: TaleWorlds.Library.CommandLineFunctionality.CommandLineArgumentFunction
    ctor: TaleWorlds.Library.CommandLineFunctionality.CommandLineArgumentFunction.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: spawn_party
    - type: System.String
      value: test
  nameWithType.vb: CLICommands.Spawn(List(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Coop.Mod.DebugUtil.CLICommands.Spawn(System.Collections.Generic.List(Of System.String))
  name.vb: Spawn(List(Of String))
references:
- uid: Coop.Mod.DebugUtil
  commentId: N:Coop.Mod.DebugUtil
  name: Coop.Mod.DebugUtil
  nameWithType: Coop.Mod.DebugUtil
  fullName: Coop.Mod.DebugUtil
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Coop.Mod.DebugUtil.DebugUI
  commentId: T:Coop.Mod.DebugUtil.DebugUI
  parent: Coop.Mod.DebugUtil
  name: DebugUI
  nameWithType: DebugUI
  fullName: Coop.Mod.DebugUtil.DebugUI
- uid: Coop.Mod.DebugUtil.CLICommands.DumpInfo*
  commentId: Overload:Coop.Mod.DebugUtil.CLICommands.DumpInfo
  name: DumpInfo
  nameWithType: CLICommands.DumpInfo
  fullName: Coop.Mod.DebugUtil.CLICommands.DumpInfo
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Coop.Mod.DebugUtil.CLICommands.ShowDebugUi*
  commentId: Overload:Coop.Mod.DebugUtil.CLICommands.ShowDebugUi
  name: ShowDebugUi
  nameWithType: CLICommands.ShowDebugUi
  fullName: Coop.Mod.DebugUtil.CLICommands.ShowDebugUi
- uid: Coop.Mod.DebugUtil.CLICommands.StartServer*
  commentId: Overload:Coop.Mod.DebugUtil.CLICommands.StartServer
  name: StartServer
  nameWithType: CLICommands.StartServer
  fullName: Coop.Mod.DebugUtil.CLICommands.StartServer
- uid: Coop.Mod.DebugUtil.CLICommands.ConnectTo*
  commentId: Overload:Coop.Mod.DebugUtil.CLICommands.ConnectTo
  name: ConnectTo
  nameWithType: CLICommands.ConnectTo
  fullName: Coop.Mod.DebugUtil.CLICommands.ConnectTo
- uid: Coop.Mod.DebugUtil.CLICommands.Disconnect*
  commentId: Overload:Coop.Mod.DebugUtil.CLICommands.Disconnect
  name: Disconnect
  nameWithType: CLICommands.Disconnect
  fullName: Coop.Mod.DebugUtil.CLICommands.Disconnect
- uid: Coop.Mod.DebugUtil.CLICommands.Help*
  commentId: Overload:Coop.Mod.DebugUtil.CLICommands.Help
  name: Help
  nameWithType: CLICommands.Help
  fullName: Coop.Mod.DebugUtil.CLICommands.Help
- uid: Coop.Mod.DebugUtil.CLICommands.Record*
  commentId: Overload:Coop.Mod.DebugUtil.CLICommands.Record
  name: Record
  nameWithType: CLICommands.Record
  fullName: Coop.Mod.DebugUtil.CLICommands.Record
- uid: Coop.Mod.DebugUtil.CLICommands.Play*
  commentId: Overload:Coop.Mod.DebugUtil.CLICommands.Play
  name: Play
  nameWithType: CLICommands.Play
  fullName: Coop.Mod.DebugUtil.CLICommands.Play
- uid: Coop.Mod.DebugUtil.CLICommands.Stop*
  commentId: Overload:Coop.Mod.DebugUtil.CLICommands.Stop
  name: Stop
  nameWithType: CLICommands.Stop
  fullName: Coop.Mod.DebugUtil.CLICommands.Stop
- uid: Coop.Mod.DebugUtil.CLICommands.DisableWarn*
  commentId: Overload:Coop.Mod.DebugUtil.CLICommands.DisableWarn
  name: DisableWarn
  nameWithType: CLICommands.DisableWarn
  fullName: Coop.Mod.DebugUtil.CLICommands.DisableWarn
- uid: Coop.Mod.DebugUtil.CLICommands.Spawn*
  commentId: Overload:Coop.Mod.DebugUtil.CLICommands.Spawn
  name: Spawn
  nameWithType: CLICommands.Spawn
  fullName: Coop.Mod.DebugUtil.CLICommands.Spawn
