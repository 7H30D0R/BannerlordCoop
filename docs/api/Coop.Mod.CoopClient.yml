### YamlMime:ManagedReference
items:
- uid: Coop.Mod.CoopClient
  commentId: T:Coop.Mod.CoopClient
  id: CoopClient
  parent: Coop.Mod
  children:
  - Coop.Mod.CoopClient.#ctor(Network.Infrastructure.ClientConfiguration)
  - Coop.Mod.CoopClient.CharacterCreationOver
  - Coop.Mod.CoopClient.ClientConnected
  - Coop.Mod.CoopClient.ClientPlaying
  - Coop.Mod.CoopClient.Connect(System.Net.IPAddress,System.Int32)
  - Coop.Mod.CoopClient.ConnectionClosed(Network.Infrastructure.EDisconnectReason)
  - Coop.Mod.CoopClient.ConnectionCreated(Network.Infrastructure.ConnectionClient)
  - Coop.Mod.CoopClient.ConnectionDestroyed(Network.Infrastructure.EDisconnectReason)
  - Coop.Mod.CoopClient.ConnectionEstablished(Network.Infrastructure.ConnectionClient)
  - Coop.Mod.CoopClient.CreateCharacter
  - Coop.Mod.CoopClient.Disconnect
  - Coop.Mod.CoopClient.Events
  - Coop.Mod.CoopClient.gameManager
  - Coop.Mod.CoopClient.GameState
  - Coop.Mod.CoopClient.GetRoom
  - Coop.Mod.CoopClient.GetStore
  - Coop.Mod.CoopClient.Init
  - Coop.Mod.CoopClient.Instance
  - Coop.Mod.CoopClient.Logger
  - Coop.Mod.CoopClient.m_CoopClientSM
  - Coop.Mod.CoopClient.m_Hero
  - Coop.Mod.CoopClient.m_HeroId
  - Coop.Mod.CoopClient.m_Instance
  - Coop.Mod.CoopClient.m_NetManager
  - Coop.Mod.CoopClient.m_ReconnectAttempts
  - Coop.Mod.CoopClient.m_SyncedObjects
  - Coop.Mod.CoopClient.MaxReconnectAttempts
  - Coop.Mod.CoopClient.OnPersistenceInitialized
  - Coop.Mod.CoopClient.Persistence
  - Coop.Mod.CoopClient.ReceiveInitialWorldData(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  - Coop.Mod.CoopClient.ReceiveSyncPacket(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  - Coop.Mod.CoopClient.RemoteStoreCreated
  - Coop.Mod.CoopClient.SendClientRequestInitialWorldData
  - Coop.Mod.CoopClient.SendGameLoaded
  - Coop.Mod.CoopClient.SendGameLoading
  - Coop.Mod.CoopClient.SendPlayerPartyChanged(TaleWorlds.CampaignSystem.Hero,TaleWorlds.CampaignSystem.MobileParty)
  - Coop.Mod.CoopClient.Session
  - Coop.Mod.CoopClient.SyncedObjectStore
  - Coop.Mod.CoopClient.ToString
  - Coop.Mod.CoopClient.TryInitPersistence
  - Coop.Mod.CoopClient.TryReconnect
  - Coop.Mod.CoopClient.Update(System.TimeSpan)
  langs:
  - csharp
  - vb
  name: CoopClient
  nameWithType: CoopClient
  fullName: Coop.Mod.CoopClient
  type: Class
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: CoopClient
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 35
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: 'public class CoopClient : IUpdateable, IClientAccess'
    content.vb: >-
      Public Class CoopClient
          Implements IUpdateable, IClientAccess
  inheritance:
  - System.Object
  implements:
  - Common.IUpdateable
  - Coop.Mod.Persistence.RPC.IClientAccess
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Coop.Mod.CoopClient.MaxReconnectAttempts
  commentId: F:Coop.Mod.CoopClient.MaxReconnectAttempts
  id: MaxReconnectAttempts
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: MaxReconnectAttempts
  nameWithType: CoopClient.MaxReconnectAttempts
  fullName: Coop.Mod.CoopClient.MaxReconnectAttempts
  type: Field
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: MaxReconnectAttempts
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 37
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: const int MaxReconnectAttempts = 2
    return:
      type: System.Int32
    content.vb: Const MaxReconnectAttempts As Integer = 2
  modifiers.csharp:
  - const
  modifiers.vb:
  - Const
- uid: Coop.Mod.CoopClient.Logger
  commentId: F:Coop.Mod.CoopClient.Logger
  id: Logger
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: CoopClient.Logger
  fullName: Coop.Mod.CoopClient.Logger
  type: Field
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Logger
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 38
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: static readonly Logger Logger
    return:
      type: NLog.Logger
    content.vb: Shared ReadOnly Logger As Logger
  modifiers.csharp:
  - static
  - readonly
  modifiers.vb:
  - Shared
  - ReadOnly
- uid: Coop.Mod.CoopClient.m_Instance
  commentId: F:Coop.Mod.CoopClient.m_Instance
  id: m_Instance
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: m_Instance
  nameWithType: CoopClient.m_Instance
  fullName: Coop.Mod.CoopClient.m_Instance
  type: Field
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_Instance
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 40
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: static readonly Lazy<CoopClient> m_Instance
    return:
      type: System.Lazy{Coop.Mod.CoopClient}
    content.vb: Shared ReadOnly m_Instance As Lazy(Of CoopClient)
  modifiers.csharp:
  - static
  - readonly
  modifiers.vb:
  - Shared
  - ReadOnly
- uid: Coop.Mod.CoopClient.m_CoopClientSM
  commentId: F:Coop.Mod.CoopClient.m_CoopClientSM
  id: m_CoopClientSM
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: m_CoopClientSM
  nameWithType: CoopClient.m_CoopClientSM
  fullName: Coop.Mod.CoopClient.m_CoopClientSM
  type: Field
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_CoopClientSM
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 42
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: readonly CoopClientSM m_CoopClientSM
    return:
      type: Coop.Mod.CoopClientSM
    content.vb: ReadOnly m_CoopClientSM As CoopClientSM
  modifiers.csharp:
  - readonly
  modifiers.vb:
  - ReadOnly
- uid: Coop.Mod.CoopClient.m_NetManager
  commentId: F:Coop.Mod.CoopClient.m_NetManager
  id: m_NetManager
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: m_NetManager
  nameWithType: CoopClient.m_NetManager
  fullName: Coop.Mod.CoopClient.m_NetManager
  type: Field
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_NetManager
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 44
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: >-
      [NotNull]

      readonly LiteNetManagerClient m_NetManager
    return:
      type: Coop.NetImpl.LiteNet.LiteNetManagerClient
    content.vb: >-
      <NotNull>

      ReadOnly m_NetManager As LiteNetManagerClient
  attributes:
  - type: JetBrains.Annotations.NotNullAttribute
    ctor: JetBrains.Annotations.NotNullAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - readonly
  modifiers.vb:
  - ReadOnly
- uid: Coop.Mod.CoopClient.m_SyncedObjects
  commentId: F:Coop.Mod.CoopClient.m_SyncedObjects
  id: m_SyncedObjects
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: m_SyncedObjects
  nameWithType: CoopClient.m_SyncedObjects
  fullName: Coop.Mod.CoopClient.m_SyncedObjects
  type: Field
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_SyncedObjects
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 49
  assemblies:
  - Coop
  namespace: Coop.Mod
  summary: "\nInternal data storage for <xref href=\"Coop.Mod.CoopClient.SyncedObjectStore\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: readonly Dictionary<ObjectId, object> m_SyncedObjects
    return:
      type: System.Collections.Generic.Dictionary{Sync.Store.ObjectId,System.Object}
    content.vb: ReadOnly m_SyncedObjects As Dictionary(Of ObjectId, Object)
  modifiers.csharp:
  - readonly
  modifiers.vb:
  - ReadOnly
- uid: Coop.Mod.CoopClient.gameManager
  commentId: F:Coop.Mod.CoopClient.gameManager
  id: gameManager
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: gameManager
  nameWithType: CoopClient.gameManager
  fullName: Coop.Mod.CoopClient.gameManager
  type: Field
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: gameManager
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 52
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: MBGameManager gameManager
    return:
      type: TaleWorlds.MountAndBlade.MBGameManager
    content.vb: gameManager As MBGameManager
- uid: Coop.Mod.CoopClient.m_ReconnectAttempts
  commentId: F:Coop.Mod.CoopClient.m_ReconnectAttempts
  id: m_ReconnectAttempts
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: m_ReconnectAttempts
  nameWithType: CoopClient.m_ReconnectAttempts
  fullName: Coop.Mod.CoopClient.m_ReconnectAttempts
  type: Field
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_ReconnectAttempts
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 54
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: int m_ReconnectAttempts
    return:
      type: System.Int32
    content.vb: m_ReconnectAttempts As Integer
- uid: Coop.Mod.CoopClient.m_Hero
  commentId: F:Coop.Mod.CoopClient.m_Hero
  id: m_Hero
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: m_Hero
  nameWithType: CoopClient.m_Hero
  fullName: Coop.Mod.CoopClient.m_Hero
  type: Field
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_Hero
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 55
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: Hero m_Hero
    return:
      type: TaleWorlds.CampaignSystem.Hero
    content.vb: m_Hero As Hero
- uid: Coop.Mod.CoopClient.m_HeroId
  commentId: F:Coop.Mod.CoopClient.m_HeroId
  id: m_HeroId
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: m_HeroId
  nameWithType: CoopClient.m_HeroId
  fullName: Coop.Mod.CoopClient.m_HeroId
  type: Field
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_HeroId
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 56
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: ObjectId m_HeroId
    return:
      type: Sync.Store.ObjectId
    content.vb: m_HeroId As ObjectId
- uid: Coop.Mod.CoopClient.OnPersistenceInitialized
  commentId: F:Coop.Mod.CoopClient.OnPersistenceInitialized
  id: OnPersistenceInitialized
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: OnPersistenceInitialized
  nameWithType: CoopClient.OnPersistenceInitialized
  fullName: Coop.Mod.CoopClient.OnPersistenceInitialized
  type: Field
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: OnPersistenceInitialized
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 57
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public Action<PersistenceClient> OnPersistenceInitialized
    return:
      type: System.Action{Coop.Mod.Persistence.PersistenceClient}
    content.vb: Public OnPersistenceInitialized As Action(Of PersistenceClient)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Coop.Mod.CoopClient.RemoteStoreCreated
  commentId: F:Coop.Mod.CoopClient.RemoteStoreCreated
  id: RemoteStoreCreated
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: RemoteStoreCreated
  nameWithType: CoopClient.RemoteStoreCreated
  fullName: Coop.Mod.CoopClient.RemoteStoreCreated
  type: Field
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: RemoteStoreCreated
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 59
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public Action<RemoteStore> RemoteStoreCreated
    return:
      type: System.Action{Sync.Store.RemoteStore}
    content.vb: Public RemoteStoreCreated As Action(Of RemoteStore)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Coop.Mod.CoopClient.#ctor(Network.Infrastructure.ClientConfiguration)
  commentId: M:Coop.Mod.CoopClient.#ctor(Network.Infrastructure.ClientConfiguration)
  id: '#ctor(Network.Infrastructure.ClientConfiguration)'
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: CoopClient(ClientConfiguration)
  nameWithType: CoopClient.CoopClient(ClientConfiguration)
  fullName: Coop.Mod.CoopClient.CoopClient(Network.Infrastructure.ClientConfiguration)
  type: Constructor
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: .ctor
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 61
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public CoopClient(ClientConfiguration config)
    parameters:
    - id: config
      type: Network.Infrastructure.ClientConfiguration
    content.vb: Public Sub New(config As ClientConfiguration)
  overload: Coop.Mod.CoopClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Coop.Mod.CoopClient.SyncedObjectStore
  commentId: P:Coop.Mod.CoopClient.SyncedObjectStore
  id: SyncedObjectStore
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: SyncedObjectStore
  nameWithType: CoopClient.SyncedObjectStore
  fullName: Coop.Mod.CoopClient.SyncedObjectStore
  type: Property
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: SyncedObjectStore
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 84
  assemblies:
  - Coop
  namespace: Coop.Mod
  summary: "\nObject store shared with the server if connected. Otherwise null.\n"
  example: []
  syntax:
    content: >-
      [CanBeNull]

      public RemoteStore SyncedObjectStore { get; }
    parameters: []
    return:
      type: Sync.Store.RemoteStore
    content.vb: >-
      <CanBeNull>

      Public ReadOnly Property SyncedObjectStore As RemoteStore
  overload: Coop.Mod.CoopClient.SyncedObjectStore*
  attributes:
  - type: JetBrains.Annotations.CanBeNullAttribute
    ctor: JetBrains.Annotations.CanBeNullAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Coop.Mod.CoopClient.Persistence
  commentId: P:Coop.Mod.CoopClient.Persistence
  id: Persistence
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: Persistence
  nameWithType: CoopClient.Persistence
  fullName: Coop.Mod.CoopClient.Persistence
  type: Property
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Persistence
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 87
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: >-
      [CanBeNull]

      public PersistenceClient Persistence { get; }
    parameters: []
    return:
      type: Coop.Mod.Persistence.PersistenceClient
    content.vb: >-
      <CanBeNull>

      Public ReadOnly Property Persistence As PersistenceClient
  overload: Coop.Mod.CoopClient.Persistence*
  attributes:
  - type: JetBrains.Annotations.CanBeNullAttribute
    ctor: JetBrains.Annotations.CanBeNullAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Coop.Mod.CoopClient.Session
  commentId: P:Coop.Mod.CoopClient.Session
  id: Session
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: Session
  nameWithType: CoopClient.Session
  fullName: Coop.Mod.CoopClient.Session
  type: Property
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Session
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 89
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: >-
      [NotNull]

      public GameSession Session { get; }
    parameters: []
    return:
      type: Network.Infrastructure.GameSession
    content.vb: >-
      <NotNull>

      Public ReadOnly Property Session As GameSession
  overload: Coop.Mod.CoopClient.Session*
  attributes:
  - type: JetBrains.Annotations.NotNullAttribute
    ctor: JetBrains.Annotations.NotNullAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Coop.Mod.CoopClient.Instance
  commentId: P:Coop.Mod.CoopClient.Instance
  id: Instance
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: CoopClient.Instance
  fullName: Coop.Mod.CoopClient.Instance
  type: Property
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Instance
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 91
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public static CoopClient Instance { get; }
    parameters: []
    return:
      type: Coop.Mod.CoopClient
    content.vb: Public Shared ReadOnly Property Instance As CoopClient
  overload: Coop.Mod.CoopClient.Instance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Coop.Mod.CoopClient.GameState
  commentId: P:Coop.Mod.CoopClient.GameState
  id: GameState
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: GameState
  nameWithType: CoopClient.GameState
  fullName: Coop.Mod.CoopClient.GameState
  type: Property
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: GameState
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 93
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public CoopGameState GameState { get; }
    parameters: []
    return:
      type: Coop.Mod.CoopGameState
    content.vb: Public ReadOnly Property GameState As CoopGameState
  overload: Coop.Mod.CoopClient.GameState*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Coop.Mod.CoopClient.Events
  commentId: P:Coop.Mod.CoopClient.Events
  id: Events
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: Events
  nameWithType: CoopClient.Events
  fullName: Coop.Mod.CoopClient.Events
  type: Property
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Events
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 94
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public CoopEvents Events { get; }
    parameters: []
    return:
      type: Coop.Mod.CoopEvents
    content.vb: Public ReadOnly Property Events As CoopEvents
  overload: Coop.Mod.CoopClient.Events*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Coop.Mod.CoopClient.ClientConnected
  commentId: P:Coop.Mod.CoopClient.ClientConnected
  id: ClientConnected
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: ClientConnected
  nameWithType: CoopClient.ClientConnected
  fullName: Coop.Mod.CoopClient.ClientConnected
  type: Property
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ClientConnected
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 96
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public bool ClientConnected { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ClientConnected As Boolean
  overload: Coop.Mod.CoopClient.ClientConnected*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Coop.Mod.CoopClient.ClientPlaying
  commentId: P:Coop.Mod.CoopClient.ClientPlaying
  id: ClientPlaying
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: ClientPlaying
  nameWithType: CoopClient.ClientPlaying
  fullName: Coop.Mod.CoopClient.ClientPlaying
  type: Property
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ClientPlaying
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 109
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public bool ClientPlaying { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ClientPlaying As Boolean
  overload: Coop.Mod.CoopClient.ClientPlaying*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Coop.Mod.CoopClient.GetStore
  commentId: M:Coop.Mod.CoopClient.GetStore
  id: GetStore
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: GetStore()
  nameWithType: CoopClient.GetStore()
  fullName: Coop.Mod.CoopClient.GetStore()
  type: Method
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: GetStore
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 117
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public RemoteStore GetStore()
    return:
      type: Sync.Store.RemoteStore
    content.vb: Public Function GetStore As RemoteStore
  overload: Coop.Mod.CoopClient.GetStore*
  implements:
  - Coop.Mod.Persistence.RPC.IClientAccess.GetStore
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Coop.Mod.CoopClient.GetRoom
  commentId: M:Coop.Mod.CoopClient.GetRoom
  id: GetRoom
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: GetRoom()
  nameWithType: CoopClient.GetRoom()
  fullName: Coop.Mod.CoopClient.GetRoom()
  type: Method
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: GetRoom
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 122
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public RailClientRoom GetRoom()
    return:
      type: RailClientRoom
    content.vb: Public Function GetRoom As RailClientRoom
  overload: Coop.Mod.CoopClient.GetRoom*
  implements:
  - Coop.Mod.Persistence.RPC.IClientAccess.GetRoom
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Coop.Mod.CoopClient.Update(System.TimeSpan)
  commentId: M:Coop.Mod.CoopClient.Update(System.TimeSpan)
  id: Update(System.TimeSpan)
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: Update(TimeSpan)
  nameWithType: CoopClient.Update(TimeSpan)
  fullName: Coop.Mod.CoopClient.Update(System.TimeSpan)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Update
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 127
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public void Update(TimeSpan frameTime)
    parameters:
    - id: frameTime
      type: System.TimeSpan
    content.vb: Public Sub Update(frameTime As TimeSpan)
  overload: Coop.Mod.CoopClient.Update*
  implements:
  - Common.IUpdateable.Update(System.TimeSpan)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Coop.Mod.CoopClient.Connect(System.Net.IPAddress,System.Int32)
  commentId: M:Coop.Mod.CoopClient.Connect(System.Net.IPAddress,System.Int32)
  id: Connect(System.Net.IPAddress,System.Int32)
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: Connect(IPAddress, Int32)
  nameWithType: CoopClient.Connect(IPAddress, Int32)
  fullName: Coop.Mod.CoopClient.Connect(System.Net.IPAddress, System.Int32)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Connect
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 133
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public string Connect(IPAddress ip, int iPort)
    parameters:
    - id: ip
      type: System.Net.IPAddress
    - id: iPort
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Function Connect(ip As IPAddress, iPort As Integer) As String
  overload: Coop.Mod.CoopClient.Connect*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Coop.Mod.CoopClient.Disconnect
  commentId: M:Coop.Mod.CoopClient.Disconnect
  id: Disconnect
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: Disconnect()
  nameWithType: CoopClient.Disconnect()
  fullName: Coop.Mod.CoopClient.Disconnect()
  type: Method
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Disconnect
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 138
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public void Disconnect()
    content.vb: Public Sub Disconnect
  overload: Coop.Mod.CoopClient.Disconnect*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Coop.Mod.CoopClient.Init
  commentId: M:Coop.Mod.CoopClient.Init
  id: Init
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: Init()
  nameWithType: CoopClient.Init()
  fullName: Coop.Mod.CoopClient.Init()
  type: Method
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Init
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 143
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: void Init()
    content.vb: Sub Init
  overload: Coop.Mod.CoopClient.Init*
- uid: Coop.Mod.CoopClient.TryInitPersistence
  commentId: M:Coop.Mod.CoopClient.TryInitPersistence
  id: TryInitPersistence
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: TryInitPersistence()
  nameWithType: CoopClient.TryInitPersistence()
  fullName: Coop.Mod.CoopClient.TryInitPersistence()
  type: Method
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: TryInitPersistence
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 152
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: void TryInitPersistence()
    content.vb: Sub TryInitPersistence
  overload: Coop.Mod.CoopClient.TryInitPersistence*
- uid: Coop.Mod.CoopClient.ConnectionCreated(Network.Infrastructure.ConnectionClient)
  commentId: M:Coop.Mod.CoopClient.ConnectionCreated(Network.Infrastructure.ConnectionClient)
  id: ConnectionCreated(Network.Infrastructure.ConnectionClient)
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: ConnectionCreated(ConnectionClient)
  nameWithType: CoopClient.ConnectionCreated(ConnectionClient)
  fullName: Coop.Mod.CoopClient.ConnectionCreated(Network.Infrastructure.ConnectionClient)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ConnectionCreated
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 166
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: void ConnectionCreated(ConnectionClient con)
    parameters:
    - id: con
      type: Network.Infrastructure.ConnectionClient
    content.vb: Sub ConnectionCreated(con As ConnectionClient)
  overload: Coop.Mod.CoopClient.ConnectionCreated*
- uid: Coop.Mod.CoopClient.ConnectionEstablished(Network.Infrastructure.ConnectionClient)
  commentId: M:Coop.Mod.CoopClient.ConnectionEstablished(Network.Infrastructure.ConnectionClient)
  id: ConnectionEstablished(Network.Infrastructure.ConnectionClient)
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: ConnectionEstablished(ConnectionClient)
  nameWithType: CoopClient.ConnectionEstablished(ConnectionClient)
  fullName: Coop.Mod.CoopClient.ConnectionEstablished(Network.Infrastructure.ConnectionClient)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ConnectionEstablished
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 176
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: void ConnectionEstablished(ConnectionClient con)
    parameters:
    - id: con
      type: Network.Infrastructure.ConnectionClient
    content.vb: Sub ConnectionEstablished(con As ConnectionClient)
  overload: Coop.Mod.CoopClient.ConnectionEstablished*
- uid: Coop.Mod.CoopClient.CreateCharacter
  commentId: M:Coop.Mod.CoopClient.CreateCharacter
  id: CreateCharacter
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: CreateCharacter()
  nameWithType: CoopClient.CreateCharacter()
  fullName: Coop.Mod.CoopClient.CreateCharacter()
  type: Method
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: CreateCharacter
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 205
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: void CreateCharacter()
    content.vb: Sub CreateCharacter
  overload: Coop.Mod.CoopClient.CreateCharacter*
- uid: Coop.Mod.CoopClient.ConnectionClosed(Network.Infrastructure.EDisconnectReason)
  commentId: M:Coop.Mod.CoopClient.ConnectionClosed(Network.Infrastructure.EDisconnectReason)
  id: ConnectionClosed(Network.Infrastructure.EDisconnectReason)
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: ConnectionClosed(EDisconnectReason)
  nameWithType: CoopClient.ConnectionClosed(EDisconnectReason)
  fullName: Coop.Mod.CoopClient.ConnectionClosed(Network.Infrastructure.EDisconnectReason)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ConnectionClosed
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 229
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: void ConnectionClosed(EDisconnectReason eReason)
    parameters:
    - id: eReason
      type: Network.Infrastructure.EDisconnectReason
    content.vb: Sub ConnectionClosed(eReason As EDisconnectReason)
  overload: Coop.Mod.CoopClient.ConnectionClosed*
- uid: Coop.Mod.CoopClient.ConnectionDestroyed(Network.Infrastructure.EDisconnectReason)
  commentId: M:Coop.Mod.CoopClient.ConnectionDestroyed(Network.Infrastructure.EDisconnectReason)
  id: ConnectionDestroyed(Network.Infrastructure.EDisconnectReason)
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: ConnectionDestroyed(EDisconnectReason)
  nameWithType: CoopClient.ConnectionDestroyed(EDisconnectReason)
  fullName: Coop.Mod.CoopClient.ConnectionDestroyed(Network.Infrastructure.EDisconnectReason)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ConnectionDestroyed
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 235
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: void ConnectionDestroyed(EDisconnectReason eReason)
    parameters:
    - id: eReason
      type: Network.Infrastructure.EDisconnectReason
    content.vb: Sub ConnectionDestroyed(eReason As EDisconnectReason)
  overload: Coop.Mod.CoopClient.ConnectionDestroyed*
- uid: Coop.Mod.CoopClient.TryReconnect
  commentId: M:Coop.Mod.CoopClient.TryReconnect
  id: TryReconnect
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: TryReconnect()
  nameWithType: CoopClient.TryReconnect()
  fullName: Coop.Mod.CoopClient.TryReconnect()
  type: Method
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: TryReconnect
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 246
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: void TryReconnect()
    content.vb: Sub TryReconnect
  overload: Coop.Mod.CoopClient.TryReconnect*
- uid: Coop.Mod.CoopClient.CharacterCreationOver
  commentId: M:Coop.Mod.CoopClient.CharacterCreationOver
  id: CharacterCreationOver
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: CharacterCreationOver()
  nameWithType: CoopClient.CharacterCreationOver()
  fullName: Coop.Mod.CoopClient.CharacterCreationOver()
  type: Method
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: CharacterCreationOver
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 261
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public void CharacterCreationOver()
    content.vb: Public Sub CharacterCreationOver
  overload: Coop.Mod.CoopClient.CharacterCreationOver*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Coop.Mod.CoopClient.SendClientRequestInitialWorldData
  commentId: M:Coop.Mod.CoopClient.SendClientRequestInitialWorldData
  id: SendClientRequestInitialWorldData
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: SendClientRequestInitialWorldData()
  nameWithType: CoopClient.SendClientRequestInitialWorldData()
  fullName: Coop.Mod.CoopClient.SendClientRequestInitialWorldData()
  type: Method
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: SendClientRequestInitialWorldData
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 278
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: void SendClientRequestInitialWorldData()
    content.vb: Sub SendClientRequestInitialWorldData
  overload: Coop.Mod.CoopClient.SendClientRequestInitialWorldData*
- uid: Coop.Mod.CoopClient.ReceiveInitialWorldData(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  commentId: M:Coop.Mod.CoopClient.ReceiveInitialWorldData(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  id: ReceiveInitialWorldData(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: ReceiveInitialWorldData(ConnectionBase, Packet)
  nameWithType: CoopClient.ReceiveInitialWorldData(ConnectionBase, Packet)
  fullName: Coop.Mod.CoopClient.ReceiveInitialWorldData(Network.Infrastructure.ConnectionBase, Network.Protocol.Packet)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ReceiveInitialWorldData
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 299
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: >-
      [GameClientPacketHandler(ECoopClientState.ReceivingWorldData, EPacket.Server_WorldData)]

      void ReceiveInitialWorldData(ConnectionBase connection, Packet packet)
    parameters:
    - id: connection
      type: Network.Infrastructure.ConnectionBase
    - id: packet
      type: Network.Protocol.Packet
    content.vb: >-
      <GameClientPacketHandler(ECoopClientState.ReceivingWorldData, EPacket.Server_WorldData)>

      Sub ReceiveInitialWorldData(connection As ConnectionBase, packet As Packet)
  overload: Coop.Mod.CoopClient.ReceiveInitialWorldData*
  attributes:
  - type: Coop.Mod.GameClientPacketHandlerAttribute
    ctor: Coop.Mod.GameClientPacketHandlerAttribute.#ctor(Coop.Mod.ECoopClientState,Network.Protocol.EPacket)
    arguments:
    - type: Coop.Mod.ECoopClientState
      value: 2
    - type: Network.Protocol.EPacket
      value: 8
- uid: Coop.Mod.CoopClient.SendGameLoading
  commentId: M:Coop.Mod.CoopClient.SendGameLoading
  id: SendGameLoading
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: SendGameLoading()
  nameWithType: CoopClient.SendGameLoading()
  fullName: Coop.Mod.CoopClient.SendGameLoading()
  type: Method
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: SendGameLoading
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 338
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: void SendGameLoading()
    content.vb: Sub SendGameLoading
  overload: Coop.Mod.CoopClient.SendGameLoading*
- uid: Coop.Mod.CoopClient.SendGameLoaded
  commentId: M:Coop.Mod.CoopClient.SendGameLoaded
  id: SendGameLoaded
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: SendGameLoaded()
  nameWithType: CoopClient.SendGameLoaded()
  fullName: Coop.Mod.CoopClient.SendGameLoaded()
  type: Method
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: SendGameLoaded
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 349
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public void SendGameLoaded()
    content.vb: Public Sub SendGameLoaded
  overload: Coop.Mod.CoopClient.SendGameLoaded*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Coop.Mod.CoopClient.SendPlayerPartyChanged(TaleWorlds.CampaignSystem.Hero,TaleWorlds.CampaignSystem.MobileParty)
  commentId: M:Coop.Mod.CoopClient.SendPlayerPartyChanged(TaleWorlds.CampaignSystem.Hero,TaleWorlds.CampaignSystem.MobileParty)
  id: SendPlayerPartyChanged(TaleWorlds.CampaignSystem.Hero,TaleWorlds.CampaignSystem.MobileParty)
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: SendPlayerPartyChanged(Hero, MobileParty)
  nameWithType: CoopClient.SendPlayerPartyChanged(Hero, MobileParty)
  fullName: Coop.Mod.CoopClient.SendPlayerPartyChanged(TaleWorlds.CampaignSystem.Hero, TaleWorlds.CampaignSystem.MobileParty)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: SendPlayerPartyChanged
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 358
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: void SendPlayerPartyChanged(Hero hero, MobileParty party)
    parameters:
    - id: hero
      type: TaleWorlds.CampaignSystem.Hero
    - id: party
      type: TaleWorlds.CampaignSystem.MobileParty
    content.vb: Sub SendPlayerPartyChanged(hero As Hero, party As MobileParty)
  overload: Coop.Mod.CoopClient.SendPlayerPartyChanged*
- uid: Coop.Mod.CoopClient.ReceiveSyncPacket(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  commentId: M:Coop.Mod.CoopClient.ReceiveSyncPacket(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  id: ReceiveSyncPacket(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: ReceiveSyncPacket(ConnectionBase, Packet)
  nameWithType: CoopClient.ReceiveSyncPacket(ConnectionBase, Packet)
  fullName: Coop.Mod.CoopClient.ReceiveSyncPacket(Network.Infrastructure.ConnectionBase, Network.Protocol.Packet)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ReceiveSyncPacket
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 367
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: >-
      [GameClientPacketHandler(ECoopClientState.Playing, EPacket.Sync)]

      void ReceiveSyncPacket(ConnectionBase connection, Packet packet)
    parameters:
    - id: connection
      type: Network.Infrastructure.ConnectionBase
    - id: packet
      type: Network.Protocol.Packet
    content.vb: >-
      <GameClientPacketHandler(ECoopClientState.Playing, EPacket.Sync)>

      Sub ReceiveSyncPacket(connection As ConnectionBase, packet As Packet)
  overload: Coop.Mod.CoopClient.ReceiveSyncPacket*
  attributes:
  - type: Coop.Mod.GameClientPacketHandlerAttribute
    ctor: Coop.Mod.GameClientPacketHandlerAttribute.#ctor(Coop.Mod.ECoopClientState,Network.Protocol.EPacket)
    arguments:
    - type: Coop.Mod.ECoopClientState
      value: 4
    - type: Network.Protocol.EPacket
      value: 9
- uid: Coop.Mod.CoopClient.ToString
  commentId: M:Coop.Mod.CoopClient.ToString
  id: ToString
  parent: Coop.Mod.CoopClient
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: CoopClient.ToString()
  fullName: Coop.Mod.CoopClient.ToString()
  type: Method
  source:
    remote:
      path: source/Coop/Mod/CoopClient.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ToString
    path: ../source/Coop/Mod/CoopClient.cs
    startLine: 381
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Coop.Mod.CoopClient.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Coop.Mod
  commentId: N:Coop.Mod
  name: Coop.Mod
  nameWithType: Coop.Mod
  fullName: Coop.Mod
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Common.IUpdateable
  commentId: T:Common.IUpdateable
  parent: Common
  name: IUpdateable
  nameWithType: IUpdateable
  fullName: Common.IUpdateable
- uid: Coop.Mod.Persistence.RPC.IClientAccess
  commentId: T:Coop.Mod.Persistence.RPC.IClientAccess
  parent: Coop.Mod.Persistence.RPC
  name: IClientAccess
  nameWithType: IClientAccess
  fullName: Coop.Mod.Persistence.RPC.IClientAccess
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Common
  commentId: N:Common
  name: Common
  nameWithType: Common
  fullName: Common
- uid: Coop.Mod.Persistence.RPC
  commentId: N:Coop.Mod.Persistence.RPC
  name: Coop.Mod.Persistence.RPC
  nameWithType: Coop.Mod.Persistence.RPC
  fullName: Coop.Mod.Persistence.RPC
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: NLog.Logger
  commentId: T:NLog.Logger
  parent: NLog
  isExternal: true
  name: Logger
  nameWithType: Logger
  fullName: NLog.Logger
- uid: NLog
  commentId: N:NLog
  isExternal: true
  name: NLog
  nameWithType: NLog
  fullName: NLog
- uid: System.Lazy{Coop.Mod.CoopClient}
  commentId: T:System.Lazy{Coop.Mod.CoopClient}
  parent: System
  definition: System.Lazy`1
  name: Lazy<CoopClient>
  nameWithType: Lazy<CoopClient>
  fullName: System.Lazy<Coop.Mod.CoopClient>
  nameWithType.vb: Lazy(Of CoopClient)
  fullName.vb: System.Lazy(Of Coop.Mod.CoopClient)
  name.vb: Lazy(Of CoopClient)
  spec.csharp:
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Coop.Mod.CoopClient
    name: CoopClient
    nameWithType: CoopClient
    fullName: Coop.Mod.CoopClient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Coop.Mod.CoopClient
    name: CoopClient
    nameWithType: CoopClient
    fullName: Coop.Mod.CoopClient
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Lazy`1
  commentId: T:System.Lazy`1
  isExternal: true
  name: Lazy<T>
  nameWithType: Lazy<T>
  fullName: System.Lazy<T>
  nameWithType.vb: Lazy(Of T)
  fullName.vb: System.Lazy(Of T)
  name.vb: Lazy(Of T)
  spec.csharp:
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Coop.Mod.CoopClientSM
  commentId: T:Coop.Mod.CoopClientSM
  parent: Coop.Mod
  name: CoopClientSM
  nameWithType: CoopClientSM
  fullName: Coop.Mod.CoopClientSM
- uid: Coop.NetImpl.LiteNet.LiteNetManagerClient
  commentId: T:Coop.NetImpl.LiteNet.LiteNetManagerClient
  parent: Coop.NetImpl.LiteNet
  name: LiteNetManagerClient
  nameWithType: LiteNetManagerClient
  fullName: Coop.NetImpl.LiteNet.LiteNetManagerClient
- uid: Coop.NetImpl.LiteNet
  commentId: N:Coop.NetImpl.LiteNet
  name: Coop.NetImpl.LiteNet
  nameWithType: Coop.NetImpl.LiteNet
  fullName: Coop.NetImpl.LiteNet
- uid: Coop.Mod.CoopClient.SyncedObjectStore
  commentId: P:Coop.Mod.CoopClient.SyncedObjectStore
  isExternal: true
- uid: System.Collections.Generic.Dictionary{Sync.Store.ObjectId,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{Sync.Store.ObjectId,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<ObjectId, Object>
  nameWithType: Dictionary<ObjectId, Object>
  fullName: System.Collections.Generic.Dictionary<Sync.Store.ObjectId, System.Object>
  nameWithType.vb: Dictionary(Of ObjectId, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of Sync.Store.ObjectId, System.Object)
  name.vb: Dictionary(Of ObjectId, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sync.Store.ObjectId
    name: ObjectId
    nameWithType: ObjectId
    fullName: Sync.Store.ObjectId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sync.Store.ObjectId
    name: ObjectId
    nameWithType: ObjectId
    fullName: Sync.Store.ObjectId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TaleWorlds.MountAndBlade.MBGameManager
  commentId: T:TaleWorlds.MountAndBlade.MBGameManager
  parent: TaleWorlds.MountAndBlade
  isExternal: true
  name: MBGameManager
  nameWithType: MBGameManager
  fullName: TaleWorlds.MountAndBlade.MBGameManager
- uid: TaleWorlds.MountAndBlade
  commentId: N:TaleWorlds.MountAndBlade
  isExternal: true
  name: TaleWorlds.MountAndBlade
  nameWithType: TaleWorlds.MountAndBlade
  fullName: TaleWorlds.MountAndBlade
- uid: TaleWorlds.CampaignSystem.Hero
  commentId: T:TaleWorlds.CampaignSystem.Hero
  parent: TaleWorlds.CampaignSystem
  isExternal: true
  name: Hero
  nameWithType: Hero
  fullName: TaleWorlds.CampaignSystem.Hero
- uid: TaleWorlds.CampaignSystem
  commentId: N:TaleWorlds.CampaignSystem
  isExternal: true
  name: TaleWorlds.CampaignSystem
  nameWithType: TaleWorlds.CampaignSystem
  fullName: TaleWorlds.CampaignSystem
- uid: Sync.Store.ObjectId
  commentId: T:Sync.Store.ObjectId
  parent: Sync.Store
  name: ObjectId
  nameWithType: ObjectId
  fullName: Sync.Store.ObjectId
- uid: Sync.Store
  commentId: N:Sync.Store
  name: Sync.Store
  nameWithType: Sync.Store
  fullName: Sync.Store
- uid: System.Action{Coop.Mod.Persistence.PersistenceClient}
  commentId: T:System.Action{Coop.Mod.Persistence.PersistenceClient}
  parent: System
  definition: System.Action`1
  name: Action<PersistenceClient>
  nameWithType: Action<PersistenceClient>
  fullName: System.Action<Coop.Mod.Persistence.PersistenceClient>
  nameWithType.vb: Action(Of PersistenceClient)
  fullName.vb: System.Action(Of Coop.Mod.Persistence.PersistenceClient)
  name.vb: Action(Of PersistenceClient)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Coop.Mod.Persistence.PersistenceClient
    name: PersistenceClient
    nameWithType: PersistenceClient
    fullName: Coop.Mod.Persistence.PersistenceClient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Coop.Mod.Persistence.PersistenceClient
    name: PersistenceClient
    nameWithType: PersistenceClient
    fullName: Coop.Mod.Persistence.PersistenceClient
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{Sync.Store.RemoteStore}
  commentId: T:System.Action{Sync.Store.RemoteStore}
  parent: System
  definition: System.Action`1
  name: Action<RemoteStore>
  nameWithType: Action<RemoteStore>
  fullName: System.Action<Sync.Store.RemoteStore>
  nameWithType.vb: Action(Of RemoteStore)
  fullName.vb: System.Action(Of Sync.Store.RemoteStore)
  name.vb: Action(Of RemoteStore)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sync.Store.RemoteStore
    name: RemoteStore
    nameWithType: RemoteStore
    fullName: Sync.Store.RemoteStore
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sync.Store.RemoteStore
    name: RemoteStore
    nameWithType: RemoteStore
    fullName: Sync.Store.RemoteStore
  - name: )
    nameWithType: )
    fullName: )
- uid: Coop.Mod.CoopClient.#ctor*
  commentId: Overload:Coop.Mod.CoopClient.#ctor
  name: CoopClient
  nameWithType: CoopClient.CoopClient
  fullName: Coop.Mod.CoopClient.CoopClient
- uid: Network.Infrastructure.ClientConfiguration
  commentId: T:Network.Infrastructure.ClientConfiguration
  parent: Network.Infrastructure
  name: ClientConfiguration
  nameWithType: ClientConfiguration
  fullName: Network.Infrastructure.ClientConfiguration
- uid: Network.Infrastructure
  commentId: N:Network.Infrastructure
  name: Network.Infrastructure
  nameWithType: Network.Infrastructure
  fullName: Network.Infrastructure
- uid: Coop.Mod.CoopClient.SyncedObjectStore*
  commentId: Overload:Coop.Mod.CoopClient.SyncedObjectStore
  name: SyncedObjectStore
  nameWithType: CoopClient.SyncedObjectStore
  fullName: Coop.Mod.CoopClient.SyncedObjectStore
- uid: Sync.Store.RemoteStore
  commentId: T:Sync.Store.RemoteStore
  parent: Sync.Store
  name: RemoteStore
  nameWithType: RemoteStore
  fullName: Sync.Store.RemoteStore
- uid: Coop.Mod.CoopClient.Persistence*
  commentId: Overload:Coop.Mod.CoopClient.Persistence
  name: Persistence
  nameWithType: CoopClient.Persistence
  fullName: Coop.Mod.CoopClient.Persistence
- uid: Coop.Mod.Persistence.PersistenceClient
  commentId: T:Coop.Mod.Persistence.PersistenceClient
  parent: Coop.Mod.Persistence
  name: PersistenceClient
  nameWithType: PersistenceClient
  fullName: Coop.Mod.Persistence.PersistenceClient
- uid: Coop.Mod.Persistence
  commentId: N:Coop.Mod.Persistence
  name: Coop.Mod.Persistence
  nameWithType: Coop.Mod.Persistence
  fullName: Coop.Mod.Persistence
- uid: Coop.Mod.CoopClient.Session*
  commentId: Overload:Coop.Mod.CoopClient.Session
  name: Session
  nameWithType: CoopClient.Session
  fullName: Coop.Mod.CoopClient.Session
- uid: Network.Infrastructure.GameSession
  commentId: T:Network.Infrastructure.GameSession
  parent: Network.Infrastructure
  name: GameSession
  nameWithType: GameSession
  fullName: Network.Infrastructure.GameSession
- uid: Coop.Mod.CoopClient.Instance*
  commentId: Overload:Coop.Mod.CoopClient.Instance
  name: Instance
  nameWithType: CoopClient.Instance
  fullName: Coop.Mod.CoopClient.Instance
- uid: Coop.Mod.CoopClient
  commentId: T:Coop.Mod.CoopClient
  parent: Coop.Mod
  name: CoopClient
  nameWithType: CoopClient
  fullName: Coop.Mod.CoopClient
- uid: Coop.Mod.CoopClient.GameState*
  commentId: Overload:Coop.Mod.CoopClient.GameState
  name: GameState
  nameWithType: CoopClient.GameState
  fullName: Coop.Mod.CoopClient.GameState
- uid: Coop.Mod.CoopGameState
  commentId: T:Coop.Mod.CoopGameState
  parent: Coop.Mod
  name: CoopGameState
  nameWithType: CoopGameState
  fullName: Coop.Mod.CoopGameState
- uid: Coop.Mod.CoopClient.Events*
  commentId: Overload:Coop.Mod.CoopClient.Events
  name: Events
  nameWithType: CoopClient.Events
  fullName: Coop.Mod.CoopClient.Events
- uid: Coop.Mod.CoopEvents
  commentId: T:Coop.Mod.CoopEvents
  parent: Coop.Mod
  name: CoopEvents
  nameWithType: CoopEvents
  fullName: Coop.Mod.CoopEvents
- uid: Coop.Mod.CoopClient.ClientConnected*
  commentId: Overload:Coop.Mod.CoopClient.ClientConnected
  name: ClientConnected
  nameWithType: CoopClient.ClientConnected
  fullName: Coop.Mod.CoopClient.ClientConnected
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Coop.Mod.CoopClient.ClientPlaying*
  commentId: Overload:Coop.Mod.CoopClient.ClientPlaying
  name: ClientPlaying
  nameWithType: CoopClient.ClientPlaying
  fullName: Coop.Mod.CoopClient.ClientPlaying
- uid: Coop.Mod.CoopClient.GetStore*
  commentId: Overload:Coop.Mod.CoopClient.GetStore
  name: GetStore
  nameWithType: CoopClient.GetStore
  fullName: Coop.Mod.CoopClient.GetStore
- uid: Coop.Mod.Persistence.RPC.IClientAccess.GetStore
  commentId: M:Coop.Mod.Persistence.RPC.IClientAccess.GetStore
  parent: Coop.Mod.Persistence.RPC.IClientAccess
  name: GetStore()
  nameWithType: IClientAccess.GetStore()
  fullName: Coop.Mod.Persistence.RPC.IClientAccess.GetStore()
  spec.csharp:
  - uid: Coop.Mod.Persistence.RPC.IClientAccess.GetStore
    name: GetStore
    nameWithType: IClientAccess.GetStore
    fullName: Coop.Mod.Persistence.RPC.IClientAccess.GetStore
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Coop.Mod.Persistence.RPC.IClientAccess.GetStore
    name: GetStore
    nameWithType: IClientAccess.GetStore
    fullName: Coop.Mod.Persistence.RPC.IClientAccess.GetStore
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Coop.Mod.CoopClient.GetRoom*
  commentId: Overload:Coop.Mod.CoopClient.GetRoom
  name: GetRoom
  nameWithType: CoopClient.GetRoom
  fullName: Coop.Mod.CoopClient.GetRoom
- uid: Coop.Mod.Persistence.RPC.IClientAccess.GetRoom
  commentId: M:Coop.Mod.Persistence.RPC.IClientAccess.GetRoom
  parent: Coop.Mod.Persistence.RPC.IClientAccess
  name: GetRoom()
  nameWithType: IClientAccess.GetRoom()
  fullName: Coop.Mod.Persistence.RPC.IClientAccess.GetRoom()
  spec.csharp:
  - uid: Coop.Mod.Persistence.RPC.IClientAccess.GetRoom
    name: GetRoom
    nameWithType: IClientAccess.GetRoom
    fullName: Coop.Mod.Persistence.RPC.IClientAccess.GetRoom
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Coop.Mod.Persistence.RPC.IClientAccess.GetRoom
    name: GetRoom
    nameWithType: IClientAccess.GetRoom
    fullName: Coop.Mod.Persistence.RPC.IClientAccess.GetRoom
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: RailClientRoom
  isExternal: true
  name: RailClientRoom
  nameWithType: RailClientRoom
  fullName: RailClientRoom
- uid: Coop.Mod.CoopClient.Update*
  commentId: Overload:Coop.Mod.CoopClient.Update
  name: Update
  nameWithType: CoopClient.Update
  fullName: Coop.Mod.CoopClient.Update
- uid: Common.IUpdateable.Update(System.TimeSpan)
  commentId: M:Common.IUpdateable.Update(System.TimeSpan)
  parent: Common.IUpdateable
  isExternal: true
  name: Update(TimeSpan)
  nameWithType: IUpdateable.Update(TimeSpan)
  fullName: Common.IUpdateable.Update(System.TimeSpan)
  spec.csharp:
  - uid: Common.IUpdateable.Update(System.TimeSpan)
    name: Update
    nameWithType: IUpdateable.Update
    fullName: Common.IUpdateable.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Common.IUpdateable.Update(System.TimeSpan)
    name: Update
    nameWithType: IUpdateable.Update
    fullName: Common.IUpdateable.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Coop.Mod.CoopClient.Connect*
  commentId: Overload:Coop.Mod.CoopClient.Connect
  name: Connect
  nameWithType: CoopClient.Connect
  fullName: Coop.Mod.CoopClient.Connect
- uid: System.Net.IPAddress
  commentId: T:System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: Coop.Mod.CoopClient.Disconnect*
  commentId: Overload:Coop.Mod.CoopClient.Disconnect
  name: Disconnect
  nameWithType: CoopClient.Disconnect
  fullName: Coop.Mod.CoopClient.Disconnect
- uid: Coop.Mod.CoopClient.Init*
  commentId: Overload:Coop.Mod.CoopClient.Init
  name: Init
  nameWithType: CoopClient.Init
  fullName: Coop.Mod.CoopClient.Init
- uid: Coop.Mod.CoopClient.TryInitPersistence*
  commentId: Overload:Coop.Mod.CoopClient.TryInitPersistence
  name: TryInitPersistence
  nameWithType: CoopClient.TryInitPersistence
  fullName: Coop.Mod.CoopClient.TryInitPersistence
- uid: Coop.Mod.CoopClient.ConnectionCreated*
  commentId: Overload:Coop.Mod.CoopClient.ConnectionCreated
  name: ConnectionCreated
  nameWithType: CoopClient.ConnectionCreated
  fullName: Coop.Mod.CoopClient.ConnectionCreated
- uid: Network.Infrastructure.ConnectionClient
  commentId: T:Network.Infrastructure.ConnectionClient
  parent: Network.Infrastructure
  name: ConnectionClient
  nameWithType: ConnectionClient
  fullName: Network.Infrastructure.ConnectionClient
- uid: Coop.Mod.CoopClient.ConnectionEstablished*
  commentId: Overload:Coop.Mod.CoopClient.ConnectionEstablished
  name: ConnectionEstablished
  nameWithType: CoopClient.ConnectionEstablished
  fullName: Coop.Mod.CoopClient.ConnectionEstablished
- uid: Coop.Mod.CoopClient.CreateCharacter*
  commentId: Overload:Coop.Mod.CoopClient.CreateCharacter
  name: CreateCharacter
  nameWithType: CoopClient.CreateCharacter
  fullName: Coop.Mod.CoopClient.CreateCharacter
- uid: Coop.Mod.CoopClient.ConnectionClosed*
  commentId: Overload:Coop.Mod.CoopClient.ConnectionClosed
  name: ConnectionClosed
  nameWithType: CoopClient.ConnectionClosed
  fullName: Coop.Mod.CoopClient.ConnectionClosed
- uid: Network.Infrastructure.EDisconnectReason
  commentId: T:Network.Infrastructure.EDisconnectReason
  parent: Network.Infrastructure
  name: EDisconnectReason
  nameWithType: EDisconnectReason
  fullName: Network.Infrastructure.EDisconnectReason
- uid: Coop.Mod.CoopClient.ConnectionDestroyed*
  commentId: Overload:Coop.Mod.CoopClient.ConnectionDestroyed
  name: ConnectionDestroyed
  nameWithType: CoopClient.ConnectionDestroyed
  fullName: Coop.Mod.CoopClient.ConnectionDestroyed
- uid: Coop.Mod.CoopClient.TryReconnect*
  commentId: Overload:Coop.Mod.CoopClient.TryReconnect
  name: TryReconnect
  nameWithType: CoopClient.TryReconnect
  fullName: Coop.Mod.CoopClient.TryReconnect
- uid: Coop.Mod.CoopClient.CharacterCreationOver*
  commentId: Overload:Coop.Mod.CoopClient.CharacterCreationOver
  name: CharacterCreationOver
  nameWithType: CoopClient.CharacterCreationOver
  fullName: Coop.Mod.CoopClient.CharacterCreationOver
- uid: Coop.Mod.CoopClient.SendClientRequestInitialWorldData*
  commentId: Overload:Coop.Mod.CoopClient.SendClientRequestInitialWorldData
  name: SendClientRequestInitialWorldData
  nameWithType: CoopClient.SendClientRequestInitialWorldData
  fullName: Coop.Mod.CoopClient.SendClientRequestInitialWorldData
- uid: Coop.Mod.CoopClient.ReceiveInitialWorldData*
  commentId: Overload:Coop.Mod.CoopClient.ReceiveInitialWorldData
  name: ReceiveInitialWorldData
  nameWithType: CoopClient.ReceiveInitialWorldData
  fullName: Coop.Mod.CoopClient.ReceiveInitialWorldData
- uid: Network.Infrastructure.ConnectionBase
  commentId: T:Network.Infrastructure.ConnectionBase
  parent: Network.Infrastructure
  name: ConnectionBase
  nameWithType: ConnectionBase
  fullName: Network.Infrastructure.ConnectionBase
- uid: Network.Protocol.Packet
  commentId: T:Network.Protocol.Packet
  parent: Network.Protocol
  name: Packet
  nameWithType: Packet
  fullName: Network.Protocol.Packet
- uid: Network.Protocol
  commentId: N:Network.Protocol
  name: Network.Protocol
  nameWithType: Network.Protocol
  fullName: Network.Protocol
- uid: Coop.Mod.CoopClient.SendGameLoading*
  commentId: Overload:Coop.Mod.CoopClient.SendGameLoading
  name: SendGameLoading
  nameWithType: CoopClient.SendGameLoading
  fullName: Coop.Mod.CoopClient.SendGameLoading
- uid: Coop.Mod.CoopClient.SendGameLoaded*
  commentId: Overload:Coop.Mod.CoopClient.SendGameLoaded
  name: SendGameLoaded
  nameWithType: CoopClient.SendGameLoaded
  fullName: Coop.Mod.CoopClient.SendGameLoaded
- uid: Coop.Mod.CoopClient.SendPlayerPartyChanged*
  commentId: Overload:Coop.Mod.CoopClient.SendPlayerPartyChanged
  name: SendPlayerPartyChanged
  nameWithType: CoopClient.SendPlayerPartyChanged
  fullName: Coop.Mod.CoopClient.SendPlayerPartyChanged
- uid: TaleWorlds.CampaignSystem.MobileParty
  commentId: T:TaleWorlds.CampaignSystem.MobileParty
  parent: TaleWorlds.CampaignSystem
  isExternal: true
  name: MobileParty
  nameWithType: MobileParty
  fullName: TaleWorlds.CampaignSystem.MobileParty
- uid: Coop.Mod.CoopClient.ReceiveSyncPacket*
  commentId: Overload:Coop.Mod.CoopClient.ReceiveSyncPacket
  name: ReceiveSyncPacket
  nameWithType: CoopClient.ReceiveSyncPacket
  fullName: Coop.Mod.CoopClient.ReceiveSyncPacket
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Coop.Mod.CoopClient.ToString*
  commentId: Overload:Coop.Mod.CoopClient.ToString
  name: ToString
  nameWithType: CoopClient.ToString
  fullName: Coop.Mod.CoopClient.ToString
