### YamlMime:ManagedReference
items:
- uid: Network.Protocol.PacketWriter
  commentId: T:Network.Protocol.PacketWriter
  id: PacketWriter
  parent: Network.Protocol
  children:
  - Network.Protocol.PacketWriter.#ctor(Network.Protocol.Packet)
  - Network.Protocol.PacketWriter.Done
  - Network.Protocol.PacketWriter.EncodePacketType(Network.Protocol.EPacket)
  - Network.Protocol.PacketWriter.HeaderByte
  - Network.Protocol.PacketWriter.m_iNumberOfWrittenPayloadBytes
  - Network.Protocol.PacketWriter.m_Packet
  - Network.Protocol.PacketWriter.Write(System.IO.BinaryWriter)
  - Network.Protocol.PacketWriter.Write(System.IO.BinaryWriter,System.Int32)
  langs:
  - csharp
  - vb
  name: PacketWriter
  nameWithType: PacketWriter
  fullName: Network.Protocol.PacketWriter
  type: Class
  source:
    remote:
      path: source/Network/Protocol/Packet.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: PacketWriter
    path: ../source/Network/Protocol/Packet.cs
    startLine: 37
  assemblies:
  - Network
  namespace: Network.Protocol
  syntax:
    content: public class PacketWriter
    content.vb: Public Class PacketWriter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Network.Protocol.PacketWriter.m_Packet
  commentId: F:Network.Protocol.PacketWriter.m_Packet
  id: m_Packet
  parent: Network.Protocol.PacketWriter
  langs:
  - csharp
  - vb
  name: m_Packet
  nameWithType: PacketWriter.m_Packet
  fullName: Network.Protocol.PacketWriter.m_Packet
  type: Field
  source:
    remote:
      path: source/Network/Protocol/Packet.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_Packet
    path: ../source/Network/Protocol/Packet.cs
    startLine: 39
  assemblies:
  - Network
  namespace: Network.Protocol
  syntax:
    content: readonly Packet m_Packet
    return:
      type: Network.Protocol.Packet
    content.vb: ReadOnly m_Packet As Packet
  modifiers.csharp:
  - readonly
  modifiers.vb:
  - ReadOnly
- uid: Network.Protocol.PacketWriter.m_iNumberOfWrittenPayloadBytes
  commentId: F:Network.Protocol.PacketWriter.m_iNumberOfWrittenPayloadBytes
  id: m_iNumberOfWrittenPayloadBytes
  parent: Network.Protocol.PacketWriter
  langs:
  - csharp
  - vb
  name: m_iNumberOfWrittenPayloadBytes
  nameWithType: PacketWriter.m_iNumberOfWrittenPayloadBytes
  fullName: Network.Protocol.PacketWriter.m_iNumberOfWrittenPayloadBytes
  type: Field
  source:
    remote:
      path: source/Network/Protocol/Packet.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_iNumberOfWrittenPayloadBytes
    path: ../source/Network/Protocol/Packet.cs
    startLine: 40
  assemblies:
  - Network
  namespace: Network.Protocol
  syntax:
    content: int m_iNumberOfWrittenPayloadBytes
    return:
      type: System.Int32
    content.vb: m_iNumberOfWrittenPayloadBytes As Integer
- uid: Network.Protocol.PacketWriter.#ctor(Network.Protocol.Packet)
  commentId: M:Network.Protocol.PacketWriter.#ctor(Network.Protocol.Packet)
  id: '#ctor(Network.Protocol.Packet)'
  parent: Network.Protocol.PacketWriter
  langs:
  - csharp
  - vb
  name: PacketWriter(Packet)
  nameWithType: PacketWriter.PacketWriter(Packet)
  fullName: Network.Protocol.PacketWriter.PacketWriter(Network.Protocol.Packet)
  type: Constructor
  source:
    remote:
      path: source/Network/Protocol/Packet.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: .ctor
    path: ../source/Network/Protocol/Packet.cs
    startLine: 42
  assemblies:
  - Network
  namespace: Network.Protocol
  syntax:
    content: public PacketWriter(Packet packet)
    parameters:
    - id: packet
      type: Network.Protocol.Packet
    content.vb: Public Sub New(packet As Packet)
  overload: Network.Protocol.PacketWriter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Network.Protocol.PacketWriter.Done
  commentId: P:Network.Protocol.PacketWriter.Done
  id: Done
  parent: Network.Protocol.PacketWriter
  langs:
  - csharp
  - vb
  name: Done
  nameWithType: PacketWriter.Done
  fullName: Network.Protocol.PacketWriter.Done
  type: Property
  source:
    remote:
      path: source/Network/Protocol/Packet.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Done
    path: ../source/Network/Protocol/Packet.cs
    startLine: 50
  assemblies:
  - Network
  namespace: Network.Protocol
  summary: "\nWas the whole payload of the package serialized?\n"
  example: []
  syntax:
    content: public bool Done { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Done As Boolean
  overload: Network.Protocol.PacketWriter.Done*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Network.Protocol.PacketWriter.HeaderByte
  commentId: P:Network.Protocol.PacketWriter.HeaderByte
  id: HeaderByte
  parent: Network.Protocol.PacketWriter
  langs:
  - csharp
  - vb
  name: HeaderByte
  nameWithType: PacketWriter.HeaderByte
  fullName: Network.Protocol.PacketWriter.HeaderByte
  type: Property
  source:
    remote:
      path: source/Network/Protocol/Packet.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: HeaderByte
    path: ../source/Network/Protocol/Packet.cs
    startLine: 52
  assemblies:
  - Network
  namespace: Network.Protocol
  syntax:
    content: >-
      byte HeaderByte

      {

      }
    parameters: []
    return:
      type: System.Byte
    content.vb: ReadOnly WriteOnly Property HeaderByte As Byte
  overload: Network.Protocol.PacketWriter.HeaderByte*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Network.Protocol.PacketWriter.EncodePacketType(Network.Protocol.EPacket)
  commentId: M:Network.Protocol.PacketWriter.EncodePacketType(Network.Protocol.EPacket)
  id: EncodePacketType(Network.Protocol.EPacket)
  parent: Network.Protocol.PacketWriter
  langs:
  - csharp
  - vb
  name: EncodePacketType(EPacket)
  nameWithType: PacketWriter.EncodePacketType(EPacket)
  fullName: Network.Protocol.PacketWriter.EncodePacketType(Network.Protocol.EPacket)
  type: Method
  source:
    remote:
      path: source/Network/Protocol/Packet.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: EncodePacketType
    path: ../source/Network/Protocol/Packet.cs
    startLine: 54
  assemblies:
  - Network
  namespace: Network.Protocol
  syntax:
    content: public static byte EncodePacketType(EPacket eType)
    parameters:
    - id: eType
      type: Network.Protocol.EPacket
    return:
      type: System.Byte
    content.vb: Public Shared Function EncodePacketType(eType As EPacket) As Byte
  overload: Network.Protocol.PacketWriter.EncodePacketType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Network.Protocol.PacketWriter.Write(System.IO.BinaryWriter)
  commentId: M:Network.Protocol.PacketWriter.Write(System.IO.BinaryWriter)
  id: Write(System.IO.BinaryWriter)
  parent: Network.Protocol.PacketWriter
  langs:
  - csharp
  - vb
  name: Write(BinaryWriter)
  nameWithType: PacketWriter.Write(BinaryWriter)
  fullName: Network.Protocol.PacketWriter.Write(System.IO.BinaryWriter)
  type: Method
  source:
    remote:
      path: source/Network/Protocol/Packet.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Write
    path: ../source/Network/Protocol/Packet.cs
    startLine: 63
  assemblies:
  - Network
  namespace: Network.Protocol
  summary: "\nWrites the whole package to the provided writer.\n"
  example: []
  syntax:
    content: public void Write(BinaryWriter writer)
    parameters:
    - id: writer
      type: System.IO.BinaryWriter
      description: ''
    content.vb: Public Sub Write(writer As BinaryWriter)
  overload: Network.Protocol.PacketWriter.Write*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Network.Protocol.PacketWriter.Write(System.IO.BinaryWriter,System.Int32)
  commentId: M:Network.Protocol.PacketWriter.Write(System.IO.BinaryWriter,System.Int32)
  id: Write(System.IO.BinaryWriter,System.Int32)
  parent: Network.Protocol.PacketWriter
  langs:
  - csharp
  - vb
  name: Write(BinaryWriter, Int32)
  nameWithType: PacketWriter.Write(BinaryWriter, Int32)
  fullName: Network.Protocol.PacketWriter.Write(System.IO.BinaryWriter, System.Int32)
  type: Method
  source:
    remote:
      path: source/Network/Protocol/Packet.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Write
    path: ../source/Network/Protocol/Packet.cs
    startLine: 76
  assemblies:
  - Network
  namespace: Network.Protocol
  summary: "\nWrites at most <see cref=\"!:iNumberOfBytes\"></see> (including meta data) to the given\nBinaryWriter. If the package length is longer than <see cref=\"!:iNumberOfBytes\"></see>\nit will be fragmented.\nFor fragmented packages, call this function until <xref href=\"Network.Protocol.PacketWriter.Done\" data-throw-if-not-resolved=\"false\"></xref> returns true.\n"
  example: []
  syntax:
    content: public void Write(BinaryWriter writer, int iNumberOfBytes)
    parameters:
    - id: writer
      type: System.IO.BinaryWriter
      description: ''
    - id: iNumberOfBytes
      type: System.Int32
      description: Maximum number of bytes that may be written.
    content.vb: Public Sub Write(writer As BinaryWriter, iNumberOfBytes As Integer)
  overload: Network.Protocol.PacketWriter.Write*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Network.Protocol
  commentId: N:Network.Protocol
  name: Network.Protocol
  nameWithType: Network.Protocol
  fullName: Network.Protocol
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Network.Protocol.Packet
  commentId: T:Network.Protocol.Packet
  parent: Network.Protocol
  name: Packet
  nameWithType: Packet
  fullName: Network.Protocol.Packet
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Network.Protocol.PacketWriter.#ctor*
  commentId: Overload:Network.Protocol.PacketWriter.#ctor
  name: PacketWriter
  nameWithType: PacketWriter.PacketWriter
  fullName: Network.Protocol.PacketWriter.PacketWriter
- uid: Network.Protocol.PacketWriter.Done*
  commentId: Overload:Network.Protocol.PacketWriter.Done
  name: Done
  nameWithType: PacketWriter.Done
  fullName: Network.Protocol.PacketWriter.Done
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Network.Protocol.PacketWriter.HeaderByte*
  commentId: Overload:Network.Protocol.PacketWriter.HeaderByte
  name: HeaderByte
  nameWithType: PacketWriter.HeaderByte
  fullName: Network.Protocol.PacketWriter.HeaderByte
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: Network.Protocol.PacketWriter.EncodePacketType*
  commentId: Overload:Network.Protocol.PacketWriter.EncodePacketType
  name: EncodePacketType
  nameWithType: PacketWriter.EncodePacketType
  fullName: Network.Protocol.PacketWriter.EncodePacketType
- uid: Network.Protocol.EPacket
  commentId: T:Network.Protocol.EPacket
  parent: Network.Protocol
  name: EPacket
  nameWithType: EPacket
  fullName: Network.Protocol.EPacket
- uid: Network.Protocol.PacketWriter.Write*
  commentId: Overload:Network.Protocol.PacketWriter.Write
  name: Write
  nameWithType: PacketWriter.Write
  fullName: Network.Protocol.PacketWriter.Write
- uid: System.IO.BinaryWriter
  commentId: T:System.IO.BinaryWriter
  parent: System.IO
  isExternal: true
  name: BinaryWriter
  nameWithType: BinaryWriter
  fullName: System.IO.BinaryWriter
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Network.Protocol.PacketWriter.Done
  commentId: P:Network.Protocol.PacketWriter.Done
  isExternal: true
