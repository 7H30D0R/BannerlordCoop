### YamlMime:ManagedReference
items:
- uid: Coop.NetImpl.LiteNet.Extensions
  commentId: T:Coop.NetImpl.LiteNet.Extensions
  id: Extensions
  parent: Coop.NetImpl.LiteNet
  children:
  - Coop.NetImpl.LiteNet.Extensions.GetConnection(NetPeer)
  - Coop.NetImpl.LiteNet.Extensions.GetReason(DisconnectInfo,System.Boolean)
  - Coop.NetImpl.LiteNet.Extensions.ToFriendlyString(ConnectionRequest)
  - Coop.NetImpl.LiteNet.Extensions.ToFriendlyString(System.Net.IPEndPoint)
  langs:
  - csharp
  - vb
  name: Extensions
  nameWithType: Extensions
  fullName: Coop.NetImpl.LiteNet.Extensions
  type: Class
  source:
    remote:
      path: source/Coop/NetImpl/LiteNet/Extensions.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Extensions
    path: ../source/Coop/NetImpl/LiteNet/Extensions.cs
    startLine: 6
  assemblies:
  - Coop
  namespace: Coop.NetImpl.LiteNet
  syntax:
    content: public static class Extensions
    content.vb: Public Module Extensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Coop.NetImpl.LiteNet.Extensions.GetConnection(NetPeer)
  commentId: M:Coop.NetImpl.LiteNet.Extensions.GetConnection(NetPeer)
  id: GetConnection(NetPeer)
  isExtensionMethod: true
  parent: Coop.NetImpl.LiteNet.Extensions
  langs:
  - csharp
  - vb
  name: GetConnection(NetPeer)
  nameWithType: Extensions.GetConnection(NetPeer)
  fullName: Coop.NetImpl.LiteNet.Extensions.GetConnection(NetPeer)
  type: Method
  source:
    remote:
      path: source/Coop/NetImpl/LiteNet/Extensions.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: GetConnection
    path: ../source/Coop/NetImpl/LiteNet/Extensions.cs
    startLine: 8
  assemblies:
  - Coop
  namespace: Coop.NetImpl.LiteNet
  syntax:
    content: public static ConnectionBase GetConnection(this NetPeer peer)
    parameters:
    - id: peer
      type: NetPeer
    return:
      type: Network.Infrastructure.ConnectionBase
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetConnection(peer As NetPeer) As ConnectionBase
  overload: Coop.NetImpl.LiteNet.Extensions.GetConnection*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Coop.NetImpl.LiteNet.Extensions.ToFriendlyString(System.Net.IPEndPoint)
  commentId: M:Coop.NetImpl.LiteNet.Extensions.ToFriendlyString(System.Net.IPEndPoint)
  id: ToFriendlyString(System.Net.IPEndPoint)
  isExtensionMethod: true
  parent: Coop.NetImpl.LiteNet.Extensions
  langs:
  - csharp
  - vb
  name: ToFriendlyString(IPEndPoint)
  nameWithType: Extensions.ToFriendlyString(IPEndPoint)
  fullName: Coop.NetImpl.LiteNet.Extensions.ToFriendlyString(System.Net.IPEndPoint)
  type: Method
  source:
    remote:
      path: source/Coop/NetImpl/LiteNet/Extensions.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ToFriendlyString
    path: ../source/Coop/NetImpl/LiteNet/Extensions.cs
    startLine: 13
  assemblies:
  - Coop
  namespace: Coop.NetImpl.LiteNet
  syntax:
    content: public static string ToFriendlyString(this IPEndPoint endPoint)
    parameters:
    - id: endPoint
      type: System.Net.IPEndPoint
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToFriendlyString(endPoint As IPEndPoint) As String
  overload: Coop.NetImpl.LiteNet.Extensions.ToFriendlyString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Coop.NetImpl.LiteNet.Extensions.ToFriendlyString(ConnectionRequest)
  commentId: M:Coop.NetImpl.LiteNet.Extensions.ToFriendlyString(ConnectionRequest)
  id: ToFriendlyString(ConnectionRequest)
  isExtensionMethod: true
  parent: Coop.NetImpl.LiteNet.Extensions
  langs:
  - csharp
  - vb
  name: ToFriendlyString(ConnectionRequest)
  nameWithType: Extensions.ToFriendlyString(ConnectionRequest)
  fullName: Coop.NetImpl.LiteNet.Extensions.ToFriendlyString(ConnectionRequest)
  type: Method
  source:
    remote:
      path: source/Coop/NetImpl/LiteNet/Extensions.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ToFriendlyString
    path: ../source/Coop/NetImpl/LiteNet/Extensions.cs
    startLine: 18
  assemblies:
  - Coop
  namespace: Coop.NetImpl.LiteNet
  syntax:
    content: public static string ToFriendlyString(this ConnectionRequest request)
    parameters:
    - id: request
      type: ConnectionRequest
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToFriendlyString(request As ConnectionRequest) As String
  overload: Coop.NetImpl.LiteNet.Extensions.ToFriendlyString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Coop.NetImpl.LiteNet.Extensions.GetReason(DisconnectInfo,System.Boolean)
  commentId: M:Coop.NetImpl.LiteNet.Extensions.GetReason(DisconnectInfo,System.Boolean)
  id: GetReason(DisconnectInfo,System.Boolean)
  isExtensionMethod: true
  parent: Coop.NetImpl.LiteNet.Extensions
  langs:
  - csharp
  - vb
  name: GetReason(DisconnectInfo, Boolean)
  nameWithType: Extensions.GetReason(DisconnectInfo, Boolean)
  fullName: Coop.NetImpl.LiteNet.Extensions.GetReason(DisconnectInfo, System.Boolean)
  type: Method
  source:
    remote:
      path: source/Coop/NetImpl/LiteNet/Extensions.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: GetReason
    path: ../source/Coop/NetImpl/LiteNet/Extensions.cs
    startLine: 23
  assemblies:
  - Coop
  namespace: Coop.NetImpl.LiteNet
  syntax:
    content: public static EDisconnectReason GetReason(this DisconnectInfo info, bool bIsServerSide)
    parameters:
    - id: info
      type: DisconnectInfo
    - id: bIsServerSide
      type: System.Boolean
    return:
      type: Network.Infrastructure.EDisconnectReason
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetReason(info As DisconnectInfo, bIsServerSide As Boolean) As EDisconnectReason
  overload: Coop.NetImpl.LiteNet.Extensions.GetReason*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Coop.NetImpl.LiteNet
  commentId: N:Coop.NetImpl.LiteNet
  name: Coop.NetImpl.LiteNet
  nameWithType: Coop.NetImpl.LiteNet
  fullName: Coop.NetImpl.LiteNet
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Coop.NetImpl.LiteNet.Extensions.GetConnection*
  commentId: Overload:Coop.NetImpl.LiteNet.Extensions.GetConnection
  name: GetConnection
  nameWithType: Extensions.GetConnection
  fullName: Coop.NetImpl.LiteNet.Extensions.GetConnection
- uid: NetPeer
  isExternal: true
  name: NetPeer
  nameWithType: NetPeer
  fullName: NetPeer
- uid: Network.Infrastructure.ConnectionBase
  commentId: T:Network.Infrastructure.ConnectionBase
  parent: Network.Infrastructure
  name: ConnectionBase
  nameWithType: ConnectionBase
  fullName: Network.Infrastructure.ConnectionBase
- uid: Network.Infrastructure
  commentId: N:Network.Infrastructure
  name: Network.Infrastructure
  nameWithType: Network.Infrastructure
  fullName: Network.Infrastructure
- uid: Coop.NetImpl.LiteNet.Extensions.ToFriendlyString*
  commentId: Overload:Coop.NetImpl.LiteNet.Extensions.ToFriendlyString
  name: ToFriendlyString
  nameWithType: Extensions.ToFriendlyString
  fullName: Coop.NetImpl.LiteNet.Extensions.ToFriendlyString
- uid: System.Net.IPEndPoint
  commentId: T:System.Net.IPEndPoint
  parent: System.Net
  isExternal: true
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: System.Net.IPEndPoint
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: ConnectionRequest
  isExternal: true
  name: ConnectionRequest
  nameWithType: ConnectionRequest
  fullName: ConnectionRequest
- uid: Coop.NetImpl.LiteNet.Extensions.GetReason*
  commentId: Overload:Coop.NetImpl.LiteNet.Extensions.GetReason
  name: GetReason
  nameWithType: Extensions.GetReason
  fullName: Coop.NetImpl.LiteNet.Extensions.GetReason
- uid: DisconnectInfo
  isExternal: true
  name: DisconnectInfo
  nameWithType: DisconnectInfo
  fullName: DisconnectInfo
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Network.Infrastructure.EDisconnectReason
  commentId: T:Network.Infrastructure.EDisconnectReason
  parent: Network.Infrastructure
  name: EDisconnectReason
  nameWithType: EDisconnectReason
  fullName: Network.Infrastructure.EDisconnectReason
