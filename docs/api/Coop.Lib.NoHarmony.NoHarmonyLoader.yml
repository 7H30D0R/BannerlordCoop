### YamlMime:ManagedReference
items:
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader
  commentId: T:Coop.Lib.NoHarmony.NoHarmonyLoader
  id: NoHarmonyLoader
  parent: Coop.Lib.NoHarmony
  children:
  - Coop.Lib.NoHarmony.NoHarmonyLoader.AddBehavior``1
  - Coop.Lib.NoHarmony.NoHarmonyLoader.AddModel``1
  - Coop.Lib.NoHarmony.NoHarmonyLoader.BehaviorDelegates
  - Coop.Lib.NoHarmony.NoHarmonyLoader.BehaviorModes
  - Coop.Lib.NoHarmony.NoHarmonyLoader.LoadConf
  - Coop.Lib.NoHarmony.NoHarmonyLoader.Log(Coop.Lib.NoHarmony.NoHarmonyLoader.LogLvl,System.String)
  - Coop.Lib.NoHarmony.NoHarmonyLoader.LogDateFormat
  - Coop.Lib.NoHarmony.NoHarmonyLoader.LogFile
  - Coop.Lib.NoHarmony.NoHarmonyLoader.Logging
  - Coop.Lib.NoHarmony.NoHarmonyLoader.MinLogLvl
  - Coop.Lib.NoHarmony.NoHarmonyLoader.ModelDelegates
  - Coop.Lib.NoHarmony.NoHarmonyLoader.ModelModes
  - Coop.Lib.NoHarmony.NoHarmonyLoader.NHLBehavior``2(TaleWorlds.CampaignSystem.Campaign,Coop.Lib.NoHarmony.NoHarmonyLoader.TaskMode)
  - Coop.Lib.NoHarmony.NoHarmonyLoader.NHLModel``2(TaleWorlds.Core.IGameStarter,Coop.Lib.NoHarmony.NoHarmonyLoader.TaskMode)
  - Coop.Lib.NoHarmony.NoHarmonyLoader.NoHarmonyInit
  - Coop.Lib.NoHarmony.NoHarmonyLoader.NoHarmonyLoad
  - Coop.Lib.NoHarmony.NoHarmonyLoader.ObjectsToLog
  - Coop.Lib.NoHarmony.NoHarmonyLoader.OnGameInitializationFinished(TaleWorlds.Core.Game)
  - Coop.Lib.NoHarmony.NoHarmonyLoader.OnGameStart(TaleWorlds.Core.Game,TaleWorlds.Core.IGameStarter)
  - Coop.Lib.NoHarmony.NoHarmonyLoader.OnSubModuleLoad
  - Coop.Lib.NoHarmony.NoHarmonyLoader.RemoveModel``1
  - Coop.Lib.NoHarmony.NoHarmonyLoader.ReplaceBehavior``2(Coop.Lib.NoHarmony.NoHarmonyLoader.TaskMode)
  - Coop.Lib.NoHarmony.NoHarmonyLoader.ReplaceModel``2(Coop.Lib.NoHarmony.NoHarmonyLoader.TaskMode)
  - Coop.Lib.NoHarmony.NoHarmonyLoader.TSBehaviors
  - Coop.Lib.NoHarmony.NoHarmonyLoader.TSModels
  - Coop.Lib.NoHarmony.NoHarmonyLoader.UseConfFile
  langs:
  - csharp
  - vb
  name: NoHarmonyLoader
  nameWithType: NoHarmonyLoader
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader
  type: Class
  source:
    remote:
      path: source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: NoHarmonyLoader
    path: ../source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
    startLine: 11
  assemblies:
  - Coop
  namespace: Coop.Lib.NoHarmony
  syntax:
    content: 'public abstract class NoHarmonyLoader : MBSubModuleBase'
    content.vb: >-
      Public MustInherit Class NoHarmonyLoader
          Inherits MBSubModuleBase
  inheritance:
  - System.Object
  - TaleWorlds.MountAndBlade.MBSubModuleBase
  derivedClasses:
  - Coop.Mod.Main
  inheritedMembers:
  - TaleWorlds.MountAndBlade.MBSubModuleBase.OnSubModuleUnloaded
  - TaleWorlds.MountAndBlade.MBSubModuleBase.OnBeforeInitialModuleScreenSetAsRoot
  - TaleWorlds.MountAndBlade.MBSubModuleBase.OnConfigChanged
  - TaleWorlds.MountAndBlade.MBSubModuleBase.OnApplicationTick(System.Single)
  - TaleWorlds.MountAndBlade.MBSubModuleBase.OnGameLoaded(TaleWorlds.Core.Game,System.Object)
  - TaleWorlds.MountAndBlade.MBSubModuleBase.OnNewGameCreated(TaleWorlds.Core.Game,System.Object)
  - TaleWorlds.MountAndBlade.MBSubModuleBase.BeginGameStart(TaleWorlds.Core.Game)
  - TaleWorlds.MountAndBlade.MBSubModuleBase.OnCampaignStart(TaleWorlds.Core.Game,System.Object)
  - TaleWorlds.MountAndBlade.MBSubModuleBase.OnMultiplayerGameStart(TaleWorlds.Core.Game,System.Object)
  - TaleWorlds.MountAndBlade.MBSubModuleBase.DoLoading(TaleWorlds.Core.Game)
  - TaleWorlds.MountAndBlade.MBSubModuleBase.OnGameEnd(TaleWorlds.Core.Game)
  - TaleWorlds.MountAndBlade.MBSubModuleBase.OnMissionBehaviourInitialize(TaleWorlds.MountAndBlade.Mission)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.BehaviorDelegates
  commentId: F:Coop.Lib.NoHarmony.NoHarmonyLoader.BehaviorDelegates
  id: BehaviorDelegates
  parent: Coop.Lib.NoHarmony.NoHarmonyLoader
  langs:
  - csharp
  - vb
  name: BehaviorDelegates
  nameWithType: NoHarmonyLoader.BehaviorDelegates
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.BehaviorDelegates
  type: Field
  source:
    remote:
      path: source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: BehaviorDelegates
    path: ../source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
    startLine: 46
  assemblies:
  - Coop
  namespace: Coop.Lib.NoHarmony
  syntax:
    content: readonly List<NoHarmonyLoader.BehaviorDelegate> BehaviorDelegates
    return:
      type: System.Collections.Generic.List{Coop.Lib.NoHarmony.NoHarmonyLoader.BehaviorDelegate}
    content.vb: ReadOnly BehaviorDelegates As List(Of NoHarmonyLoader.BehaviorDelegate)
  modifiers.csharp:
  - readonly
  modifiers.vb:
  - ReadOnly
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.BehaviorModes
  commentId: F:Coop.Lib.NoHarmony.NoHarmonyLoader.BehaviorModes
  id: BehaviorModes
  parent: Coop.Lib.NoHarmony.NoHarmonyLoader
  langs:
  - csharp
  - vb
  name: BehaviorModes
  nameWithType: NoHarmonyLoader.BehaviorModes
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.BehaviorModes
  type: Field
  source:
    remote:
      path: source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: BehaviorModes
    path: ../source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
    startLine: 47
  assemblies:
  - Coop
  namespace: Coop.Lib.NoHarmony
  syntax:
    content: readonly List<NoHarmonyLoader.TaskMode> BehaviorModes
    return:
      type: System.Collections.Generic.List{Coop.Lib.NoHarmony.NoHarmonyLoader.TaskMode}
    content.vb: ReadOnly BehaviorModes As List(Of NoHarmonyLoader.TaskMode)
  modifiers.csharp:
  - readonly
  modifiers.vb:
  - ReadOnly
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.ModelDelegates
  commentId: F:Coop.Lib.NoHarmony.NoHarmonyLoader.ModelDelegates
  id: ModelDelegates
  parent: Coop.Lib.NoHarmony.NoHarmonyLoader
  langs:
  - csharp
  - vb
  name: ModelDelegates
  nameWithType: NoHarmonyLoader.ModelDelegates
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.ModelDelegates
  type: Field
  source:
    remote:
      path: source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ModelDelegates
    path: ../source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
    startLine: 49
  assemblies:
  - Coop
  namespace: Coop.Lib.NoHarmony
  syntax:
    content: readonly List<NoHarmonyLoader.ModelDelegate> ModelDelegates
    return:
      type: System.Collections.Generic.List{Coop.Lib.NoHarmony.NoHarmonyLoader.ModelDelegate}
    content.vb: ReadOnly ModelDelegates As List(Of NoHarmonyLoader.ModelDelegate)
  modifiers.csharp:
  - readonly
  modifiers.vb:
  - ReadOnly
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.ModelModes
  commentId: F:Coop.Lib.NoHarmony.NoHarmonyLoader.ModelModes
  id: ModelModes
  parent: Coop.Lib.NoHarmony.NoHarmonyLoader
  langs:
  - csharp
  - vb
  name: ModelModes
  nameWithType: NoHarmonyLoader.ModelModes
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.ModelModes
  type: Field
  source:
    remote:
      path: source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ModelModes
    path: ../source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
    startLine: 50
  assemblies:
  - Coop
  namespace: Coop.Lib.NoHarmony
  syntax:
    content: readonly List<NoHarmonyLoader.TaskMode> ModelModes
    return:
      type: System.Collections.Generic.List{Coop.Lib.NoHarmony.NoHarmonyLoader.TaskMode}
    content.vb: ReadOnly ModelModes As List(Of NoHarmonyLoader.TaskMode)
  modifiers.csharp:
  - readonly
  modifiers.vb:
  - ReadOnly
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.TSBehaviors
  commentId: F:Coop.Lib.NoHarmony.NoHarmonyLoader.TSBehaviors
  id: TSBehaviors
  parent: Coop.Lib.NoHarmony.NoHarmonyLoader
  langs:
  - csharp
  - vb
  name: TSBehaviors
  nameWithType: NoHarmonyLoader.TSBehaviors
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.TSBehaviors
  type: Field
  source:
    remote:
      path: source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: TSBehaviors
    path: ../source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
    startLine: 51
  assemblies:
  - Coop
  namespace: Coop.Lib.NoHarmony
  syntax:
    content: readonly List<NoHarmonyLoader.TaskStatus> TSBehaviors
    return:
      type: System.Collections.Generic.List{Coop.Lib.NoHarmony.NoHarmonyLoader.TaskStatus}
    content.vb: ReadOnly TSBehaviors As List(Of NoHarmonyLoader.TaskStatus)
  modifiers.csharp:
  - readonly
  modifiers.vb:
  - ReadOnly
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.TSModels
  commentId: F:Coop.Lib.NoHarmony.NoHarmonyLoader.TSModels
  id: TSModels
  parent: Coop.Lib.NoHarmony.NoHarmonyLoader
  langs:
  - csharp
  - vb
  name: TSModels
  nameWithType: NoHarmonyLoader.TSModels
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.TSModels
  type: Field
  source:
    remote:
      path: source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: TSModels
    path: ../source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
    startLine: 52
  assemblies:
  - Coop
  namespace: Coop.Lib.NoHarmony
  syntax:
    content: readonly List<NoHarmonyLoader.TaskStatus> TSModels
    return:
      type: System.Collections.Generic.List{Coop.Lib.NoHarmony.NoHarmonyLoader.TaskStatus}
    content.vb: ReadOnly TSModels As List(Of NoHarmonyLoader.TaskStatus)
  modifiers.csharp:
  - readonly
  modifiers.vb:
  - ReadOnly
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.LogDateFormat
  commentId: F:Coop.Lib.NoHarmony.NoHarmonyLoader.LogDateFormat
  id: LogDateFormat
  parent: Coop.Lib.NoHarmony.NoHarmonyLoader
  langs:
  - csharp
  - vb
  name: LogDateFormat
  nameWithType: NoHarmonyLoader.LogDateFormat
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.LogDateFormat
  type: Field
  source:
    remote:
      path: source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: LogDateFormat
    path: ../source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
    startLine: 53
  assemblies:
  - Coop
  namespace: Coop.Lib.NoHarmony
  syntax:
    content: public string LogDateFormat
    return:
      type: System.String
    content.vb: Public LogDateFormat As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.LogFile
  commentId: F:Coop.Lib.NoHarmony.NoHarmonyLoader.LogFile
  id: LogFile
  parent: Coop.Lib.NoHarmony.NoHarmonyLoader
  langs:
  - csharp
  - vb
  name: LogFile
  nameWithType: NoHarmonyLoader.LogFile
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.LogFile
  type: Field
  source:
    remote:
      path: source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: LogFile
    path: ../source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
    startLine: 54
  assemblies:
  - Coop
  namespace: Coop.Lib.NoHarmony
  syntax:
    content: public string LogFile
    return:
      type: System.String
    content.vb: Public LogFile As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.Logging
  commentId: F:Coop.Lib.NoHarmony.NoHarmonyLoader.Logging
  id: Logging
  parent: Coop.Lib.NoHarmony.NoHarmonyLoader
  langs:
  - csharp
  - vb
  name: Logging
  nameWithType: NoHarmonyLoader.Logging
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.Logging
  type: Field
  source:
    remote:
      path: source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Logging
    path: ../source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
    startLine: 55
  assemblies:
  - Coop
  namespace: Coop.Lib.NoHarmony
  syntax:
    content: public bool Logging
    return:
      type: System.Boolean
    content.vb: Public Logging As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.MinLogLvl
  commentId: F:Coop.Lib.NoHarmony.NoHarmonyLoader.MinLogLvl
  id: MinLogLvl
  parent: Coop.Lib.NoHarmony.NoHarmonyLoader
  langs:
  - csharp
  - vb
  name: MinLogLvl
  nameWithType: NoHarmonyLoader.MinLogLvl
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.MinLogLvl
  type: Field
  source:
    remote:
      path: source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: MinLogLvl
    path: ../source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
    startLine: 56
  assemblies:
  - Coop
  namespace: Coop.Lib.NoHarmony
  syntax:
    content: public NoHarmonyLoader.LogLvl MinLogLvl
    return:
      type: Coop.Lib.NoHarmony.NoHarmonyLoader.LogLvl
    content.vb: Public MinLogLvl As NoHarmonyLoader.LogLvl
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.ObjectsToLog
  commentId: F:Coop.Lib.NoHarmony.NoHarmonyLoader.ObjectsToLog
  id: ObjectsToLog
  parent: Coop.Lib.NoHarmony.NoHarmonyLoader
  langs:
  - csharp
  - vb
  name: ObjectsToLog
  nameWithType: NoHarmonyLoader.ObjectsToLog
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.ObjectsToLog
  type: Field
  source:
    remote:
      path: source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ObjectsToLog
    path: ../source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
    startLine: 57
  assemblies:
  - Coop
  namespace: Coop.Lib.NoHarmony
  syntax:
    content: public NoHarmonyLoader.TypeLog ObjectsToLog
    return:
      type: Coop.Lib.NoHarmony.NoHarmonyLoader.TypeLog
    content.vb: Public ObjectsToLog As NoHarmonyLoader.TypeLog
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.UseConfFile
  commentId: F:Coop.Lib.NoHarmony.NoHarmonyLoader.UseConfFile
  id: UseConfFile
  parent: Coop.Lib.NoHarmony.NoHarmonyLoader
  langs:
  - csharp
  - vb
  name: UseConfFile
  nameWithType: NoHarmonyLoader.UseConfFile
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.UseConfFile
  type: Field
  source:
    remote:
      path: source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: UseConfFile
    path: ../source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
    startLine: 58
  assemblies:
  - Coop
  namespace: Coop.Lib.NoHarmony
  syntax:
    content: public bool UseConfFile
    return:
      type: System.Boolean
    content.vb: Public UseConfFile As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.NoHarmonyInit
  commentId: M:Coop.Lib.NoHarmony.NoHarmonyLoader.NoHarmonyInit
  id: NoHarmonyInit
  parent: Coop.Lib.NoHarmony.NoHarmonyLoader
  langs:
  - csharp
  - vb
  name: NoHarmonyInit()
  nameWithType: NoHarmonyLoader.NoHarmonyInit()
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.NoHarmonyInit()
  type: Method
  source:
    remote:
      path: source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: NoHarmonyInit
    path: ../source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
    startLine: 63
  assemblies:
  - Coop
  namespace: Coop.Lib.NoHarmony
  summary: "\nPut NoHarmony Initialise code here\n"
  example: []
  syntax:
    content: public abstract void NoHarmonyInit()
    content.vb: Public MustOverride Sub NoHarmonyInit
  overload: Coop.Lib.NoHarmony.NoHarmonyLoader.NoHarmonyInit*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.NoHarmonyLoad
  commentId: M:Coop.Lib.NoHarmony.NoHarmonyLoader.NoHarmonyLoad
  id: NoHarmonyLoad
  parent: Coop.Lib.NoHarmony.NoHarmonyLoader
  langs:
  - csharp
  - vb
  name: NoHarmonyLoad()
  nameWithType: NoHarmonyLoader.NoHarmonyLoad()
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.NoHarmonyLoad()
  type: Method
  source:
    remote:
      path: source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: NoHarmonyLoad
    path: ../source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
    startLine: 68
  assemblies:
  - Coop
  namespace: Coop.Lib.NoHarmony
  summary: "\nUse add and replace NoHarmony methods here to load your modules;\n"
  example: []
  syntax:
    content: public abstract void NoHarmonyLoad()
    content.vb: Public MustOverride Sub NoHarmonyLoad
  overload: Coop.Lib.NoHarmony.NoHarmonyLoader.NoHarmonyLoad*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.OnSubModuleLoad
  commentId: M:Coop.Lib.NoHarmony.NoHarmonyLoader.OnSubModuleLoad
  id: OnSubModuleLoad
  parent: Coop.Lib.NoHarmony.NoHarmonyLoader
  langs:
  - csharp
  - vb
  name: OnSubModuleLoad()
  nameWithType: NoHarmonyLoader.OnSubModuleLoad()
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.OnSubModuleLoad()
  type: Method
  source:
    remote:
      path: source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: OnSubModuleLoad
    path: ../source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
    startLine: 74
  assemblies:
  - Coop
  namespace: Coop.Lib.NoHarmony
  summary: "\nNoHarmony will initialize here, don&apos;t forget to call base.OnSubModuleLoad() if you override.\n"
  example: []
  syntax:
    content: protected override void OnSubModuleLoad()
    content.vb: Protected Overrides Sub OnSubModuleLoad
  overridden: TaleWorlds.MountAndBlade.MBSubModuleBase.OnSubModuleLoad
  overload: Coop.Lib.NoHarmony.NoHarmonyLoader.OnSubModuleLoad*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.OnGameStart(TaleWorlds.Core.Game,TaleWorlds.Core.IGameStarter)
  commentId: M:Coop.Lib.NoHarmony.NoHarmonyLoader.OnGameStart(TaleWorlds.Core.Game,TaleWorlds.Core.IGameStarter)
  id: OnGameStart(TaleWorlds.Core.Game,TaleWorlds.Core.IGameStarter)
  parent: Coop.Lib.NoHarmony.NoHarmonyLoader
  langs:
  - csharp
  - vb
  name: OnGameStart(Game, IGameStarter)
  nameWithType: NoHarmonyLoader.OnGameStart(Game, IGameStarter)
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.OnGameStart(TaleWorlds.Core.Game, TaleWorlds.Core.IGameStarter)
  type: Method
  source:
    remote:
      path: source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: OnGameStart
    path: ../source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
    startLine: 102
  assemblies:
  - Coop
  namespace: Coop.Lib.NoHarmony
  summary: "\nModels will be loaded here, don&apos;t forget to call base.OnGameStart(game, gameStarterObject) if you override.\n"
  example: []
  syntax:
    content: protected override void OnGameStart(Game game, IGameStarter gameStarterObject)
    parameters:
    - id: game
      type: TaleWorlds.Core.Game
      description: ''
    - id: gameStarterObject
      type: TaleWorlds.Core.IGameStarter
      description: ''
    content.vb: Protected Overrides Sub OnGameStart(game As Game, gameStarterObject As IGameStarter)
  overridden: TaleWorlds.MountAndBlade.MBSubModuleBase.OnGameStart(TaleWorlds.Core.Game,TaleWorlds.Core.IGameStarter)
  overload: Coop.Lib.NoHarmony.NoHarmonyLoader.OnGameStart*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.OnGameInitializationFinished(TaleWorlds.Core.Game)
  commentId: M:Coop.Lib.NoHarmony.NoHarmonyLoader.OnGameInitializationFinished(TaleWorlds.Core.Game)
  id: OnGameInitializationFinished(TaleWorlds.Core.Game)
  parent: Coop.Lib.NoHarmony.NoHarmonyLoader
  langs:
  - csharp
  - vb
  name: OnGameInitializationFinished(Game)
  nameWithType: NoHarmonyLoader.OnGameInitializationFinished(Game)
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.OnGameInitializationFinished(TaleWorlds.Core.Game)
  type: Method
  source:
    remote:
      path: source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: OnGameInitializationFinished
    path: ../source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
    startLine: 132
  assemblies:
  - Coop
  namespace: Coop.Lib.NoHarmony
  summary: "\nBehaviors operations wille be done here, don&apos;t forget to call.OnGameInitializationFinished(game) base if you\noverride.\n"
  example: []
  syntax:
    content: public override void OnGameInitializationFinished(Game game)
    parameters:
    - id: game
      type: TaleWorlds.Core.Game
      description: ''
    content.vb: Public Overrides Sub OnGameInitializationFinished(game As Game)
  overridden: TaleWorlds.MountAndBlade.MBSubModuleBase.OnGameInitializationFinished(TaleWorlds.Core.Game)
  overload: Coop.Lib.NoHarmony.NoHarmonyLoader.OnGameInitializationFinished*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.AddModel``1
  commentId: M:Coop.Lib.NoHarmony.NoHarmonyLoader.AddModel``1
  id: AddModel``1
  parent: Coop.Lib.NoHarmony.NoHarmonyLoader
  langs:
  - csharp
  - vb
  name: AddModel<AddType>()
  nameWithType: NoHarmonyLoader.AddModel<AddType>()
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.AddModel<AddType>()
  type: Method
  source:
    remote:
      path: source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: AddModel
    path: ../source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
    startLine: 160
  assemblies:
  - Coop
  namespace: Coop.Lib.NoHarmony
  summary: "\nUse this method in your NoHarmonyLoad() method to add new models to the game.\n"
  example: []
  syntax:
    content: >-
      public void AddModel<AddType>()
          where AddType : GameModel, new()
    typeParameters:
    - id: AddType
      description: Model type to add
    content.vb: Public Sub AddModel(Of AddType As {GameModel, New})
  overload: Coop.Lib.NoHarmony.NoHarmonyLoader.AddModel*
  nameWithType.vb: NoHarmonyLoader.AddModel(Of AddType)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Coop.Lib.NoHarmony.NoHarmonyLoader.AddModel(Of AddType)()
  name.vb: AddModel(Of AddType)()
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.ReplaceModel``2(Coop.Lib.NoHarmony.NoHarmonyLoader.TaskMode)
  commentId: M:Coop.Lib.NoHarmony.NoHarmonyLoader.ReplaceModel``2(Coop.Lib.NoHarmony.NoHarmonyLoader.TaskMode)
  id: ReplaceModel``2(Coop.Lib.NoHarmony.NoHarmonyLoader.TaskMode)
  parent: Coop.Lib.NoHarmony.NoHarmonyLoader
  langs:
  - csharp
  - vb
  name: ReplaceModel<AddType, RemoveType>(NoHarmonyLoader.TaskMode)
  nameWithType: NoHarmonyLoader.ReplaceModel<AddType, RemoveType>(NoHarmonyLoader.TaskMode)
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.ReplaceModel<AddType, RemoveType>(Coop.Lib.NoHarmony.NoHarmonyLoader.TaskMode)
  type: Method
  source:
    remote:
      path: source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ReplaceModel
    path: ../source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
    startLine: 173
  assemblies:
  - Coop
  namespace: Coop.Lib.NoHarmony
  summary: "\nUse this method in your NoHarmonyLoad() method to replace a specified model by a new specified one.\n"
  example: []
  syntax:
    content: >-
      public void ReplaceModel<AddType, RemoveType>(NoHarmonyLoader.TaskMode m = NoHarmonyLoader.TaskMode.Replace)
          where AddType : GameModel, new()
          where RemoveType : GameModel
    parameters:
    - id: m
      type: Coop.Lib.NoHarmony.NoHarmonyLoader.TaskMode
      description: Not required. The replace mode to use. (Do not pick add or remove)
    typeParameters:
    - id: AddType
      description: Model type to add
    - id: RemoveType
      description: Model type to be replaced
    content.vb: Public Sub ReplaceModel(Of AddType As {GameModel, New}, RemoveType As GameModel)(m As NoHarmonyLoader.TaskMode = NoHarmonyLoader.TaskMode.Replace)
  overload: Coop.Lib.NoHarmony.NoHarmonyLoader.ReplaceModel*
  nameWithType.vb: NoHarmonyLoader.ReplaceModel(Of AddType, RemoveType)(NoHarmonyLoader.TaskMode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Coop.Lib.NoHarmony.NoHarmonyLoader.ReplaceModel(Of AddType, RemoveType)(Coop.Lib.NoHarmony.NoHarmonyLoader.TaskMode)
  name.vb: ReplaceModel(Of AddType, RemoveType)(NoHarmonyLoader.TaskMode)
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.RemoveModel``1
  commentId: M:Coop.Lib.NoHarmony.NoHarmonyLoader.RemoveModel``1
  id: RemoveModel``1
  parent: Coop.Lib.NoHarmony.NoHarmonyLoader
  langs:
  - csharp
  - vb
  name: RemoveModel<RemoveType>()
  nameWithType: NoHarmonyLoader.RemoveModel<RemoveType>()
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.RemoveModel<RemoveType>()
  type: Method
  source:
    remote:
      path: source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: RemoveModel
    path: ../source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
    startLine: 190
  assemblies:
  - Coop
  namespace: Coop.Lib.NoHarmony
  summary: "\nUse this method in your NoHarmonyLoad() method to remove a specified model. (Dangerous)\n"
  example: []
  syntax:
    content: >-
      public void RemoveModel<RemoveType>()
          where RemoveType : GameModel
    typeParameters:
    - id: RemoveType
      description: Model type to remove
    content.vb: Public Sub RemoveModel(Of RemoveType As GameModel)
  overload: Coop.Lib.NoHarmony.NoHarmonyLoader.RemoveModel*
  nameWithType.vb: NoHarmonyLoader.RemoveModel(Of RemoveType)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Coop.Lib.NoHarmony.NoHarmonyLoader.RemoveModel(Of RemoveType)()
  name.vb: RemoveModel(Of RemoveType)()
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.AddBehavior``1
  commentId: M:Coop.Lib.NoHarmony.NoHarmonyLoader.AddBehavior``1
  id: AddBehavior``1
  parent: Coop.Lib.NoHarmony.NoHarmonyLoader
  langs:
  - csharp
  - vb
  name: AddBehavior<AddType>()
  nameWithType: NoHarmonyLoader.AddBehavior<AddType>()
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.AddBehavior<AddType>()
  type: Method
  source:
    remote:
      path: source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: AddBehavior
    path: ../source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
    startLine: 201
  assemblies:
  - Coop
  namespace: Coop.Lib.NoHarmony
  summary: "\nUse this method in your NoHarmonyLoad() method to add new behavior to the game.\n"
  example: []
  syntax:
    content: >-
      public void AddBehavior<AddType>()
          where AddType : CampaignBehaviorBase, new()
    typeParameters:
    - id: AddType
      description: Behavior type to add
    content.vb: Public Sub AddBehavior(Of AddType As {CampaignBehaviorBase, New})
  overload: Coop.Lib.NoHarmony.NoHarmonyLoader.AddBehavior*
  nameWithType.vb: NoHarmonyLoader.AddBehavior(Of AddType)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Coop.Lib.NoHarmony.NoHarmonyLoader.AddBehavior(Of AddType)()
  name.vb: AddBehavior(Of AddType)()
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.ReplaceBehavior``2(Coop.Lib.NoHarmony.NoHarmonyLoader.TaskMode)
  commentId: M:Coop.Lib.NoHarmony.NoHarmonyLoader.ReplaceBehavior``2(Coop.Lib.NoHarmony.NoHarmonyLoader.TaskMode)
  id: ReplaceBehavior``2(Coop.Lib.NoHarmony.NoHarmonyLoader.TaskMode)
  parent: Coop.Lib.NoHarmony.NoHarmonyLoader
  langs:
  - csharp
  - vb
  name: ReplaceBehavior<AddType, RemoveType>(NoHarmonyLoader.TaskMode)
  nameWithType: NoHarmonyLoader.ReplaceBehavior<AddType, RemoveType>(NoHarmonyLoader.TaskMode)
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.ReplaceBehavior<AddType, RemoveType>(Coop.Lib.NoHarmony.NoHarmonyLoader.TaskMode)
  type: Method
  source:
    remote:
      path: source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ReplaceBehavior
    path: ../source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
    startLine: 214
  assemblies:
  - Coop
  namespace: Coop.Lib.NoHarmony
  summary: "\nUse this method in your NoHarmonyLoad() method to replace a specified behavior by a new specified one.\n"
  example: []
  syntax:
    content: >-
      public void ReplaceBehavior<AddType, RemoveType>(NoHarmonyLoader.TaskMode m = NoHarmonyLoader.TaskMode.Replace)
          where AddType : CampaignBehaviorBase, new()
          where RemoveType : CampaignBehaviorBase
    parameters:
    - id: m
      type: Coop.Lib.NoHarmony.NoHarmonyLoader.TaskMode
      description: Not required. The replace mode to use. (Do not pick add or remove)
    typeParameters:
    - id: AddType
      description: Behavior type to add
    - id: RemoveType
      description: Behavior type to remove
    content.vb: Public Sub ReplaceBehavior(Of AddType As {CampaignBehaviorBase, New}, RemoveType As CampaignBehaviorBase)(m As NoHarmonyLoader.TaskMode = NoHarmonyLoader.TaskMode.Replace)
  overload: Coop.Lib.NoHarmony.NoHarmonyLoader.ReplaceBehavior*
  nameWithType.vb: NoHarmonyLoader.ReplaceBehavior(Of AddType, RemoveType)(NoHarmonyLoader.TaskMode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Coop.Lib.NoHarmony.NoHarmonyLoader.ReplaceBehavior(Of AddType, RemoveType)(Coop.Lib.NoHarmony.NoHarmonyLoader.TaskMode)
  name.vb: ReplaceBehavior(Of AddType, RemoveType)(NoHarmonyLoader.TaskMode)
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.NHLModel``2(TaleWorlds.Core.IGameStarter,Coop.Lib.NoHarmony.NoHarmonyLoader.TaskMode)
  commentId: M:Coop.Lib.NoHarmony.NoHarmonyLoader.NHLModel``2(TaleWorlds.Core.IGameStarter,Coop.Lib.NoHarmony.NoHarmonyLoader.TaskMode)
  id: NHLModel``2(TaleWorlds.Core.IGameStarter,Coop.Lib.NoHarmony.NoHarmonyLoader.TaskMode)
  parent: Coop.Lib.NoHarmony.NoHarmonyLoader
  langs:
  - csharp
  - vb
  name: NHLModel<AddType, RemoveType>(IGameStarter, NoHarmonyLoader.TaskMode)
  nameWithType: NoHarmonyLoader.NHLModel<AddType, RemoveType>(IGameStarter, NoHarmonyLoader.TaskMode)
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.NHLModel<AddType, RemoveType>(TaleWorlds.Core.IGameStarter, Coop.Lib.NoHarmony.NoHarmonyLoader.TaskMode)
  type: Method
  source:
    remote:
      path: source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: NHLModel
    path: ../source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
    startLine: 222
  assemblies:
  - Coop
  namespace: Coop.Lib.NoHarmony
  syntax:
    content: >-
      NoHarmonyLoader.TaskStatus NHLModel<AddType, RemoveType>(IGameStarter gameI, NoHarmonyLoader.TaskMode mode)
          where AddType : GameModel, new()
          where RemoveType : GameModel
    parameters:
    - id: gameI
      type: TaleWorlds.Core.IGameStarter
    - id: mode
      type: Coop.Lib.NoHarmony.NoHarmonyLoader.TaskMode
    typeParameters:
    - id: AddType
    - id: RemoveType
    return:
      type: Coop.Lib.NoHarmony.NoHarmonyLoader.TaskStatus
    content.vb: Function NHLModel(Of AddType As {GameModel, New}, RemoveType As GameModel)(gameI As IGameStarter, mode As NoHarmonyLoader.TaskMode) As NoHarmonyLoader.TaskStatus
  overload: Coop.Lib.NoHarmony.NoHarmonyLoader.NHLModel*
  nameWithType.vb: NoHarmonyLoader.NHLModel(Of AddType, RemoveType)(IGameStarter, NoHarmonyLoader.TaskMode)
  fullName.vb: Coop.Lib.NoHarmony.NoHarmonyLoader.NHLModel(Of AddType, RemoveType)(TaleWorlds.Core.IGameStarter, Coop.Lib.NoHarmony.NoHarmonyLoader.TaskMode)
  name.vb: NHLModel(Of AddType, RemoveType)(IGameStarter, NoHarmonyLoader.TaskMode)
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.NHLBehavior``2(TaleWorlds.CampaignSystem.Campaign,Coop.Lib.NoHarmony.NoHarmonyLoader.TaskMode)
  commentId: M:Coop.Lib.NoHarmony.NoHarmonyLoader.NHLBehavior``2(TaleWorlds.CampaignSystem.Campaign,Coop.Lib.NoHarmony.NoHarmonyLoader.TaskMode)
  id: NHLBehavior``2(TaleWorlds.CampaignSystem.Campaign,Coop.Lib.NoHarmony.NoHarmonyLoader.TaskMode)
  parent: Coop.Lib.NoHarmony.NoHarmonyLoader
  langs:
  - csharp
  - vb
  name: NHLBehavior<AddType, RemoveType>(Campaign, NoHarmonyLoader.TaskMode)
  nameWithType: NoHarmonyLoader.NHLBehavior<AddType, RemoveType>(Campaign, NoHarmonyLoader.TaskMode)
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.NHLBehavior<AddType, RemoveType>(TaleWorlds.CampaignSystem.Campaign, Coop.Lib.NoHarmony.NoHarmonyLoader.TaskMode)
  type: Method
  source:
    remote:
      path: source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: NHLBehavior
    path: ../source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
    startLine: 299
  assemblies:
  - Coop
  namespace: Coop.Lib.NoHarmony
  syntax:
    content: >-
      NoHarmonyLoader.TaskStatus NHLBehavior<AddType, RemoveType>(Campaign campaign, NoHarmonyLoader.TaskMode mode)
          where AddType : CampaignBehaviorBase, new()
          where RemoveType : CampaignBehaviorBase
    parameters:
    - id: campaign
      type: TaleWorlds.CampaignSystem.Campaign
    - id: mode
      type: Coop.Lib.NoHarmony.NoHarmonyLoader.TaskMode
    typeParameters:
    - id: AddType
    - id: RemoveType
    return:
      type: Coop.Lib.NoHarmony.NoHarmonyLoader.TaskStatus
    content.vb: Function NHLBehavior(Of AddType As {CampaignBehaviorBase, New}, RemoveType As CampaignBehaviorBase)(campaign As Campaign, mode As NoHarmonyLoader.TaskMode) As NoHarmonyLoader.TaskStatus
  overload: Coop.Lib.NoHarmony.NoHarmonyLoader.NHLBehavior*
  nameWithType.vb: NoHarmonyLoader.NHLBehavior(Of AddType, RemoveType)(Campaign, NoHarmonyLoader.TaskMode)
  fullName.vb: Coop.Lib.NoHarmony.NoHarmonyLoader.NHLBehavior(Of AddType, RemoveType)(TaleWorlds.CampaignSystem.Campaign, Coop.Lib.NoHarmony.NoHarmonyLoader.TaskMode)
  name.vb: NHLBehavior(Of AddType, RemoveType)(Campaign, NoHarmonyLoader.TaskMode)
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.Log(Coop.Lib.NoHarmony.NoHarmonyLoader.LogLvl,System.String)
  commentId: M:Coop.Lib.NoHarmony.NoHarmonyLoader.Log(Coop.Lib.NoHarmony.NoHarmonyLoader.LogLvl,System.String)
  id: Log(Coop.Lib.NoHarmony.NoHarmonyLoader.LogLvl,System.String)
  parent: Coop.Lib.NoHarmony.NoHarmonyLoader
  langs:
  - csharp
  - vb
  name: Log(NoHarmonyLoader.LogLvl, String)
  nameWithType: NoHarmonyLoader.Log(NoHarmonyLoader.LogLvl, String)
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.Log(Coop.Lib.NoHarmony.NoHarmonyLoader.LogLvl, System.String)
  type: Method
  source:
    remote:
      path: source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Log
    path: ../source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
    startLine: 325
  assemblies:
  - Coop
  namespace: Coop.Lib.NoHarmony
  summary: "\nAdd a message to NoHarmony log file\n"
  example: []
  syntax:
    content: public void Log(NoHarmonyLoader.LogLvl mLvl, string message)
    parameters:
    - id: mLvl
      type: Coop.Lib.NoHarmony.NoHarmonyLoader.LogLvl
      description: Message logging level
    - id: message
      type: System.String
      description: Message core
    content.vb: Public Sub Log(mLvl As NoHarmonyLoader.LogLvl, message As String)
  overload: Coop.Lib.NoHarmony.NoHarmonyLoader.Log*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.LoadConf
  commentId: M:Coop.Lib.NoHarmony.NoHarmonyLoader.LoadConf
  id: LoadConf
  parent: Coop.Lib.NoHarmony.NoHarmonyLoader
  langs:
  - csharp
  - vb
  name: LoadConf()
  nameWithType: NoHarmonyLoader.LoadConf()
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.LoadConf()
  type: Method
  source:
    remote:
      path: source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: LoadConf
    path: ../source/Coop/Lib/NoHarmony/NoHarmonyLoader.cs
    startLine: 356
  assemblies:
  - Coop
  namespace: Coop.Lib.NoHarmony
  syntax:
    content: public void LoadConf()
    content.vb: Public Sub LoadConf
  overload: Coop.Lib.NoHarmony.NoHarmonyLoader.LoadConf*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Coop.Lib.NoHarmony
  commentId: N:Coop.Lib.NoHarmony
  name: Coop.Lib.NoHarmony
  nameWithType: Coop.Lib.NoHarmony
  fullName: Coop.Lib.NoHarmony
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TaleWorlds.MountAndBlade.MBSubModuleBase
  commentId: T:TaleWorlds.MountAndBlade.MBSubModuleBase
  parent: TaleWorlds.MountAndBlade
  isExternal: true
  name: MBSubModuleBase
  nameWithType: MBSubModuleBase
  fullName: TaleWorlds.MountAndBlade.MBSubModuleBase
- uid: TaleWorlds.MountAndBlade.MBSubModuleBase.OnSubModuleUnloaded
  commentId: M:TaleWorlds.MountAndBlade.MBSubModuleBase.OnSubModuleUnloaded
  parent: TaleWorlds.MountAndBlade.MBSubModuleBase
  isExternal: true
  name: OnSubModuleUnloaded()
  nameWithType: MBSubModuleBase.OnSubModuleUnloaded()
  fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.OnSubModuleUnloaded()
  spec.csharp:
  - uid: TaleWorlds.MountAndBlade.MBSubModuleBase.OnSubModuleUnloaded
    name: OnSubModuleUnloaded
    nameWithType: MBSubModuleBase.OnSubModuleUnloaded
    fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.OnSubModuleUnloaded
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TaleWorlds.MountAndBlade.MBSubModuleBase.OnSubModuleUnloaded
    name: OnSubModuleUnloaded
    nameWithType: MBSubModuleBase.OnSubModuleUnloaded
    fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.OnSubModuleUnloaded
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TaleWorlds.MountAndBlade.MBSubModuleBase.OnBeforeInitialModuleScreenSetAsRoot
  commentId: M:TaleWorlds.MountAndBlade.MBSubModuleBase.OnBeforeInitialModuleScreenSetAsRoot
  parent: TaleWorlds.MountAndBlade.MBSubModuleBase
  isExternal: true
  name: OnBeforeInitialModuleScreenSetAsRoot()
  nameWithType: MBSubModuleBase.OnBeforeInitialModuleScreenSetAsRoot()
  fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.OnBeforeInitialModuleScreenSetAsRoot()
  spec.csharp:
  - uid: TaleWorlds.MountAndBlade.MBSubModuleBase.OnBeforeInitialModuleScreenSetAsRoot
    name: OnBeforeInitialModuleScreenSetAsRoot
    nameWithType: MBSubModuleBase.OnBeforeInitialModuleScreenSetAsRoot
    fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.OnBeforeInitialModuleScreenSetAsRoot
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TaleWorlds.MountAndBlade.MBSubModuleBase.OnBeforeInitialModuleScreenSetAsRoot
    name: OnBeforeInitialModuleScreenSetAsRoot
    nameWithType: MBSubModuleBase.OnBeforeInitialModuleScreenSetAsRoot
    fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.OnBeforeInitialModuleScreenSetAsRoot
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TaleWorlds.MountAndBlade.MBSubModuleBase.OnConfigChanged
  commentId: M:TaleWorlds.MountAndBlade.MBSubModuleBase.OnConfigChanged
  parent: TaleWorlds.MountAndBlade.MBSubModuleBase
  isExternal: true
  name: OnConfigChanged()
  nameWithType: MBSubModuleBase.OnConfigChanged()
  fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.OnConfigChanged()
  spec.csharp:
  - uid: TaleWorlds.MountAndBlade.MBSubModuleBase.OnConfigChanged
    name: OnConfigChanged
    nameWithType: MBSubModuleBase.OnConfigChanged
    fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.OnConfigChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TaleWorlds.MountAndBlade.MBSubModuleBase.OnConfigChanged
    name: OnConfigChanged
    nameWithType: MBSubModuleBase.OnConfigChanged
    fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.OnConfigChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TaleWorlds.MountAndBlade.MBSubModuleBase.OnApplicationTick(System.Single)
  commentId: M:TaleWorlds.MountAndBlade.MBSubModuleBase.OnApplicationTick(System.Single)
  parent: TaleWorlds.MountAndBlade.MBSubModuleBase
  isExternal: true
  name: OnApplicationTick(Single)
  nameWithType: MBSubModuleBase.OnApplicationTick(Single)
  fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.OnApplicationTick(System.Single)
  spec.csharp:
  - uid: TaleWorlds.MountAndBlade.MBSubModuleBase.OnApplicationTick(System.Single)
    name: OnApplicationTick
    nameWithType: MBSubModuleBase.OnApplicationTick
    fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.OnApplicationTick
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TaleWorlds.MountAndBlade.MBSubModuleBase.OnApplicationTick(System.Single)
    name: OnApplicationTick
    nameWithType: MBSubModuleBase.OnApplicationTick
    fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.OnApplicationTick
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TaleWorlds.MountAndBlade.MBSubModuleBase.OnGameLoaded(TaleWorlds.Core.Game,System.Object)
  commentId: M:TaleWorlds.MountAndBlade.MBSubModuleBase.OnGameLoaded(TaleWorlds.Core.Game,System.Object)
  parent: TaleWorlds.MountAndBlade.MBSubModuleBase
  isExternal: true
  name: OnGameLoaded(Game, Object)
  nameWithType: MBSubModuleBase.OnGameLoaded(Game, Object)
  fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.OnGameLoaded(TaleWorlds.Core.Game, System.Object)
  spec.csharp:
  - uid: TaleWorlds.MountAndBlade.MBSubModuleBase.OnGameLoaded(TaleWorlds.Core.Game,System.Object)
    name: OnGameLoaded
    nameWithType: MBSubModuleBase.OnGameLoaded
    fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.OnGameLoaded
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: TaleWorlds.Core.Game
    name: Game
    nameWithType: Game
    fullName: TaleWorlds.Core.Game
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TaleWorlds.MountAndBlade.MBSubModuleBase.OnGameLoaded(TaleWorlds.Core.Game,System.Object)
    name: OnGameLoaded
    nameWithType: MBSubModuleBase.OnGameLoaded
    fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.OnGameLoaded
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: TaleWorlds.Core.Game
    name: Game
    nameWithType: Game
    fullName: TaleWorlds.Core.Game
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TaleWorlds.MountAndBlade.MBSubModuleBase.OnNewGameCreated(TaleWorlds.Core.Game,System.Object)
  commentId: M:TaleWorlds.MountAndBlade.MBSubModuleBase.OnNewGameCreated(TaleWorlds.Core.Game,System.Object)
  parent: TaleWorlds.MountAndBlade.MBSubModuleBase
  isExternal: true
  name: OnNewGameCreated(Game, Object)
  nameWithType: MBSubModuleBase.OnNewGameCreated(Game, Object)
  fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.OnNewGameCreated(TaleWorlds.Core.Game, System.Object)
  spec.csharp:
  - uid: TaleWorlds.MountAndBlade.MBSubModuleBase.OnNewGameCreated(TaleWorlds.Core.Game,System.Object)
    name: OnNewGameCreated
    nameWithType: MBSubModuleBase.OnNewGameCreated
    fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.OnNewGameCreated
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: TaleWorlds.Core.Game
    name: Game
    nameWithType: Game
    fullName: TaleWorlds.Core.Game
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TaleWorlds.MountAndBlade.MBSubModuleBase.OnNewGameCreated(TaleWorlds.Core.Game,System.Object)
    name: OnNewGameCreated
    nameWithType: MBSubModuleBase.OnNewGameCreated
    fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.OnNewGameCreated
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: TaleWorlds.Core.Game
    name: Game
    nameWithType: Game
    fullName: TaleWorlds.Core.Game
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TaleWorlds.MountAndBlade.MBSubModuleBase.BeginGameStart(TaleWorlds.Core.Game)
  commentId: M:TaleWorlds.MountAndBlade.MBSubModuleBase.BeginGameStart(TaleWorlds.Core.Game)
  parent: TaleWorlds.MountAndBlade.MBSubModuleBase
  isExternal: true
  name: BeginGameStart(Game)
  nameWithType: MBSubModuleBase.BeginGameStart(Game)
  fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.BeginGameStart(TaleWorlds.Core.Game)
  spec.csharp:
  - uid: TaleWorlds.MountAndBlade.MBSubModuleBase.BeginGameStart(TaleWorlds.Core.Game)
    name: BeginGameStart
    nameWithType: MBSubModuleBase.BeginGameStart
    fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.BeginGameStart
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: TaleWorlds.Core.Game
    name: Game
    nameWithType: Game
    fullName: TaleWorlds.Core.Game
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TaleWorlds.MountAndBlade.MBSubModuleBase.BeginGameStart(TaleWorlds.Core.Game)
    name: BeginGameStart
    nameWithType: MBSubModuleBase.BeginGameStart
    fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.BeginGameStart
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: TaleWorlds.Core.Game
    name: Game
    nameWithType: Game
    fullName: TaleWorlds.Core.Game
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TaleWorlds.MountAndBlade.MBSubModuleBase.OnCampaignStart(TaleWorlds.Core.Game,System.Object)
  commentId: M:TaleWorlds.MountAndBlade.MBSubModuleBase.OnCampaignStart(TaleWorlds.Core.Game,System.Object)
  parent: TaleWorlds.MountAndBlade.MBSubModuleBase
  isExternal: true
  name: OnCampaignStart(Game, Object)
  nameWithType: MBSubModuleBase.OnCampaignStart(Game, Object)
  fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.OnCampaignStart(TaleWorlds.Core.Game, System.Object)
  spec.csharp:
  - uid: TaleWorlds.MountAndBlade.MBSubModuleBase.OnCampaignStart(TaleWorlds.Core.Game,System.Object)
    name: OnCampaignStart
    nameWithType: MBSubModuleBase.OnCampaignStart
    fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.OnCampaignStart
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: TaleWorlds.Core.Game
    name: Game
    nameWithType: Game
    fullName: TaleWorlds.Core.Game
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TaleWorlds.MountAndBlade.MBSubModuleBase.OnCampaignStart(TaleWorlds.Core.Game,System.Object)
    name: OnCampaignStart
    nameWithType: MBSubModuleBase.OnCampaignStart
    fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.OnCampaignStart
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: TaleWorlds.Core.Game
    name: Game
    nameWithType: Game
    fullName: TaleWorlds.Core.Game
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TaleWorlds.MountAndBlade.MBSubModuleBase.OnMultiplayerGameStart(TaleWorlds.Core.Game,System.Object)
  commentId: M:TaleWorlds.MountAndBlade.MBSubModuleBase.OnMultiplayerGameStart(TaleWorlds.Core.Game,System.Object)
  parent: TaleWorlds.MountAndBlade.MBSubModuleBase
  isExternal: true
  name: OnMultiplayerGameStart(Game, Object)
  nameWithType: MBSubModuleBase.OnMultiplayerGameStart(Game, Object)
  fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.OnMultiplayerGameStart(TaleWorlds.Core.Game, System.Object)
  spec.csharp:
  - uid: TaleWorlds.MountAndBlade.MBSubModuleBase.OnMultiplayerGameStart(TaleWorlds.Core.Game,System.Object)
    name: OnMultiplayerGameStart
    nameWithType: MBSubModuleBase.OnMultiplayerGameStart
    fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.OnMultiplayerGameStart
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: TaleWorlds.Core.Game
    name: Game
    nameWithType: Game
    fullName: TaleWorlds.Core.Game
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TaleWorlds.MountAndBlade.MBSubModuleBase.OnMultiplayerGameStart(TaleWorlds.Core.Game,System.Object)
    name: OnMultiplayerGameStart
    nameWithType: MBSubModuleBase.OnMultiplayerGameStart
    fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.OnMultiplayerGameStart
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: TaleWorlds.Core.Game
    name: Game
    nameWithType: Game
    fullName: TaleWorlds.Core.Game
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TaleWorlds.MountAndBlade.MBSubModuleBase.DoLoading(TaleWorlds.Core.Game)
  commentId: M:TaleWorlds.MountAndBlade.MBSubModuleBase.DoLoading(TaleWorlds.Core.Game)
  parent: TaleWorlds.MountAndBlade.MBSubModuleBase
  isExternal: true
  name: DoLoading(Game)
  nameWithType: MBSubModuleBase.DoLoading(Game)
  fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.DoLoading(TaleWorlds.Core.Game)
  spec.csharp:
  - uid: TaleWorlds.MountAndBlade.MBSubModuleBase.DoLoading(TaleWorlds.Core.Game)
    name: DoLoading
    nameWithType: MBSubModuleBase.DoLoading
    fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.DoLoading
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: TaleWorlds.Core.Game
    name: Game
    nameWithType: Game
    fullName: TaleWorlds.Core.Game
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TaleWorlds.MountAndBlade.MBSubModuleBase.DoLoading(TaleWorlds.Core.Game)
    name: DoLoading
    nameWithType: MBSubModuleBase.DoLoading
    fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.DoLoading
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: TaleWorlds.Core.Game
    name: Game
    nameWithType: Game
    fullName: TaleWorlds.Core.Game
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TaleWorlds.MountAndBlade.MBSubModuleBase.OnGameEnd(TaleWorlds.Core.Game)
  commentId: M:TaleWorlds.MountAndBlade.MBSubModuleBase.OnGameEnd(TaleWorlds.Core.Game)
  parent: TaleWorlds.MountAndBlade.MBSubModuleBase
  isExternal: true
  name: OnGameEnd(Game)
  nameWithType: MBSubModuleBase.OnGameEnd(Game)
  fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.OnGameEnd(TaleWorlds.Core.Game)
  spec.csharp:
  - uid: TaleWorlds.MountAndBlade.MBSubModuleBase.OnGameEnd(TaleWorlds.Core.Game)
    name: OnGameEnd
    nameWithType: MBSubModuleBase.OnGameEnd
    fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.OnGameEnd
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: TaleWorlds.Core.Game
    name: Game
    nameWithType: Game
    fullName: TaleWorlds.Core.Game
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TaleWorlds.MountAndBlade.MBSubModuleBase.OnGameEnd(TaleWorlds.Core.Game)
    name: OnGameEnd
    nameWithType: MBSubModuleBase.OnGameEnd
    fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.OnGameEnd
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: TaleWorlds.Core.Game
    name: Game
    nameWithType: Game
    fullName: TaleWorlds.Core.Game
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TaleWorlds.MountAndBlade.MBSubModuleBase.OnMissionBehaviourInitialize(TaleWorlds.MountAndBlade.Mission)
  commentId: M:TaleWorlds.MountAndBlade.MBSubModuleBase.OnMissionBehaviourInitialize(TaleWorlds.MountAndBlade.Mission)
  parent: TaleWorlds.MountAndBlade.MBSubModuleBase
  isExternal: true
  name: OnMissionBehaviourInitialize(Mission)
  nameWithType: MBSubModuleBase.OnMissionBehaviourInitialize(Mission)
  fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.OnMissionBehaviourInitialize(TaleWorlds.MountAndBlade.Mission)
  spec.csharp:
  - uid: TaleWorlds.MountAndBlade.MBSubModuleBase.OnMissionBehaviourInitialize(TaleWorlds.MountAndBlade.Mission)
    name: OnMissionBehaviourInitialize
    nameWithType: MBSubModuleBase.OnMissionBehaviourInitialize
    fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.OnMissionBehaviourInitialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: TaleWorlds.MountAndBlade.Mission
    name: Mission
    nameWithType: Mission
    fullName: TaleWorlds.MountAndBlade.Mission
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TaleWorlds.MountAndBlade.MBSubModuleBase.OnMissionBehaviourInitialize(TaleWorlds.MountAndBlade.Mission)
    name: OnMissionBehaviourInitialize
    nameWithType: MBSubModuleBase.OnMissionBehaviourInitialize
    fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.OnMissionBehaviourInitialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: TaleWorlds.MountAndBlade.Mission
    name: Mission
    nameWithType: Mission
    fullName: TaleWorlds.MountAndBlade.Mission
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TaleWorlds.MountAndBlade
  commentId: N:TaleWorlds.MountAndBlade
  isExternal: true
  name: TaleWorlds.MountAndBlade
  nameWithType: TaleWorlds.MountAndBlade
  fullName: TaleWorlds.MountAndBlade
- uid: System.Collections.Generic.List{Coop.Lib.NoHarmony.NoHarmonyLoader.BehaviorDelegate}
  commentId: T:System.Collections.Generic.List{Coop.Lib.NoHarmony.NoHarmonyLoader.BehaviorDelegate}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<NoHarmonyLoader.BehaviorDelegate>
  nameWithType: List<NoHarmonyLoader.BehaviorDelegate>
  fullName: System.Collections.Generic.List<Coop.Lib.NoHarmony.NoHarmonyLoader.BehaviorDelegate>
  nameWithType.vb: List(Of NoHarmonyLoader.BehaviorDelegate)
  fullName.vb: System.Collections.Generic.List(Of Coop.Lib.NoHarmony.NoHarmonyLoader.BehaviorDelegate)
  name.vb: List(Of NoHarmonyLoader.BehaviorDelegate)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Coop.Lib.NoHarmony.NoHarmonyLoader.BehaviorDelegate
    name: NoHarmonyLoader.BehaviorDelegate
    nameWithType: NoHarmonyLoader.BehaviorDelegate
    fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.BehaviorDelegate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Coop.Lib.NoHarmony.NoHarmonyLoader.BehaviorDelegate
    name: NoHarmonyLoader.BehaviorDelegate
    nameWithType: NoHarmonyLoader.BehaviorDelegate
    fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.BehaviorDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.List{Coop.Lib.NoHarmony.NoHarmonyLoader.TaskMode}
  commentId: T:System.Collections.Generic.List{Coop.Lib.NoHarmony.NoHarmonyLoader.TaskMode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<NoHarmonyLoader.TaskMode>
  nameWithType: List<NoHarmonyLoader.TaskMode>
  fullName: System.Collections.Generic.List<Coop.Lib.NoHarmony.NoHarmonyLoader.TaskMode>
  nameWithType.vb: List(Of NoHarmonyLoader.TaskMode)
  fullName.vb: System.Collections.Generic.List(Of Coop.Lib.NoHarmony.NoHarmonyLoader.TaskMode)
  name.vb: List(Of NoHarmonyLoader.TaskMode)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Coop.Lib.NoHarmony.NoHarmonyLoader.TaskMode
    name: NoHarmonyLoader.TaskMode
    nameWithType: NoHarmonyLoader.TaskMode
    fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.TaskMode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Coop.Lib.NoHarmony.NoHarmonyLoader.TaskMode
    name: NoHarmonyLoader.TaskMode
    nameWithType: NoHarmonyLoader.TaskMode
    fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.TaskMode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Coop.Lib.NoHarmony.NoHarmonyLoader.ModelDelegate}
  commentId: T:System.Collections.Generic.List{Coop.Lib.NoHarmony.NoHarmonyLoader.ModelDelegate}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<NoHarmonyLoader.ModelDelegate>
  nameWithType: List<NoHarmonyLoader.ModelDelegate>
  fullName: System.Collections.Generic.List<Coop.Lib.NoHarmony.NoHarmonyLoader.ModelDelegate>
  nameWithType.vb: List(Of NoHarmonyLoader.ModelDelegate)
  fullName.vb: System.Collections.Generic.List(Of Coop.Lib.NoHarmony.NoHarmonyLoader.ModelDelegate)
  name.vb: List(Of NoHarmonyLoader.ModelDelegate)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Coop.Lib.NoHarmony.NoHarmonyLoader.ModelDelegate
    name: NoHarmonyLoader.ModelDelegate
    nameWithType: NoHarmonyLoader.ModelDelegate
    fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.ModelDelegate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Coop.Lib.NoHarmony.NoHarmonyLoader.ModelDelegate
    name: NoHarmonyLoader.ModelDelegate
    nameWithType: NoHarmonyLoader.ModelDelegate
    fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.ModelDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Coop.Lib.NoHarmony.NoHarmonyLoader.TaskStatus}
  commentId: T:System.Collections.Generic.List{Coop.Lib.NoHarmony.NoHarmonyLoader.TaskStatus}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<NoHarmonyLoader.TaskStatus>
  nameWithType: List<NoHarmonyLoader.TaskStatus>
  fullName: System.Collections.Generic.List<Coop.Lib.NoHarmony.NoHarmonyLoader.TaskStatus>
  nameWithType.vb: List(Of NoHarmonyLoader.TaskStatus)
  fullName.vb: System.Collections.Generic.List(Of Coop.Lib.NoHarmony.NoHarmonyLoader.TaskStatus)
  name.vb: List(Of NoHarmonyLoader.TaskStatus)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Coop.Lib.NoHarmony.NoHarmonyLoader.TaskStatus
    name: NoHarmonyLoader.TaskStatus
    nameWithType: NoHarmonyLoader.TaskStatus
    fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.TaskStatus
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Coop.Lib.NoHarmony.NoHarmonyLoader.TaskStatus
    name: NoHarmonyLoader.TaskStatus
    nameWithType: NoHarmonyLoader.TaskStatus
    fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.TaskStatus
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.LogLvl
  commentId: T:Coop.Lib.NoHarmony.NoHarmonyLoader.LogLvl
  parent: Coop.Lib.NoHarmony
  name: NoHarmonyLoader.LogLvl
  nameWithType: NoHarmonyLoader.LogLvl
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.LogLvl
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.TypeLog
  commentId: T:Coop.Lib.NoHarmony.NoHarmonyLoader.TypeLog
  parent: Coop.Lib.NoHarmony
  name: NoHarmonyLoader.TypeLog
  nameWithType: NoHarmonyLoader.TypeLog
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.TypeLog
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.NoHarmonyInit*
  commentId: Overload:Coop.Lib.NoHarmony.NoHarmonyLoader.NoHarmonyInit
  name: NoHarmonyInit
  nameWithType: NoHarmonyLoader.NoHarmonyInit
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.NoHarmonyInit
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.NoHarmonyLoad*
  commentId: Overload:Coop.Lib.NoHarmony.NoHarmonyLoader.NoHarmonyLoad
  name: NoHarmonyLoad
  nameWithType: NoHarmonyLoader.NoHarmonyLoad
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.NoHarmonyLoad
- uid: TaleWorlds.MountAndBlade.MBSubModuleBase.OnSubModuleLoad
  commentId: M:TaleWorlds.MountAndBlade.MBSubModuleBase.OnSubModuleLoad
  parent: TaleWorlds.MountAndBlade.MBSubModuleBase
  isExternal: true
  name: OnSubModuleLoad()
  nameWithType: MBSubModuleBase.OnSubModuleLoad()
  fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.OnSubModuleLoad()
  spec.csharp:
  - uid: TaleWorlds.MountAndBlade.MBSubModuleBase.OnSubModuleLoad
    name: OnSubModuleLoad
    nameWithType: MBSubModuleBase.OnSubModuleLoad
    fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.OnSubModuleLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TaleWorlds.MountAndBlade.MBSubModuleBase.OnSubModuleLoad
    name: OnSubModuleLoad
    nameWithType: MBSubModuleBase.OnSubModuleLoad
    fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.OnSubModuleLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.OnSubModuleLoad*
  commentId: Overload:Coop.Lib.NoHarmony.NoHarmonyLoader.OnSubModuleLoad
  name: OnSubModuleLoad
  nameWithType: NoHarmonyLoader.OnSubModuleLoad
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.OnSubModuleLoad
- uid: TaleWorlds.MountAndBlade.MBSubModuleBase.OnGameStart(TaleWorlds.Core.Game,TaleWorlds.Core.IGameStarter)
  commentId: M:TaleWorlds.MountAndBlade.MBSubModuleBase.OnGameStart(TaleWorlds.Core.Game,TaleWorlds.Core.IGameStarter)
  parent: TaleWorlds.MountAndBlade.MBSubModuleBase
  isExternal: true
  name: OnGameStart(Game, IGameStarter)
  nameWithType: MBSubModuleBase.OnGameStart(Game, IGameStarter)
  fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.OnGameStart(TaleWorlds.Core.Game, TaleWorlds.Core.IGameStarter)
  spec.csharp:
  - uid: TaleWorlds.MountAndBlade.MBSubModuleBase.OnGameStart(TaleWorlds.Core.Game,TaleWorlds.Core.IGameStarter)
    name: OnGameStart
    nameWithType: MBSubModuleBase.OnGameStart
    fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.OnGameStart
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: TaleWorlds.Core.Game
    name: Game
    nameWithType: Game
    fullName: TaleWorlds.Core.Game
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TaleWorlds.Core.IGameStarter
    name: IGameStarter
    nameWithType: IGameStarter
    fullName: TaleWorlds.Core.IGameStarter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TaleWorlds.MountAndBlade.MBSubModuleBase.OnGameStart(TaleWorlds.Core.Game,TaleWorlds.Core.IGameStarter)
    name: OnGameStart
    nameWithType: MBSubModuleBase.OnGameStart
    fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.OnGameStart
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: TaleWorlds.Core.Game
    name: Game
    nameWithType: Game
    fullName: TaleWorlds.Core.Game
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TaleWorlds.Core.IGameStarter
    name: IGameStarter
    nameWithType: IGameStarter
    fullName: TaleWorlds.Core.IGameStarter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.OnGameStart*
  commentId: Overload:Coop.Lib.NoHarmony.NoHarmonyLoader.OnGameStart
  name: OnGameStart
  nameWithType: NoHarmonyLoader.OnGameStart
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.OnGameStart
- uid: TaleWorlds.Core.Game
  commentId: T:TaleWorlds.Core.Game
  parent: TaleWorlds.Core
  isExternal: true
  name: Game
  nameWithType: Game
  fullName: TaleWorlds.Core.Game
- uid: TaleWorlds.Core.IGameStarter
  commentId: T:TaleWorlds.Core.IGameStarter
  parent: TaleWorlds.Core
  isExternal: true
  name: IGameStarter
  nameWithType: IGameStarter
  fullName: TaleWorlds.Core.IGameStarter
- uid: TaleWorlds.Core
  commentId: N:TaleWorlds.Core
  isExternal: true
  name: TaleWorlds.Core
  nameWithType: TaleWorlds.Core
  fullName: TaleWorlds.Core
- uid: TaleWorlds.MountAndBlade.MBSubModuleBase.OnGameInitializationFinished(TaleWorlds.Core.Game)
  commentId: M:TaleWorlds.MountAndBlade.MBSubModuleBase.OnGameInitializationFinished(TaleWorlds.Core.Game)
  parent: TaleWorlds.MountAndBlade.MBSubModuleBase
  isExternal: true
  name: OnGameInitializationFinished(Game)
  nameWithType: MBSubModuleBase.OnGameInitializationFinished(Game)
  fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.OnGameInitializationFinished(TaleWorlds.Core.Game)
  spec.csharp:
  - uid: TaleWorlds.MountAndBlade.MBSubModuleBase.OnGameInitializationFinished(TaleWorlds.Core.Game)
    name: OnGameInitializationFinished
    nameWithType: MBSubModuleBase.OnGameInitializationFinished
    fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.OnGameInitializationFinished
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: TaleWorlds.Core.Game
    name: Game
    nameWithType: Game
    fullName: TaleWorlds.Core.Game
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TaleWorlds.MountAndBlade.MBSubModuleBase.OnGameInitializationFinished(TaleWorlds.Core.Game)
    name: OnGameInitializationFinished
    nameWithType: MBSubModuleBase.OnGameInitializationFinished
    fullName: TaleWorlds.MountAndBlade.MBSubModuleBase.OnGameInitializationFinished
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: TaleWorlds.Core.Game
    name: Game
    nameWithType: Game
    fullName: TaleWorlds.Core.Game
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.OnGameInitializationFinished*
  commentId: Overload:Coop.Lib.NoHarmony.NoHarmonyLoader.OnGameInitializationFinished
  name: OnGameInitializationFinished
  nameWithType: NoHarmonyLoader.OnGameInitializationFinished
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.OnGameInitializationFinished
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.AddModel*
  commentId: Overload:Coop.Lib.NoHarmony.NoHarmonyLoader.AddModel
  name: AddModel
  nameWithType: NoHarmonyLoader.AddModel
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.AddModel
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.ReplaceModel*
  commentId: Overload:Coop.Lib.NoHarmony.NoHarmonyLoader.ReplaceModel
  name: ReplaceModel
  nameWithType: NoHarmonyLoader.ReplaceModel
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.ReplaceModel
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.TaskMode
  commentId: T:Coop.Lib.NoHarmony.NoHarmonyLoader.TaskMode
  parent: Coop.Lib.NoHarmony
  name: NoHarmonyLoader.TaskMode
  nameWithType: NoHarmonyLoader.TaskMode
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.TaskMode
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.RemoveModel*
  commentId: Overload:Coop.Lib.NoHarmony.NoHarmonyLoader.RemoveModel
  name: RemoveModel
  nameWithType: NoHarmonyLoader.RemoveModel
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.RemoveModel
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.AddBehavior*
  commentId: Overload:Coop.Lib.NoHarmony.NoHarmonyLoader.AddBehavior
  name: AddBehavior
  nameWithType: NoHarmonyLoader.AddBehavior
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.AddBehavior
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.ReplaceBehavior*
  commentId: Overload:Coop.Lib.NoHarmony.NoHarmonyLoader.ReplaceBehavior
  name: ReplaceBehavior
  nameWithType: NoHarmonyLoader.ReplaceBehavior
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.ReplaceBehavior
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.NHLModel*
  commentId: Overload:Coop.Lib.NoHarmony.NoHarmonyLoader.NHLModel
  name: NHLModel
  nameWithType: NoHarmonyLoader.NHLModel
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.NHLModel
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.TaskStatus
  commentId: T:Coop.Lib.NoHarmony.NoHarmonyLoader.TaskStatus
  parent: Coop.Lib.NoHarmony
  name: NoHarmonyLoader.TaskStatus
  nameWithType: NoHarmonyLoader.TaskStatus
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.TaskStatus
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.NHLBehavior*
  commentId: Overload:Coop.Lib.NoHarmony.NoHarmonyLoader.NHLBehavior
  name: NHLBehavior
  nameWithType: NoHarmonyLoader.NHLBehavior
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.NHLBehavior
- uid: TaleWorlds.CampaignSystem.Campaign
  commentId: T:TaleWorlds.CampaignSystem.Campaign
  parent: TaleWorlds.CampaignSystem
  isExternal: true
  name: Campaign
  nameWithType: Campaign
  fullName: TaleWorlds.CampaignSystem.Campaign
- uid: TaleWorlds.CampaignSystem
  commentId: N:TaleWorlds.CampaignSystem
  isExternal: true
  name: TaleWorlds.CampaignSystem
  nameWithType: TaleWorlds.CampaignSystem
  fullName: TaleWorlds.CampaignSystem
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.Log*
  commentId: Overload:Coop.Lib.NoHarmony.NoHarmonyLoader.Log
  name: Log
  nameWithType: NoHarmonyLoader.Log
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.Log
- uid: Coop.Lib.NoHarmony.NoHarmonyLoader.LoadConf*
  commentId: Overload:Coop.Lib.NoHarmony.NoHarmonyLoader.LoadConf
  name: LoadConf
  nameWithType: NoHarmonyLoader.LoadConf
  fullName: Coop.Lib.NoHarmony.NoHarmonyLoader.LoadConf
