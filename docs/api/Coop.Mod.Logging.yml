### YamlMime:ManagedReference
items:
- uid: Coop.Mod.Logging
  commentId: T:Coop.Mod.Logging
  id: Logging
  parent: Coop.Mod
  children:
  - Coop.Mod.Logging.GetLogFileName
  - Coop.Mod.Logging.Init(NLog.Targets.Target[])
  langs:
  - csharp
  - vb
  name: Logging
  nameWithType: Logging
  fullName: Coop.Mod.Logging
  type: Class
  source:
    remote:
      path: source/Coop/Mod/Logging.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Logging
    path: ../source/Coop/Mod/Logging.cs
    startLine: 9
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public static class Logging
    content.vb: Public Module Logging
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Coop.Mod.Logging.Init(NLog.Targets.Target[])
  commentId: M:Coop.Mod.Logging.Init(NLog.Targets.Target[])
  id: Init(NLog.Targets.Target[])
  parent: Coop.Mod.Logging
  langs:
  - csharp
  - vb
  name: Init(Target[])
  nameWithType: Logging.Init(Target[])
  fullName: Coop.Mod.Logging.Init(NLog.Targets.Target[])
  type: Method
  source:
    remote:
      path: source/Coop/Mod/Logging.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Init
    path: ../source/Coop/Mod/Logging.cs
    startLine: 11
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public static void Init(Target[] appSpecificTargets)
    parameters:
    - id: appSpecificTargets
      type: NLog.Targets.Target[]
    content.vb: Public Shared Sub Init(appSpecificTargets As Target())
  overload: Coop.Mod.Logging.Init*
  nameWithType.vb: Logging.Init(Target())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Coop.Mod.Logging.Init(NLog.Targets.Target())
  name.vb: Init(Target())
- uid: Coop.Mod.Logging.GetLogFileName
  commentId: M:Coop.Mod.Logging.GetLogFileName
  id: GetLogFileName
  parent: Coop.Mod.Logging
  langs:
  - csharp
  - vb
  name: GetLogFileName()
  nameWithType: Logging.GetLogFileName()
  fullName: Coop.Mod.Logging.GetLogFileName()
  type: Method
  source:
    remote:
      path: source/Coop/Mod/Logging.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: GetLogFileName
    path: ../source/Coop/Mod/Logging.cs
    startLine: 39
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: static string GetLogFileName()
    return:
      type: System.String
    content.vb: Shared Function GetLogFileName As String
  overload: Coop.Mod.Logging.GetLogFileName*
  modifiers.csharp:
  - static
  modifiers.vb:
  - Shared
references:
- uid: Coop.Mod
  commentId: N:Coop.Mod
  name: Coop.Mod
  nameWithType: Coop.Mod
  fullName: Coop.Mod
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Coop.Mod.Logging.Init*
  commentId: Overload:Coop.Mod.Logging.Init
  name: Init
  nameWithType: Logging.Init
  fullName: Coop.Mod.Logging.Init
- uid: NLog.Targets.Target[]
  isExternal: true
  name: Target[]
  nameWithType: Target[]
  fullName: NLog.Targets.Target[]
  nameWithType.vb: Target()
  fullName.vb: NLog.Targets.Target()
  name.vb: Target()
  spec.csharp:
  - uid: NLog.Targets.Target
    name: Target
    nameWithType: Target
    fullName: NLog.Targets.Target
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: NLog.Targets.Target
    name: Target
    nameWithType: Target
    fullName: NLog.Targets.Target
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Coop.Mod.Logging.GetLogFileName*
  commentId: Overload:Coop.Mod.Logging.GetLogFileName
  name: GetLogFileName
  nameWithType: Logging.GetLogFileName
  fullName: Coop.Mod.Logging.GetLogFileName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
