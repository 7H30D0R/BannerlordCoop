### YamlMime:ManagedReference
items:
- uid: Coop.Mod.Persistence.RPC.MethodCall
  commentId: T:Coop.Mod.Persistence.RPC.MethodCall
  id: MethodCall
  parent: Coop.Mod.Persistence.RPC
  children:
  - Coop.Mod.Persistence.RPC.MethodCall.#ctor(Sync.MethodId,Coop.Mod.Persistence.RPC.Argument,System.Collections.Generic.List{Coop.Mod.Persistence.RPC.Argument})
  - Coop.Mod.Persistence.RPC.MethodCall.Arguments
  - Coop.Mod.Persistence.RPC.MethodCall.Equals(Coop.Mod.Persistence.RPC.MethodCall)
  - Coop.Mod.Persistence.RPC.MethodCall.Equals(System.Object)
  - Coop.Mod.Persistence.RPC.MethodCall.GetHashCode
  - Coop.Mod.Persistence.RPC.MethodCall.Id
  - Coop.Mod.Persistence.RPC.MethodCall.Instance
  - Coop.Mod.Persistence.RPC.MethodCall.ToString
  langs:
  - csharp
  - vb
  name: MethodCall
  nameWithType: MethodCall
  fullName: Coop.Mod.Persistence.RPC.MethodCall
  type: Struct
  source:
    remote:
      path: source/Coop/Mod/Persistence/RPC/MethodCall.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: MethodCall
    path: ../source/Coop/Mod/Persistence/RPC/MethodCall.cs
    startLine: 11
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence.RPC
  summary: "\nRepresents a serializable call to a method including all invocation arguments. Method\npointer, instance and arguments have to resolved before execution. In order to resolve\na method call refer to <xref href=\"Sync.MethodRegistry\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Coop.Mod.Persistence.RPC.ArgumentFactory\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public struct MethodCall
    content.vb: Public Structure MethodCall
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Coop.Mod.Persistence.RPC.MethodCall.Arguments
  commentId: F:Coop.Mod.Persistence.RPC.MethodCall.Arguments
  id: Arguments
  parent: Coop.Mod.Persistence.RPC.MethodCall
  langs:
  - csharp
  - vb
  name: Arguments
  nameWithType: MethodCall.Arguments
  fullName: Coop.Mod.Persistence.RPC.MethodCall.Arguments
  type: Field
  source:
    remote:
      path: source/Coop/Mod/Persistence/RPC/MethodCall.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Arguments
    path: ../source/Coop/Mod/Persistence/RPC/MethodCall.cs
    startLine: 13
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence.RPC
  syntax:
    content: public readonly List<Argument> Arguments
    return:
      type: System.Collections.Generic.List{Coop.Mod.Persistence.RPC.Argument}
    content.vb: Public ReadOnly Arguments As List(Of Argument)
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Coop.Mod.Persistence.RPC.MethodCall.Id
  commentId: F:Coop.Mod.Persistence.RPC.MethodCall.Id
  id: Id
  parent: Coop.Mod.Persistence.RPC.MethodCall
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: MethodCall.Id
  fullName: Coop.Mod.Persistence.RPC.MethodCall.Id
  type: Field
  source:
    remote:
      path: source/Coop/Mod/Persistence/RPC/MethodCall.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Id
    path: ../source/Coop/Mod/Persistence/RPC/MethodCall.cs
    startLine: 15
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence.RPC
  syntax:
    content: public readonly MethodId Id
    return:
      type: Sync.MethodId
    content.vb: Public ReadOnly Id As MethodId
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Coop.Mod.Persistence.RPC.MethodCall.Instance
  commentId: F:Coop.Mod.Persistence.RPC.MethodCall.Instance
  id: Instance
  parent: Coop.Mod.Persistence.RPC.MethodCall
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: MethodCall.Instance
  fullName: Coop.Mod.Persistence.RPC.MethodCall.Instance
  type: Field
  source:
    remote:
      path: source/Coop/Mod/Persistence/RPC/MethodCall.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Instance
    path: ../source/Coop/Mod/Persistence/RPC/MethodCall.cs
    startLine: 16
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence.RPC
  syntax:
    content: public readonly Argument Instance
    return:
      type: Coop.Mod.Persistence.RPC.Argument
    content.vb: Public ReadOnly Instance As Argument
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Coop.Mod.Persistence.RPC.MethodCall.#ctor(Sync.MethodId,Coop.Mod.Persistence.RPC.Argument,System.Collections.Generic.List{Coop.Mod.Persistence.RPC.Argument})
  commentId: M:Coop.Mod.Persistence.RPC.MethodCall.#ctor(Sync.MethodId,Coop.Mod.Persistence.RPC.Argument,System.Collections.Generic.List{Coop.Mod.Persistence.RPC.Argument})
  id: '#ctor(Sync.MethodId,Coop.Mod.Persistence.RPC.Argument,System.Collections.Generic.List{Coop.Mod.Persistence.RPC.Argument})'
  parent: Coop.Mod.Persistence.RPC.MethodCall
  langs:
  - csharp
  - vb
  name: MethodCall(MethodId, Argument, List<Argument>)
  nameWithType: MethodCall.MethodCall(MethodId, Argument, List<Argument>)
  fullName: Coop.Mod.Persistence.RPC.MethodCall.MethodCall(Sync.MethodId, Coop.Mod.Persistence.RPC.Argument, System.Collections.Generic.List<Coop.Mod.Persistence.RPC.Argument>)
  type: Constructor
  source:
    remote:
      path: source/Coop/Mod/Persistence/RPC/MethodCall.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: .ctor
    path: ../source/Coop/Mod/Persistence/RPC/MethodCall.cs
    startLine: 18
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence.RPC
  syntax:
    content: public MethodCall(MethodId id, Argument instance, List<Argument> arguments)
    parameters:
    - id: id
      type: Sync.MethodId
    - id: instance
      type: Coop.Mod.Persistence.RPC.Argument
    - id: arguments
      type: System.Collections.Generic.List{Coop.Mod.Persistence.RPC.Argument}
    content.vb: Public Sub New(id As MethodId, instance As Argument, arguments As List(Of Argument))
  overload: Coop.Mod.Persistence.RPC.MethodCall.#ctor*
  nameWithType.vb: MethodCall.MethodCall(MethodId, Argument, List(Of Argument))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Coop.Mod.Persistence.RPC.MethodCall.MethodCall(Sync.MethodId, Coop.Mod.Persistence.RPC.Argument, System.Collections.Generic.List(Of Coop.Mod.Persistence.RPC.Argument))
  name.vb: MethodCall(MethodId, Argument, List(Of Argument))
- uid: Coop.Mod.Persistence.RPC.MethodCall.ToString
  commentId: M:Coop.Mod.Persistence.RPC.MethodCall.ToString
  id: ToString
  parent: Coop.Mod.Persistence.RPC.MethodCall
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: MethodCall.ToString()
  fullName: Coop.Mod.Persistence.RPC.MethodCall.ToString()
  type: Method
  source:
    remote:
      path: source/Coop/Mod/Persistence/RPC/MethodCall.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ToString
    path: ../source/Coop/Mod/Persistence/RPC/MethodCall.cs
    startLine: 25
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence.RPC
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: Coop.Mod.Persistence.RPC.MethodCall.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Coop.Mod.Persistence.RPC.MethodCall.Equals(System.Object)
  commentId: M:Coop.Mod.Persistence.RPC.MethodCall.Equals(System.Object)
  id: Equals(System.Object)
  parent: Coop.Mod.Persistence.RPC.MethodCall
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: MethodCall.Equals(Object)
  fullName: Coop.Mod.Persistence.RPC.MethodCall.Equals(System.Object)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/Persistence/RPC/MethodCall.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Equals
    path: ../source/Coop/Mod/Persistence/RPC/MethodCall.cs
    startLine: 41
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence.RPC
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Coop.Mod.Persistence.RPC.MethodCall.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Coop.Mod.Persistence.RPC.MethodCall.Equals(Coop.Mod.Persistence.RPC.MethodCall)
  commentId: M:Coop.Mod.Persistence.RPC.MethodCall.Equals(Coop.Mod.Persistence.RPC.MethodCall)
  id: Equals(Coop.Mod.Persistence.RPC.MethodCall)
  parent: Coop.Mod.Persistence.RPC.MethodCall
  langs:
  - csharp
  - vb
  name: Equals(MethodCall)
  nameWithType: MethodCall.Equals(MethodCall)
  fullName: Coop.Mod.Persistence.RPC.MethodCall.Equals(Coop.Mod.Persistence.RPC.MethodCall)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/Persistence/RPC/MethodCall.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Equals
    path: ../source/Coop/Mod/Persistence/RPC/MethodCall.cs
    startLine: 46
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence.RPC
  syntax:
    content: bool Equals(MethodCall other)
    parameters:
    - id: other
      type: Coop.Mod.Persistence.RPC.MethodCall
    return:
      type: System.Boolean
    content.vb: Function Equals(other As MethodCall) As Boolean
  overload: Coop.Mod.Persistence.RPC.MethodCall.Equals*
- uid: Coop.Mod.Persistence.RPC.MethodCall.GetHashCode
  commentId: M:Coop.Mod.Persistence.RPC.MethodCall.GetHashCode
  id: GetHashCode
  parent: Coop.Mod.Persistence.RPC.MethodCall
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: MethodCall.GetHashCode()
  fullName: Coop.Mod.Persistence.RPC.MethodCall.GetHashCode()
  type: Method
  source:
    remote:
      path: source/Coop/Mod/Persistence/RPC/MethodCall.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: GetHashCode
    path: ../source/Coop/Mod/Persistence/RPC/MethodCall.cs
    startLine: 51
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence.RPC
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: Coop.Mod.Persistence.RPC.MethodCall.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Sync.MethodRegistry
  commentId: T:Sync.MethodRegistry
  name: MethodRegistry
  nameWithType: MethodRegistry
  fullName: Sync.MethodRegistry
- uid: Coop.Mod.Persistence.RPC.ArgumentFactory
  commentId: T:Coop.Mod.Persistence.RPC.ArgumentFactory
  name: ArgumentFactory
  nameWithType: ArgumentFactory
  fullName: Coop.Mod.Persistence.RPC.ArgumentFactory
- uid: Coop.Mod.Persistence.RPC
  commentId: N:Coop.Mod.Persistence.RPC
  name: Coop.Mod.Persistence.RPC
  nameWithType: Coop.Mod.Persistence.RPC
  fullName: Coop.Mod.Persistence.RPC
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{Coop.Mod.Persistence.RPC.Argument}
  commentId: T:System.Collections.Generic.List{Coop.Mod.Persistence.RPC.Argument}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Argument>
  nameWithType: List<Argument>
  fullName: System.Collections.Generic.List<Coop.Mod.Persistence.RPC.Argument>
  nameWithType.vb: List(Of Argument)
  fullName.vb: System.Collections.Generic.List(Of Coop.Mod.Persistence.RPC.Argument)
  name.vb: List(Of Argument)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Coop.Mod.Persistence.RPC.Argument
    name: Argument
    nameWithType: Argument
    fullName: Coop.Mod.Persistence.RPC.Argument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Coop.Mod.Persistence.RPC.Argument
    name: Argument
    nameWithType: Argument
    fullName: Coop.Mod.Persistence.RPC.Argument
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sync.MethodId
  commentId: T:Sync.MethodId
  parent: Sync
  name: MethodId
  nameWithType: MethodId
  fullName: Sync.MethodId
- uid: Sync
  commentId: N:Sync
  name: Sync
  nameWithType: Sync
  fullName: Sync
- uid: Coop.Mod.Persistence.RPC.Argument
  commentId: T:Coop.Mod.Persistence.RPC.Argument
  parent: Coop.Mod.Persistence.RPC
  name: Argument
  nameWithType: Argument
  fullName: Coop.Mod.Persistence.RPC.Argument
- uid: Coop.Mod.Persistence.RPC.MethodCall.#ctor*
  commentId: Overload:Coop.Mod.Persistence.RPC.MethodCall.#ctor
  name: MethodCall
  nameWithType: MethodCall.MethodCall
  fullName: Coop.Mod.Persistence.RPC.MethodCall.MethodCall
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Coop.Mod.Persistence.RPC.MethodCall.ToString*
  commentId: Overload:Coop.Mod.Persistence.RPC.MethodCall.ToString
  name: ToString
  nameWithType: MethodCall.ToString
  fullName: Coop.Mod.Persistence.RPC.MethodCall.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Coop.Mod.Persistence.RPC.MethodCall.Equals*
  commentId: Overload:Coop.Mod.Persistence.RPC.MethodCall.Equals
  name: Equals
  nameWithType: MethodCall.Equals
  fullName: Coop.Mod.Persistence.RPC.MethodCall.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Coop.Mod.Persistence.RPC.MethodCall
  commentId: T:Coop.Mod.Persistence.RPC.MethodCall
  parent: Coop.Mod.Persistence.RPC
  name: MethodCall
  nameWithType: MethodCall
  fullName: Coop.Mod.Persistence.RPC.MethodCall
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Coop.Mod.Persistence.RPC.MethodCall.GetHashCode*
  commentId: Overload:Coop.Mod.Persistence.RPC.MethodCall.GetHashCode
  name: GetHashCode
  nameWithType: MethodCall.GetHashCode
  fullName: Coop.Mod.Persistence.RPC.MethodCall.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
