### YamlMime:ManagedReference
items:
- uid: Coop.NetImpl.LiteNet.DiscoveryThread
  commentId: T:Coop.NetImpl.LiteNet.DiscoveryThread
  id: DiscoveryThread
  parent: Coop.NetImpl.LiteNet
  children:
  - Coop.NetImpl.LiteNet.DiscoveryThread.#ctor(Network.Infrastructure.NetworkConfiguration)
  - Coop.NetImpl.LiteNet.DiscoveryThread.Finalize
  - Coop.NetImpl.LiteNet.DiscoveryThread.Logger
  - Coop.NetImpl.LiteNet.DiscoveryThread.m_AvailableServerLock
  - Coop.NetImpl.LiteNet.DiscoveryThread.m_AvailableServers
  - Coop.NetImpl.LiteNet.DiscoveryThread.m_Config
  - Coop.NetImpl.LiteNet.DiscoveryThread.m_FrameLimiter
  - Coop.NetImpl.LiteNet.DiscoveryThread.m_IsStopRequest
  - Coop.NetImpl.LiteNet.DiscoveryThread.m_NetManager
  - Coop.NetImpl.LiteNet.DiscoveryThread.m_StopRequestLock
  - Coop.NetImpl.LiteNet.DiscoveryThread.m_Thread
  - Coop.NetImpl.LiteNet.DiscoveryThread.Run
  - Coop.NetImpl.LiteNet.DiscoveryThread.ServerList
  - Coop.NetImpl.LiteNet.DiscoveryThread.Stop
  langs:
  - csharp
  - vb
  name: DiscoveryThread
  nameWithType: DiscoveryThread
  fullName: Coop.NetImpl.LiteNet.DiscoveryThread
  type: Class
  source:
    remote:
      path: source/Coop/NetImpl/LiteNet/DiscoveryThread.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: DiscoveryThread
    path: ../source/Coop/NetImpl/LiteNet/DiscoveryThread.cs
    startLine: 18
  assemblies:
  - Coop
  namespace: Coop.NetImpl.LiteNet
  summary: "\nThread to discovery coop servers in LAN.\n"
  example: []
  syntax:
    content: public class DiscoveryThread
    content.vb: Public Class DiscoveryThread
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Coop.NetImpl.LiteNet.DiscoveryThread.Logger
  commentId: F:Coop.NetImpl.LiteNet.DiscoveryThread.Logger
  id: Logger
  parent: Coop.NetImpl.LiteNet.DiscoveryThread
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: DiscoveryThread.Logger
  fullName: Coop.NetImpl.LiteNet.DiscoveryThread.Logger
  type: Field
  source:
    remote:
      path: source/Coop/NetImpl/LiteNet/DiscoveryThread.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Logger
    path: ../source/Coop/NetImpl/LiteNet/DiscoveryThread.cs
    startLine: 20
  assemblies:
  - Coop
  namespace: Coop.NetImpl.LiteNet
  syntax:
    content: static readonly Logger Logger
    return:
      type: NLog.Logger
    content.vb: Shared ReadOnly Logger As Logger
  modifiers.csharp:
  - static
  - readonly
  modifiers.vb:
  - Shared
  - ReadOnly
- uid: Coop.NetImpl.LiteNet.DiscoveryThread.m_AvailableServerLock
  commentId: F:Coop.NetImpl.LiteNet.DiscoveryThread.m_AvailableServerLock
  id: m_AvailableServerLock
  parent: Coop.NetImpl.LiteNet.DiscoveryThread
  langs:
  - csharp
  - vb
  name: m_AvailableServerLock
  nameWithType: DiscoveryThread.m_AvailableServerLock
  fullName: Coop.NetImpl.LiteNet.DiscoveryThread.m_AvailableServerLock
  type: Field
  source:
    remote:
      path: source/Coop/NetImpl/LiteNet/DiscoveryThread.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_AvailableServerLock
    path: ../source/Coop/NetImpl/LiteNet/DiscoveryThread.cs
    startLine: 21
  assemblies:
  - Coop
  namespace: Coop.NetImpl.LiteNet
  syntax:
    content: readonly object m_AvailableServerLock
    return:
      type: System.Object
    content.vb: ReadOnly m_AvailableServerLock As Object
  modifiers.csharp:
  - readonly
  modifiers.vb:
  - ReadOnly
- uid: Coop.NetImpl.LiteNet.DiscoveryThread.m_AvailableServers
  commentId: F:Coop.NetImpl.LiteNet.DiscoveryThread.m_AvailableServers
  id: m_AvailableServers
  parent: Coop.NetImpl.LiteNet.DiscoveryThread
  langs:
  - csharp
  - vb
  name: m_AvailableServers
  nameWithType: DiscoveryThread.m_AvailableServers
  fullName: Coop.NetImpl.LiteNet.DiscoveryThread.m_AvailableServers
  type: Field
  source:
    remote:
      path: source/Coop/NetImpl/LiteNet/DiscoveryThread.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_AvailableServers
    path: ../source/Coop/NetImpl/LiteNet/DiscoveryThread.cs
    startLine: 23
  assemblies:
  - Coop
  namespace: Coop.NetImpl.LiteNet
  syntax:
    content: readonly HashSet<IPEndPoint> m_AvailableServers
    return:
      type: System.Collections.Generic.HashSet{System.Net.IPEndPoint}
    content.vb: ReadOnly m_AvailableServers As HashSet(Of IPEndPoint)
  modifiers.csharp:
  - readonly
  modifiers.vb:
  - ReadOnly
- uid: Coop.NetImpl.LiteNet.DiscoveryThread.m_Config
  commentId: F:Coop.NetImpl.LiteNet.DiscoveryThread.m_Config
  id: m_Config
  parent: Coop.NetImpl.LiteNet.DiscoveryThread
  langs:
  - csharp
  - vb
  name: m_Config
  nameWithType: DiscoveryThread.m_Config
  fullName: Coop.NetImpl.LiteNet.DiscoveryThread.m_Config
  type: Field
  source:
    remote:
      path: source/Coop/NetImpl/LiteNet/DiscoveryThread.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_Config
    path: ../source/Coop/NetImpl/LiteNet/DiscoveryThread.cs
    startLine: 25
  assemblies:
  - Coop
  namespace: Coop.NetImpl.LiteNet
  syntax:
    content: readonly NetworkConfiguration m_Config
    return:
      type: Network.Infrastructure.NetworkConfiguration
    content.vb: ReadOnly m_Config As NetworkConfiguration
  modifiers.csharp:
  - readonly
  modifiers.vb:
  - ReadOnly
- uid: Coop.NetImpl.LiteNet.DiscoveryThread.m_NetManager
  commentId: F:Coop.NetImpl.LiteNet.DiscoveryThread.m_NetManager
  id: m_NetManager
  parent: Coop.NetImpl.LiteNet.DiscoveryThread
  langs:
  - csharp
  - vb
  name: m_NetManager
  nameWithType: DiscoveryThread.m_NetManager
  fullName: Coop.NetImpl.LiteNet.DiscoveryThread.m_NetManager
  type: Field
  source:
    remote:
      path: source/Coop/NetImpl/LiteNet/DiscoveryThread.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_NetManager
    path: ../source/Coop/NetImpl/LiteNet/DiscoveryThread.cs
    startLine: 27
  assemblies:
  - Coop
  namespace: Coop.NetImpl.LiteNet
  syntax:
    content: readonly NetManager m_NetManager
    return:
      type: NetManager
    content.vb: ReadOnly m_NetManager As NetManager
  modifiers.csharp:
  - readonly
  modifiers.vb:
  - ReadOnly
- uid: Coop.NetImpl.LiteNet.DiscoveryThread.m_StopRequestLock
  commentId: F:Coop.NetImpl.LiteNet.DiscoveryThread.m_StopRequestLock
  id: m_StopRequestLock
  parent: Coop.NetImpl.LiteNet.DiscoveryThread
  langs:
  - csharp
  - vb
  name: m_StopRequestLock
  nameWithType: DiscoveryThread.m_StopRequestLock
  fullName: Coop.NetImpl.LiteNet.DiscoveryThread.m_StopRequestLock
  type: Field
  source:
    remote:
      path: source/Coop/NetImpl/LiteNet/DiscoveryThread.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_StopRequestLock
    path: ../source/Coop/NetImpl/LiteNet/DiscoveryThread.cs
    startLine: 28
  assemblies:
  - Coop
  namespace: Coop.NetImpl.LiteNet
  syntax:
    content: readonly object m_StopRequestLock
    return:
      type: System.Object
    content.vb: ReadOnly m_StopRequestLock As Object
  modifiers.csharp:
  - readonly
  modifiers.vb:
  - ReadOnly
- uid: Coop.NetImpl.LiteNet.DiscoveryThread.m_FrameLimiter
  commentId: F:Coop.NetImpl.LiteNet.DiscoveryThread.m_FrameLimiter
  id: m_FrameLimiter
  parent: Coop.NetImpl.LiteNet.DiscoveryThread
  langs:
  - csharp
  - vb
  name: m_FrameLimiter
  nameWithType: DiscoveryThread.m_FrameLimiter
  fullName: Coop.NetImpl.LiteNet.DiscoveryThread.m_FrameLimiter
  type: Field
  source:
    remote:
      path: source/Coop/NetImpl/LiteNet/DiscoveryThread.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_FrameLimiter
    path: ../source/Coop/NetImpl/LiteNet/DiscoveryThread.cs
    startLine: 29
  assemblies:
  - Coop
  namespace: Coop.NetImpl.LiteNet
  syntax:
    content: >-
      [CanBeNull]

      FrameLimiter m_FrameLimiter
    return:
      type: Common.FrameLimiter
    content.vb: >-
      <CanBeNull>

      m_FrameLimiter As FrameLimiter
  attributes:
  - type: JetBrains.Annotations.CanBeNullAttribute
    ctor: JetBrains.Annotations.CanBeNullAttribute.#ctor
    arguments: []
- uid: Coop.NetImpl.LiteNet.DiscoveryThread.m_IsStopRequest
  commentId: F:Coop.NetImpl.LiteNet.DiscoveryThread.m_IsStopRequest
  id: m_IsStopRequest
  parent: Coop.NetImpl.LiteNet.DiscoveryThread
  langs:
  - csharp
  - vb
  name: m_IsStopRequest
  nameWithType: DiscoveryThread.m_IsStopRequest
  fullName: Coop.NetImpl.LiteNet.DiscoveryThread.m_IsStopRequest
  type: Field
  source:
    remote:
      path: source/Coop/NetImpl/LiteNet/DiscoveryThread.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_IsStopRequest
    path: ../source/Coop/NetImpl/LiteNet/DiscoveryThread.cs
    startLine: 30
  assemblies:
  - Coop
  namespace: Coop.NetImpl.LiteNet
  syntax:
    content: bool m_IsStopRequest
    return:
      type: System.Boolean
    content.vb: m_IsStopRequest As Boolean
- uid: Coop.NetImpl.LiteNet.DiscoveryThread.m_Thread
  commentId: F:Coop.NetImpl.LiteNet.DiscoveryThread.m_Thread
  id: m_Thread
  parent: Coop.NetImpl.LiteNet.DiscoveryThread
  langs:
  - csharp
  - vb
  name: m_Thread
  nameWithType: DiscoveryThread.m_Thread
  fullName: Coop.NetImpl.LiteNet.DiscoveryThread.m_Thread
  type: Field
  source:
    remote:
      path: source/Coop/NetImpl/LiteNet/DiscoveryThread.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_Thread
    path: ../source/Coop/NetImpl/LiteNet/DiscoveryThread.cs
    startLine: 31
  assemblies:
  - Coop
  namespace: Coop.NetImpl.LiteNet
  syntax:
    content: Thread m_Thread
    return:
      type: System.Threading.Thread
    content.vb: m_Thread As Thread
- uid: Coop.NetImpl.LiteNet.DiscoveryThread.#ctor(Network.Infrastructure.NetworkConfiguration)
  commentId: M:Coop.NetImpl.LiteNet.DiscoveryThread.#ctor(Network.Infrastructure.NetworkConfiguration)
  id: '#ctor(Network.Infrastructure.NetworkConfiguration)'
  parent: Coop.NetImpl.LiteNet.DiscoveryThread
  langs:
  - csharp
  - vb
  name: DiscoveryThread(NetworkConfiguration)
  nameWithType: DiscoveryThread.DiscoveryThread(NetworkConfiguration)
  fullName: Coop.NetImpl.LiteNet.DiscoveryThread.DiscoveryThread(Network.Infrastructure.NetworkConfiguration)
  type: Constructor
  source:
    remote:
      path: source/Coop/NetImpl/LiteNet/DiscoveryThread.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: .ctor
    path: ../source/Coop/NetImpl/LiteNet/DiscoveryThread.cs
    startLine: 38
  assemblies:
  - Coop
  namespace: Coop.NetImpl.LiteNet
  summary: "\nWill immediately spawn a new thread and start listing for discovery packets from\nbannerlord coop servers.\n"
  example: []
  syntax:
    content: public DiscoveryThread([NotNull] NetworkConfiguration config)
    parameters:
    - id: config
      type: Network.Infrastructure.NetworkConfiguration
      description: ''
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    content.vb: Public Sub New(config As NetworkConfiguration)
  overload: Coop.NetImpl.LiteNet.DiscoveryThread.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Coop.NetImpl.LiteNet.DiscoveryThread.ServerList
  commentId: P:Coop.NetImpl.LiteNet.DiscoveryThread.ServerList
  id: ServerList
  parent: Coop.NetImpl.LiteNet.DiscoveryThread
  langs:
  - csharp
  - vb
  name: ServerList
  nameWithType: DiscoveryThread.ServerList
  fullName: Coop.NetImpl.LiteNet.DiscoveryThread.ServerList
  type: Property
  source:
    remote:
      path: source/Coop/NetImpl/LiteNet/DiscoveryThread.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ServerList
    path: ../source/Coop/NetImpl/LiteNet/DiscoveryThread.cs
    startLine: 82
  assemblies:
  - Coop
  namespace: Coop.NetImpl.LiteNet
  summary: "\nRetrieve all found server. There is no guarantee that the servers are still available.\n"
  example: []
  syntax:
    content: public List<IPEndPoint> ServerList { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Net.IPEndPoint}
    content.vb: Public ReadOnly Property ServerList As List(Of IPEndPoint)
  overload: Coop.NetImpl.LiteNet.DiscoveryThread.ServerList*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Coop.NetImpl.LiteNet.DiscoveryThread.Finalize
  commentId: M:Coop.NetImpl.LiteNet.DiscoveryThread.Finalize
  id: Finalize
  parent: Coop.NetImpl.LiteNet.DiscoveryThread
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: DiscoveryThread.Finalize()
  fullName: Coop.NetImpl.LiteNet.DiscoveryThread.Finalize()
  type: Method
  source:
    remote:
      path: source/Coop/NetImpl/LiteNet/DiscoveryThread.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Finalize
    path: ../source/Coop/NetImpl/LiteNet/DiscoveryThread.cs
    startLine: 93
  assemblies:
  - Coop
  namespace: Coop.NetImpl.LiteNet
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: Coop.NetImpl.LiteNet.DiscoveryThread.Finalize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Coop.NetImpl.LiteNet.DiscoveryThread.Stop
  commentId: M:Coop.NetImpl.LiteNet.DiscoveryThread.Stop
  id: Stop
  parent: Coop.NetImpl.LiteNet.DiscoveryThread
  langs:
  - csharp
  - vb
  name: Stop()
  nameWithType: DiscoveryThread.Stop()
  fullName: Coop.NetImpl.LiteNet.DiscoveryThread.Stop()
  type: Method
  source:
    remote:
      path: source/Coop/NetImpl/LiteNet/DiscoveryThread.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Stop
    path: ../source/Coop/NetImpl/LiteNet/DiscoveryThread.cs
    startLine: 99
  assemblies:
  - Coop
  namespace: Coop.NetImpl.LiteNet
  syntax:
    content: void Stop()
    content.vb: Sub Stop
  overload: Coop.NetImpl.LiteNet.DiscoveryThread.Stop*
- uid: Coop.NetImpl.LiteNet.DiscoveryThread.Run
  commentId: M:Coop.NetImpl.LiteNet.DiscoveryThread.Run
  id: Run
  parent: Coop.NetImpl.LiteNet.DiscoveryThread
  langs:
  - csharp
  - vb
  name: Run()
  nameWithType: DiscoveryThread.Run()
  fullName: Coop.NetImpl.LiteNet.DiscoveryThread.Run()
  type: Method
  source:
    remote:
      path: source/Coop/NetImpl/LiteNet/DiscoveryThread.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Run
    path: ../source/Coop/NetImpl/LiteNet/DiscoveryThread.cs
    startLine: 115
  assemblies:
  - Coop
  namespace: Coop.NetImpl.LiteNet
  syntax:
    content: void Run()
    content.vb: Sub Run
  overload: Coop.NetImpl.LiteNet.DiscoveryThread.Run*
references:
- uid: Coop.NetImpl.LiteNet
  commentId: N:Coop.NetImpl.LiteNet
  name: Coop.NetImpl.LiteNet
  nameWithType: Coop.NetImpl.LiteNet
  fullName: Coop.NetImpl.LiteNet
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NLog.Logger
  commentId: T:NLog.Logger
  parent: NLog
  isExternal: true
  name: Logger
  nameWithType: Logger
  fullName: NLog.Logger
- uid: NLog
  commentId: N:NLog
  isExternal: true
  name: NLog
  nameWithType: NLog
  fullName: NLog
- uid: System.Collections.Generic.HashSet{System.Net.IPEndPoint}
  commentId: T:System.Collections.Generic.HashSet{System.Net.IPEndPoint}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  name: HashSet<IPEndPoint>
  nameWithType: HashSet<IPEndPoint>
  fullName: System.Collections.Generic.HashSet<System.Net.IPEndPoint>
  nameWithType.vb: HashSet(Of IPEndPoint)
  fullName.vb: System.Collections.Generic.HashSet(Of System.Net.IPEndPoint)
  name.vb: HashSet(Of IPEndPoint)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.IPEndPoint
    name: IPEndPoint
    nameWithType: IPEndPoint
    fullName: System.Net.IPEndPoint
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.IPEndPoint
    name: IPEndPoint
    nameWithType: IPEndPoint
    fullName: System.Net.IPEndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Network.Infrastructure.NetworkConfiguration
  commentId: T:Network.Infrastructure.NetworkConfiguration
  parent: Network.Infrastructure
  name: NetworkConfiguration
  nameWithType: NetworkConfiguration
  fullName: Network.Infrastructure.NetworkConfiguration
- uid: Network.Infrastructure
  commentId: N:Network.Infrastructure
  name: Network.Infrastructure
  nameWithType: Network.Infrastructure
  fullName: Network.Infrastructure
- uid: NetManager
  isExternal: true
  name: NetManager
  nameWithType: NetManager
  fullName: NetManager
- uid: Common.FrameLimiter
  commentId: T:Common.FrameLimiter
  parent: Common
  name: FrameLimiter
  nameWithType: FrameLimiter
  fullName: Common.FrameLimiter
- uid: Common
  commentId: N:Common
  name: Common
  nameWithType: Common
  fullName: Common
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.Thread
  commentId: T:System.Threading.Thread
  parent: System.Threading
  isExternal: true
  name: Thread
  nameWithType: Thread
  fullName: System.Threading.Thread
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: Coop.NetImpl.LiteNet.DiscoveryThread.#ctor*
  commentId: Overload:Coop.NetImpl.LiteNet.DiscoveryThread.#ctor
  name: DiscoveryThread
  nameWithType: DiscoveryThread.DiscoveryThread
  fullName: Coop.NetImpl.LiteNet.DiscoveryThread.DiscoveryThread
- uid: Coop.NetImpl.LiteNet.DiscoveryThread.ServerList*
  commentId: Overload:Coop.NetImpl.LiteNet.DiscoveryThread.ServerList
  name: ServerList
  nameWithType: DiscoveryThread.ServerList
  fullName: Coop.NetImpl.LiteNet.DiscoveryThread.ServerList
- uid: System.Collections.Generic.List{System.Net.IPEndPoint}
  commentId: T:System.Collections.Generic.List{System.Net.IPEndPoint}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IPEndPoint>
  nameWithType: List<IPEndPoint>
  fullName: System.Collections.Generic.List<System.Net.IPEndPoint>
  nameWithType.vb: List(Of IPEndPoint)
  fullName.vb: System.Collections.Generic.List(Of System.Net.IPEndPoint)
  name.vb: List(Of IPEndPoint)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.IPEndPoint
    name: IPEndPoint
    nameWithType: IPEndPoint
    fullName: System.Net.IPEndPoint
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.IPEndPoint
    name: IPEndPoint
    nameWithType: IPEndPoint
    fullName: System.Net.IPEndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Coop.NetImpl.LiteNet.DiscoveryThread.Finalize*
  commentId: Overload:Coop.NetImpl.LiteNet.DiscoveryThread.Finalize
  name: Finalize
  nameWithType: DiscoveryThread.Finalize
  fullName: Coop.NetImpl.LiteNet.DiscoveryThread.Finalize
- uid: Coop.NetImpl.LiteNet.DiscoveryThread.Stop*
  commentId: Overload:Coop.NetImpl.LiteNet.DiscoveryThread.Stop
  name: Stop
  nameWithType: DiscoveryThread.Stop
  fullName: Coop.NetImpl.LiteNet.DiscoveryThread.Stop
- uid: Coop.NetImpl.LiteNet.DiscoveryThread.Run*
  commentId: Overload:Coop.NetImpl.LiteNet.DiscoveryThread.Run
  name: Run
  nameWithType: DiscoveryThread.Run
  fullName: Coop.NetImpl.LiteNet.DiscoveryThread.Run
