### YamlMime:ManagedReference
items:
- uid: Network.Infrastructure.ISaveData
  commentId: T:Network.Infrastructure.ISaveData
  id: ISaveData
  parent: Network.Infrastructure
  children:
  - Network.Infrastructure.ISaveData.Receive(System.ArraySegment{System.Byte})
  - Network.Infrastructure.ISaveData.RequiresCharacterCreation
  - Network.Infrastructure.ISaveData.SerializeInitialWorldState
  langs:
  - csharp
  - vb
  name: ISaveData
  nameWithType: ISaveData
  fullName: Network.Infrastructure.ISaveData
  type: Interface
  source:
    remote:
      path: source/Network/Infrastructure/ISaveData.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ISaveData
    path: ../source/Network/Infrastructure/ISaveData.cs
    startLine: 4
  assemblies:
  - Network
  namespace: Network.Infrastructure
  syntax:
    content: public interface ISaveData
    content.vb: Public Interface ISaveData
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Network.Infrastructure.ISaveData.RequiresCharacterCreation
  commentId: P:Network.Infrastructure.ISaveData.RequiresCharacterCreation
  id: RequiresCharacterCreation
  parent: Network.Infrastructure.ISaveData
  langs:
  - csharp
  - vb
  name: RequiresCharacterCreation
  nameWithType: ISaveData.RequiresCharacterCreation
  fullName: Network.Infrastructure.ISaveData.RequiresCharacterCreation
  type: Property
  source:
    remote:
      path: source/Network/Infrastructure/ISaveData.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: RequiresCharacterCreation
    path: ../source/Network/Infrastructure/ISaveData.cs
    startLine: 6
  assemblies:
  - Network
  namespace: Network.Infrastructure
  syntax:
    content: bool RequiresCharacterCreation { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property RequiresCharacterCreation As Boolean
  overload: Network.Infrastructure.ISaveData.RequiresCharacterCreation*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Network.Infrastructure.ISaveData.Receive(System.ArraySegment{System.Byte})
  commentId: M:Network.Infrastructure.ISaveData.Receive(System.ArraySegment{System.Byte})
  id: Receive(System.ArraySegment{System.Byte})
  parent: Network.Infrastructure.ISaveData
  langs:
  - csharp
  - vb
  name: Receive(ArraySegment<Byte>)
  nameWithType: ISaveData.Receive(ArraySegment<Byte>)
  fullName: Network.Infrastructure.ISaveData.Receive(System.ArraySegment<System.Byte>)
  type: Method
  source:
    remote:
      path: source/Network/Infrastructure/ISaveData.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Receive
    path: ../source/Network/Infrastructure/ISaveData.cs
    startLine: 7
  assemblies:
  - Network
  namespace: Network.Infrastructure
  syntax:
    content: bool Receive(ArraySegment<byte> rawData)
    parameters:
    - id: rawData
      type: System.ArraySegment{System.Byte}
    return:
      type: System.Boolean
    content.vb: Function Receive(rawData As ArraySegment(Of Byte)) As Boolean
  overload: Network.Infrastructure.ISaveData.Receive*
  nameWithType.vb: ISaveData.Receive(ArraySegment(Of Byte))
  fullName.vb: Network.Infrastructure.ISaveData.Receive(System.ArraySegment(Of System.Byte))
  name.vb: Receive(ArraySegment(Of Byte))
- uid: Network.Infrastructure.ISaveData.SerializeInitialWorldState
  commentId: M:Network.Infrastructure.ISaveData.SerializeInitialWorldState
  id: SerializeInitialWorldState
  parent: Network.Infrastructure.ISaveData
  langs:
  - csharp
  - vb
  name: SerializeInitialWorldState()
  nameWithType: ISaveData.SerializeInitialWorldState()
  fullName: Network.Infrastructure.ISaveData.SerializeInitialWorldState()
  type: Method
  source:
    remote:
      path: source/Network/Infrastructure/ISaveData.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: SerializeInitialWorldState
    path: ../source/Network/Infrastructure/ISaveData.cs
    startLine: 8
  assemblies:
  - Network
  namespace: Network.Infrastructure
  syntax:
    content: byte[] SerializeInitialWorldState()
    return:
      type: System.Byte[]
    content.vb: Function SerializeInitialWorldState As Byte()
  overload: Network.Infrastructure.ISaveData.SerializeInitialWorldState*
references:
- uid: Network.Infrastructure
  commentId: N:Network.Infrastructure
  name: Network.Infrastructure
  nameWithType: Network.Infrastructure
  fullName: Network.Infrastructure
- uid: Network.Infrastructure.ISaveData.RequiresCharacterCreation*
  commentId: Overload:Network.Infrastructure.ISaveData.RequiresCharacterCreation
  name: RequiresCharacterCreation
  nameWithType: ISaveData.RequiresCharacterCreation
  fullName: Network.Infrastructure.ISaveData.RequiresCharacterCreation
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Network.Infrastructure.ISaveData.Receive*
  commentId: Overload:Network.Infrastructure.ISaveData.Receive
  name: Receive
  nameWithType: ISaveData.Receive
  fullName: Network.Infrastructure.ISaveData.Receive
- uid: System.ArraySegment{System.Byte}
  commentId: T:System.ArraySegment{System.Byte}
  parent: System
  definition: System.ArraySegment`1
  name: ArraySegment<Byte>
  nameWithType: ArraySegment<Byte>
  fullName: System.ArraySegment<System.Byte>
  nameWithType.vb: ArraySegment(Of Byte)
  fullName.vb: System.ArraySegment(Of System.Byte)
  name.vb: ArraySegment(Of Byte)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ArraySegment`1
  commentId: T:System.ArraySegment`1
  isExternal: true
  name: ArraySegment<T>
  nameWithType: ArraySegment<T>
  fullName: System.ArraySegment<T>
  nameWithType.vb: ArraySegment(Of T)
  fullName.vb: System.ArraySegment(Of T)
  name.vb: ArraySegment(Of T)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Network.Infrastructure.ISaveData.SerializeInitialWorldState*
  commentId: Overload:Network.Infrastructure.ISaveData.SerializeInitialWorldState
  name: SerializeInitialWorldState
  nameWithType: ISaveData.SerializeInitialWorldState
  fullName: Network.Infrastructure.ISaveData.SerializeInitialWorldState
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
