### YamlMime:ManagedReference
items:
- uid: Sync.ValueData
  commentId: T:Sync.ValueData
  id: ValueData
  parent: Sync
  children:
  - Sync.ValueData.#ctor(Sync.ValueAccess,System.Object,System.Object)
  - Sync.ValueData.Access
  - Sync.ValueData.Target
  - Sync.ValueData.Value
  langs:
  - csharp
  - vb
  name: ValueData
  nameWithType: ValueData
  fullName: Sync.ValueData
  type: Class
  source:
    remote:
      path: source/Sync/ValueData.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ValueData
    path: ../source/Sync/ValueData.cs
    startLine: 4
  assemblies:
  - Sync
  namespace: Sync
  syntax:
    content: public class ValueData
    content.vb: Public Class ValueData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sync.ValueData.#ctor(Sync.ValueAccess,System.Object,System.Object)
  commentId: M:Sync.ValueData.#ctor(Sync.ValueAccess,System.Object,System.Object)
  id: '#ctor(Sync.ValueAccess,System.Object,System.Object)'
  parent: Sync.ValueData
  langs:
  - csharp
  - vb
  name: ValueData(ValueAccess, Object, Object)
  nameWithType: ValueData.ValueData(ValueAccess, Object, Object)
  fullName: Sync.ValueData.ValueData(Sync.ValueAccess, System.Object, System.Object)
  type: Constructor
  source:
    remote:
      path: source/Sync/ValueData.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: .ctor
    path: ../source/Sync/ValueData.cs
    startLine: 6
  assemblies:
  - Sync
  namespace: Sync
  syntax:
    content: public ValueData([NotNull] ValueAccess access, object target, object value)
    parameters:
    - id: access
      type: Sync.ValueAccess
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    - id: target
      type: System.Object
    - id: value
      type: System.Object
    content.vb: Public Sub New(access As ValueAccess, target As Object, value As Object)
  overload: Sync.ValueData.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sync.ValueData.Access
  commentId: P:Sync.ValueData.Access
  id: Access
  parent: Sync.ValueData
  langs:
  - csharp
  - vb
  name: Access
  nameWithType: ValueData.Access
  fullName: Sync.ValueData.Access
  type: Property
  source:
    remote:
      path: source/Sync/ValueData.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Access
    path: ../source/Sync/ValueData.cs
    startLine: 13
  assemblies:
  - Sync
  namespace: Sync
  syntax:
    content: public ValueAccess Access { get; }
    parameters: []
    return:
      type: Sync.ValueAccess
    content.vb: Public ReadOnly Property Access As ValueAccess
  overload: Sync.ValueData.Access*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sync.ValueData.Target
  commentId: P:Sync.ValueData.Target
  id: Target
  parent: Sync.ValueData
  langs:
  - csharp
  - vb
  name: Target
  nameWithType: ValueData.Target
  fullName: Sync.ValueData.Target
  type: Property
  source:
    remote:
      path: source/Sync/ValueData.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Target
    path: ../source/Sync/ValueData.cs
    startLine: 14
  assemblies:
  - Sync
  namespace: Sync
  syntax:
    content: public object Target { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property Target As Object
  overload: Sync.ValueData.Target*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sync.ValueData.Value
  commentId: P:Sync.ValueData.Value
  id: Value
  parent: Sync.ValueData
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: ValueData.Value
  fullName: Sync.ValueData.Value
  type: Property
  source:
    remote:
      path: source/Sync/ValueData.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Value
    path: ../source/Sync/ValueData.cs
    startLine: 15
  assemblies:
  - Sync
  namespace: Sync
  syntax:
    content: public object Value { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property Value As Object
  overload: Sync.ValueData.Value*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sync
  commentId: N:Sync
  name: Sync
  nameWithType: Sync
  fullName: Sync
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sync.ValueData.#ctor*
  commentId: Overload:Sync.ValueData.#ctor
  name: ValueData
  nameWithType: ValueData.ValueData
  fullName: Sync.ValueData.ValueData
- uid: Sync.ValueAccess
  commentId: T:Sync.ValueAccess
  parent: Sync
  name: ValueAccess
  nameWithType: ValueAccess
  fullName: Sync.ValueAccess
- uid: Sync.ValueData.Access*
  commentId: Overload:Sync.ValueData.Access
  name: Access
  nameWithType: ValueData.Access
  fullName: Sync.ValueData.Access
- uid: Sync.ValueData.Target*
  commentId: Overload:Sync.ValueData.Target
  name: Target
  nameWithType: ValueData.Target
  fullName: Sync.ValueData.Target
- uid: Sync.ValueData.Value*
  commentId: Overload:Sync.ValueData.Value
  name: Value
  nameWithType: ValueData.Value
  fullName: Sync.ValueData.Value
