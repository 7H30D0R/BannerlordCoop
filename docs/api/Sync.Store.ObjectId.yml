### YamlMime:ManagedReference
items:
- uid: Sync.Store.ObjectId
  commentId: T:Sync.Store.ObjectId
  id: ObjectId
  parent: Sync.Store
  children:
  - Sync.Store.ObjectId.#ctor(System.UInt32)
  - Sync.Store.ObjectId.Equals(Sync.Store.ObjectId)
  - Sync.Store.ObjectId.Equals(System.Object)
  - Sync.Store.ObjectId.GetHashCode
  - Sync.Store.ObjectId.op_Equality(Sync.Store.ObjectId,Sync.Store.ObjectId)
  - Sync.Store.ObjectId.op_Inequality(Sync.Store.ObjectId,Sync.Store.ObjectId)
  - Sync.Store.ObjectId.ToString
  - Sync.Store.ObjectId.Value
  langs:
  - csharp
  - vb
  name: ObjectId
  nameWithType: ObjectId
  fullName: Sync.Store.ObjectId
  type: Struct
  source:
    remote:
      path: source/Sync/Store/IStore.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ObjectId
    path: ../source/Sync/Store/IStore.cs
    startLine: 5
  assemblies:
  - Sync
  namespace: Sync.Store
  syntax:
    content: public struct ObjectId
    content.vb: Public Structure ObjectId
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Sync.Store.ObjectId.Equals(Sync.Store.ObjectId)
  commentId: M:Sync.Store.ObjectId.Equals(Sync.Store.ObjectId)
  id: Equals(Sync.Store.ObjectId)
  parent: Sync.Store.ObjectId
  langs:
  - csharp
  - vb
  name: Equals(ObjectId)
  nameWithType: ObjectId.Equals(ObjectId)
  fullName: Sync.Store.ObjectId.Equals(Sync.Store.ObjectId)
  type: Method
  source:
    remote:
      path: source/Sync/Store/IStore.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Equals
    path: ../source/Sync/Store/IStore.cs
    startLine: 7
  assemblies:
  - Sync
  namespace: Sync.Store
  syntax:
    content: public bool Equals(ObjectId other)
    parameters:
    - id: other
      type: Sync.Store.ObjectId
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As ObjectId) As Boolean
  overload: Sync.Store.ObjectId.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sync.Store.ObjectId.Equals(System.Object)
  commentId: M:Sync.Store.ObjectId.Equals(System.Object)
  id: Equals(System.Object)
  parent: Sync.Store.ObjectId
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: ObjectId.Equals(Object)
  fullName: Sync.Store.ObjectId.Equals(System.Object)
  type: Method
  source:
    remote:
      path: source/Sync/Store/IStore.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Equals
    path: ../source/Sync/Store/IStore.cs
    startLine: 12
  assemblies:
  - Sync
  namespace: Sync.Store
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Sync.Store.ObjectId.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sync.Store.ObjectId.GetHashCode
  commentId: M:Sync.Store.ObjectId.GetHashCode
  id: GetHashCode
  parent: Sync.Store.ObjectId
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ObjectId.GetHashCode()
  fullName: Sync.Store.ObjectId.GetHashCode()
  type: Method
  source:
    remote:
      path: source/Sync/Store/IStore.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: GetHashCode
    path: ../source/Sync/Store/IStore.cs
    startLine: 17
  assemblies:
  - Sync
  namespace: Sync.Store
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: Sync.Store.ObjectId.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sync.Store.ObjectId.Value
  commentId: P:Sync.Store.ObjectId.Value
  id: Value
  parent: Sync.Store.ObjectId
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: ObjectId.Value
  fullName: Sync.Store.ObjectId.Value
  type: Property
  source:
    remote:
      path: source/Sync/Store/IStore.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Value
    path: ../source/Sync/Store/IStore.cs
    startLine: 22
  assemblies:
  - Sync
  namespace: Sync.Store
  syntax:
    content: public uint Value { get; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public ReadOnly Property Value As UInteger
  overload: Sync.Store.ObjectId.Value*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sync.Store.ObjectId.#ctor(System.UInt32)
  commentId: M:Sync.Store.ObjectId.#ctor(System.UInt32)
  id: '#ctor(System.UInt32)'
  parent: Sync.Store.ObjectId
  langs:
  - csharp
  - vb
  name: ObjectId(UInt32)
  nameWithType: ObjectId.ObjectId(UInt32)
  fullName: Sync.Store.ObjectId.ObjectId(System.UInt32)
  type: Constructor
  source:
    remote:
      path: source/Sync/Store/IStore.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: .ctor
    path: ../source/Sync/Store/IStore.cs
    startLine: 24
  assemblies:
  - Sync
  namespace: Sync.Store
  syntax:
    content: public ObjectId(uint id)
    parameters:
    - id: id
      type: System.UInt32
    content.vb: Public Sub New(id As UInteger)
  overload: Sync.Store.ObjectId.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sync.Store.ObjectId.ToString
  commentId: M:Sync.Store.ObjectId.ToString
  id: ToString
  parent: Sync.Store.ObjectId
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ObjectId.ToString()
  fullName: Sync.Store.ObjectId.ToString()
  type: Method
  source:
    remote:
      path: source/Sync/Store/IStore.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ToString
    path: ../source/Sync/Store/IStore.cs
    startLine: 29
  assemblies:
  - Sync
  namespace: Sync.Store
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: Sync.Store.ObjectId.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sync.Store.ObjectId.op_Equality(Sync.Store.ObjectId,Sync.Store.ObjectId)
  commentId: M:Sync.Store.ObjectId.op_Equality(Sync.Store.ObjectId,Sync.Store.ObjectId)
  id: op_Equality(Sync.Store.ObjectId,Sync.Store.ObjectId)
  parent: Sync.Store.ObjectId
  langs:
  - csharp
  - vb
  name: Equality(ObjectId, ObjectId)
  nameWithType: ObjectId.Equality(ObjectId, ObjectId)
  fullName: Sync.Store.ObjectId.Equality(Sync.Store.ObjectId, Sync.Store.ObjectId)
  type: Operator
  source:
    remote:
      path: source/Sync/Store/IStore.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: op_Equality
    path: ../source/Sync/Store/IStore.cs
    startLine: 34
  assemblies:
  - Sync
  namespace: Sync.Store
  syntax:
    content: public static bool operator ==(ObjectId lhs, ObjectId rhs)
    parameters:
    - id: lhs
      type: Sync.Store.ObjectId
    - id: rhs
      type: Sync.Store.ObjectId
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(lhs As ObjectId, rhs As ObjectId) As Boolean
  overload: Sync.Store.ObjectId.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sync.Store.ObjectId.op_Inequality(Sync.Store.ObjectId,Sync.Store.ObjectId)
  commentId: M:Sync.Store.ObjectId.op_Inequality(Sync.Store.ObjectId,Sync.Store.ObjectId)
  id: op_Inequality(Sync.Store.ObjectId,Sync.Store.ObjectId)
  parent: Sync.Store.ObjectId
  langs:
  - csharp
  - vb
  name: Inequality(ObjectId, ObjectId)
  nameWithType: ObjectId.Inequality(ObjectId, ObjectId)
  fullName: Sync.Store.ObjectId.Inequality(Sync.Store.ObjectId, Sync.Store.ObjectId)
  type: Operator
  source:
    remote:
      path: source/Sync/Store/IStore.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: op_Inequality
    path: ../source/Sync/Store/IStore.cs
    startLine: 35
  assemblies:
  - Sync
  namespace: Sync.Store
  syntax:
    content: public static bool operator !=(ObjectId lhs, ObjectId rhs)
    parameters:
    - id: lhs
      type: Sync.Store.ObjectId
    - id: rhs
      type: Sync.Store.ObjectId
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(lhs As ObjectId, rhs As ObjectId) As Boolean
  overload: Sync.Store.ObjectId.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Sync.Store
  commentId: N:Sync.Store
  name: Sync.Store
  nameWithType: Sync.Store
  fullName: Sync.Store
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sync.Store.ObjectId.Equals*
  commentId: Overload:Sync.Store.ObjectId.Equals
  name: Equals
  nameWithType: ObjectId.Equals
  fullName: Sync.Store.ObjectId.Equals
- uid: Sync.Store.ObjectId
  commentId: T:Sync.Store.ObjectId
  parent: Sync.Store
  name: ObjectId
  nameWithType: ObjectId
  fullName: Sync.Store.ObjectId
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sync.Store.ObjectId.GetHashCode*
  commentId: Overload:Sync.Store.ObjectId.GetHashCode
  name: GetHashCode
  nameWithType: ObjectId.GetHashCode
  fullName: Sync.Store.ObjectId.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sync.Store.ObjectId.Value*
  commentId: Overload:Sync.Store.ObjectId.Value
  name: Value
  nameWithType: ObjectId.Value
  fullName: Sync.Store.ObjectId.Value
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: Sync.Store.ObjectId.#ctor*
  commentId: Overload:Sync.Store.ObjectId.#ctor
  name: ObjectId
  nameWithType: ObjectId.ObjectId
  fullName: Sync.Store.ObjectId.ObjectId
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sync.Store.ObjectId.ToString*
  commentId: Overload:Sync.Store.ObjectId.ToString
  name: ToString
  nameWithType: ObjectId.ToString
  fullName: Sync.Store.ObjectId.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sync.Store.ObjectId.op_Equality*
  commentId: Overload:Sync.Store.ObjectId.op_Equality
  name: Equality
  nameWithType: ObjectId.Equality
  fullName: Sync.Store.ObjectId.Equality
- uid: Sync.Store.ObjectId.op_Inequality*
  commentId: Overload:Sync.Store.ObjectId.op_Inequality
  name: Inequality
  nameWithType: ObjectId.Inequality
  fullName: Sync.Store.ObjectId.Inequality
