### YamlMime:ManagedReference
items:
- uid: ModTestingFramework.CommandRegistry
  commentId: T:ModTestingFramework.CommandRegistry
  id: CommandRegistry
  parent: ModTestingFramework
  children:
  - ModTestingFramework.CommandRegistry.AsyncRegisterCommand(System.String,System.Reflection.MethodInfo)
  - ModTestingFramework.CommandRegistry.commands
  - ModTestingFramework.CommandRegistry.communicator
  - ModTestingFramework.CommandRegistry.instance
  - ModTestingFramework.CommandRegistry.Instance
  - ModTestingFramework.CommandRegistry.RegisterAllCommands
  - ModTestingFramework.CommandRegistry.RegisterCommand(System.String,System.Reflection.MethodInfo)
  - ModTestingFramework.CommandRegistry.SendRegistrationComplete
  langs:
  - csharp
  - vb
  name: CommandRegistry
  nameWithType: CommandRegistry
  fullName: ModTestingFramework.CommandRegistry
  type: Class
  source:
    remote:
      path: BannerlordSystemTestingFramework/CommandRegistry.cs
      branch: e2e229ada4f94221ad125ec1685d8141d101c3d3
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordTestingEssentials.git
    id: CommandRegistry
    path: ../source/BannerlordTestingEssentials/BannerlordSystemTestingFramework/CommandRegistry.cs
    startLine: 18
  assemblies:
  - BannerlordSystemTestingFramework
  namespace: ModTestingFramework
  syntax:
    content: class CommandRegistry
    content.vb: Class CommandRegistry
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - class
  modifiers.vb:
  - Class
- uid: ModTestingFramework.CommandRegistry.commands
  commentId: F:ModTestingFramework.CommandRegistry.commands
  id: commands
  parent: ModTestingFramework.CommandRegistry
  langs:
  - csharp
  - vb
  name: commands
  nameWithType: CommandRegistry.commands
  fullName: ModTestingFramework.CommandRegistry.commands
  type: Field
  source:
    remote:
      path: BannerlordSystemTestingFramework/CommandRegistry.cs
      branch: e2e229ada4f94221ad125ec1685d8141d101c3d3
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordTestingEssentials.git
    id: commands
    path: ../source/BannerlordTestingEssentials/BannerlordSystemTestingFramework/CommandRegistry.cs
    startLine: 20
  assemblies:
  - BannerlordSystemTestingFramework
  namespace: ModTestingFramework
  syntax:
    content: public static Dictionary<string, MethodInfo> commands
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Reflection.MethodInfo}
    content.vb: Public Shared commands As Dictionary(Of String, MethodInfo)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: ModTestingFramework.CommandRegistry.instance
  commentId: F:ModTestingFramework.CommandRegistry.instance
  id: instance
  parent: ModTestingFramework.CommandRegistry
  langs:
  - csharp
  - vb
  name: instance
  nameWithType: CommandRegistry.instance
  fullName: ModTestingFramework.CommandRegistry.instance
  type: Field
  source:
    remote:
      path: BannerlordSystemTestingFramework/CommandRegistry.cs
      branch: e2e229ada4f94221ad125ec1685d8141d101c3d3
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordTestingEssentials.git
    id: instance
    path: ../source/BannerlordTestingEssentials/BannerlordSystemTestingFramework/CommandRegistry.cs
    startLine: 21
  assemblies:
  - BannerlordSystemTestingFramework
  namespace: ModTestingFramework
  syntax:
    content: static CommandRegistry instance
    return:
      type: ModTestingFramework.CommandRegistry
    content.vb: Shared instance As CommandRegistry
  modifiers.csharp:
  - static
  modifiers.vb:
  - Shared
- uid: ModTestingFramework.CommandRegistry.RegisterAllCommands
  commentId: M:ModTestingFramework.CommandRegistry.RegisterAllCommands
  id: RegisterAllCommands
  parent: ModTestingFramework.CommandRegistry
  langs:
  - csharp
  - vb
  name: RegisterAllCommands()
  nameWithType: CommandRegistry.RegisterAllCommands()
  fullName: ModTestingFramework.CommandRegistry.RegisterAllCommands()
  type: Method
  source:
    remote:
      path: BannerlordSystemTestingFramework/CommandRegistry.cs
      branch: e2e229ada4f94221ad125ec1685d8141d101c3d3
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordTestingEssentials.git
    id: RegisterAllCommands
    path: ../source/BannerlordTestingEssentials/BannerlordSystemTestingFramework/CommandRegistry.cs
    startLine: 23
  assemblies:
  - BannerlordSystemTestingFramework
  namespace: ModTestingFramework
  syntax:
    content: public static void RegisterAllCommands()
    content.vb: Public Shared Sub RegisterAllCommands
  overload: ModTestingFramework.CommandRegistry.RegisterAllCommands*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: ModTestingFramework.CommandRegistry.communicator
  commentId: F:ModTestingFramework.CommandRegistry.communicator
  id: communicator
  parent: ModTestingFramework.CommandRegistry
  langs:
  - csharp
  - vb
  name: communicator
  nameWithType: CommandRegistry.communicator
  fullName: ModTestingFramework.CommandRegistry.communicator
  type: Field
  source:
    remote:
      path: BannerlordSystemTestingFramework/CommandRegistry.cs
      branch: e2e229ada4f94221ad125ec1685d8141d101c3d3
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordTestingEssentials.git
    id: communicator
    path: ../source/BannerlordTestingEssentials/BannerlordSystemTestingFramework/CommandRegistry.cs
    startLine: 65
  assemblies:
  - BannerlordSystemTestingFramework
  namespace: ModTestingFramework
  syntax:
    content: static readonly RunnerCommunicator communicator
    return:
      type: ModTestingFramework.RunnerCommunicator
    content.vb: Shared ReadOnly communicator As RunnerCommunicator
  modifiers.csharp:
  - static
  - readonly
  modifiers.vb:
  - Shared
  - ReadOnly
- uid: ModTestingFramework.CommandRegistry.SendRegistrationComplete
  commentId: M:ModTestingFramework.CommandRegistry.SendRegistrationComplete
  id: SendRegistrationComplete
  parent: ModTestingFramework.CommandRegistry
  langs:
  - csharp
  - vb
  name: SendRegistrationComplete()
  nameWithType: CommandRegistry.SendRegistrationComplete()
  fullName: ModTestingFramework.CommandRegistry.SendRegistrationComplete()
  type: Method
  source:
    remote:
      path: BannerlordSystemTestingFramework/CommandRegistry.cs
      branch: e2e229ada4f94221ad125ec1685d8141d101c3d3
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordTestingEssentials.git
    id: SendRegistrationComplete
    path: ../source/BannerlordTestingEssentials/BannerlordSystemTestingFramework/CommandRegistry.cs
    startLine: 67
  assemblies:
  - BannerlordSystemTestingFramework
  namespace: ModTestingFramework
  syntax:
    content: static void SendRegistrationComplete()
    content.vb: Shared Sub SendRegistrationComplete
  overload: ModTestingFramework.CommandRegistry.SendRegistrationComplete*
  modifiers.csharp:
  - static
  modifiers.vb:
  - Shared
- uid: ModTestingFramework.CommandRegistry.RegisterCommand(System.String,System.Reflection.MethodInfo)
  commentId: M:ModTestingFramework.CommandRegistry.RegisterCommand(System.String,System.Reflection.MethodInfo)
  id: RegisterCommand(System.String,System.Reflection.MethodInfo)
  parent: ModTestingFramework.CommandRegistry
  langs:
  - csharp
  - vb
  name: RegisterCommand(String, MethodInfo)
  nameWithType: CommandRegistry.RegisterCommand(String, MethodInfo)
  fullName: ModTestingFramework.CommandRegistry.RegisterCommand(System.String, System.Reflection.MethodInfo)
  type: Method
  source:
    remote:
      path: BannerlordSystemTestingFramework/CommandRegistry.cs
      branch: e2e229ada4f94221ad125ec1685d8141d101c3d3
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordTestingEssentials.git
    id: RegisterCommand
    path: ../source/BannerlordTestingEssentials/BannerlordSystemTestingFramework/CommandRegistry.cs
    startLine: 72
  assemblies:
  - BannerlordSystemTestingFramework
  namespace: ModTestingFramework
  syntax:
    content: static Task RegisterCommand(string command, MethodInfo methodInfo)
    parameters:
    - id: command
      type: System.String
    - id: methodInfo
      type: System.Reflection.MethodInfo
    return:
      type: System.Threading.Tasks.Task
    content.vb: Shared Function RegisterCommand(command As String, methodInfo As MethodInfo) As Task
  overload: ModTestingFramework.CommandRegistry.RegisterCommand*
  modifiers.csharp:
  - static
  modifiers.vb:
  - Shared
- uid: ModTestingFramework.CommandRegistry.AsyncRegisterCommand(System.String,System.Reflection.MethodInfo)
  commentId: M:ModTestingFramework.CommandRegistry.AsyncRegisterCommand(System.String,System.Reflection.MethodInfo)
  id: AsyncRegisterCommand(System.String,System.Reflection.MethodInfo)
  parent: ModTestingFramework.CommandRegistry
  langs:
  - csharp
  - vb
  name: AsyncRegisterCommand(String, MethodInfo)
  nameWithType: CommandRegistry.AsyncRegisterCommand(String, MethodInfo)
  fullName: ModTestingFramework.CommandRegistry.AsyncRegisterCommand(System.String, System.Reflection.MethodInfo)
  type: Method
  source:
    remote:
      path: BannerlordSystemTestingFramework/CommandRegistry.cs
      branch: e2e229ada4f94221ad125ec1685d8141d101c3d3
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordTestingEssentials.git
    id: AsyncRegisterCommand
    path: ../source/BannerlordTestingEssentials/BannerlordSystemTestingFramework/CommandRegistry.cs
    startLine: 77
  assemblies:
  - BannerlordSystemTestingFramework
  namespace: ModTestingFramework
  syntax:
    content: static Task AsyncRegisterCommand(string command, MethodInfo methodInfo)
    parameters:
    - id: command
      type: System.String
    - id: methodInfo
      type: System.Reflection.MethodInfo
    return:
      type: System.Threading.Tasks.Task
    content.vb: Shared Function AsyncRegisterCommand(command As String, methodInfo As MethodInfo) As Task
  overload: ModTestingFramework.CommandRegistry.AsyncRegisterCommand*
  modifiers.csharp:
  - static
  modifiers.vb:
  - Shared
- uid: ModTestingFramework.CommandRegistry.Instance
  commentId: P:ModTestingFramework.CommandRegistry.Instance
  id: Instance
  parent: ModTestingFramework.CommandRegistry
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: CommandRegistry.Instance
  fullName: ModTestingFramework.CommandRegistry.Instance
  type: Property
  source:
    remote:
      path: BannerlordSystemTestingFramework/CommandRegistry.cs
      branch: e2e229ada4f94221ad125ec1685d8141d101c3d3
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordTestingEssentials.git
    id: Instance
    path: ../source/BannerlordTestingEssentials/BannerlordSystemTestingFramework/CommandRegistry.cs
    startLine: 126
  assemblies:
  - BannerlordSystemTestingFramework
  namespace: ModTestingFramework
  syntax:
    content: public static CommandRegistry Instance { get; }
    parameters: []
    return:
      type: ModTestingFramework.CommandRegistry
    content.vb: Public Shared ReadOnly Property Instance As CommandRegistry
  overload: ModTestingFramework.CommandRegistry.Instance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: ModTestingFramework
  commentId: N:ModTestingFramework
  name: ModTestingFramework
  nameWithType: ModTestingFramework
  fullName: ModTestingFramework
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.Dictionary{System.String,System.Reflection.MethodInfo}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Reflection.MethodInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, MethodInfo>
  nameWithType: Dictionary<String, MethodInfo>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Reflection.MethodInfo>
  nameWithType.vb: Dictionary(Of String, MethodInfo)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Reflection.MethodInfo)
  name.vb: Dictionary(Of String, MethodInfo)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: ModTestingFramework.CommandRegistry
  commentId: T:ModTestingFramework.CommandRegistry
  parent: ModTestingFramework
  name: CommandRegistry
  nameWithType: CommandRegistry
  fullName: ModTestingFramework.CommandRegistry
- uid: ModTestingFramework.CommandRegistry.RegisterAllCommands*
  commentId: Overload:ModTestingFramework.CommandRegistry.RegisterAllCommands
  name: RegisterAllCommands
  nameWithType: CommandRegistry.RegisterAllCommands
  fullName: ModTestingFramework.CommandRegistry.RegisterAllCommands
- uid: ModTestingFramework.RunnerCommunicator
  commentId: T:ModTestingFramework.RunnerCommunicator
  parent: ModTestingFramework
  name: RunnerCommunicator
  nameWithType: RunnerCommunicator
  fullName: ModTestingFramework.RunnerCommunicator
- uid: ModTestingFramework.CommandRegistry.SendRegistrationComplete*
  commentId: Overload:ModTestingFramework.CommandRegistry.SendRegistrationComplete
  name: SendRegistrationComplete
  nameWithType: CommandRegistry.SendRegistrationComplete
  fullName: ModTestingFramework.CommandRegistry.SendRegistrationComplete
- uid: ModTestingFramework.CommandRegistry.RegisterCommand*
  commentId: Overload:ModTestingFramework.CommandRegistry.RegisterCommand
  name: RegisterCommand
  nameWithType: CommandRegistry.RegisterCommand
  fullName: ModTestingFramework.CommandRegistry.RegisterCommand
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.MethodInfo
  commentId: T:System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: ModTestingFramework.CommandRegistry.AsyncRegisterCommand*
  commentId: Overload:ModTestingFramework.CommandRegistry.AsyncRegisterCommand
  name: AsyncRegisterCommand
  nameWithType: CommandRegistry.AsyncRegisterCommand
  fullName: ModTestingFramework.CommandRegistry.AsyncRegisterCommand
- uid: ModTestingFramework.CommandRegistry.Instance*
  commentId: Overload:ModTestingFramework.CommandRegistry.Instance
  name: Instance
  nameWithType: CommandRegistry.Instance
  fullName: ModTestingFramework.CommandRegistry.Instance
