### YamlMime:ManagedReference
items:
- uid: Common.DropoutStack`1
  commentId: T:Common.DropoutStack`1
  id: DropoutStack`1
  parent: Common
  children:
  - Common.DropoutStack`1.#ctor(System.Int32)
  - Common.DropoutStack`1.Clear
  - Common.DropoutStack`1.Count
  - Common.DropoutStack`1.Empty
  - Common.DropoutStack`1.Full
  - Common.DropoutStack`1.GetEnumerator
  - Common.DropoutStack`1.GetItem(System.Int32)
  - Common.DropoutStack`1.m_IndexTop
  - Common.DropoutStack`1.m_Items
  - Common.DropoutStack`1.Peek
  - Common.DropoutStack`1.Pop
  - Common.DropoutStack`1.Push(`0)
  - Common.DropoutStack`1.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: DropoutStack<T>
  nameWithType: DropoutStack<T>
  fullName: Common.DropoutStack<T>
  type: Class
  source:
    remote:
      path: source/Common/DropoutStack.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: DropoutStack
    path: ../source/Common/DropoutStack.cs
    startLine: 6
  assemblies:
  - Common
  namespace: Common
  syntax:
    content: 'public class DropoutStack<T> : IEnumerable<T>, IEnumerable'
    typeParameters:
    - id: T
    content.vb: >-
      Public Class DropoutStack(Of T)

          Implements IEnumerable(Of T), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{{T}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: DropoutStack(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Common.DropoutStack(Of T)
  name.vb: DropoutStack(Of T)
- uid: Common.DropoutStack`1.m_Items
  commentId: F:Common.DropoutStack`1.m_Items
  id: m_Items
  parent: Common.DropoutStack`1
  langs:
  - csharp
  - vb
  name: m_Items
  nameWithType: DropoutStack<T>.m_Items
  fullName: Common.DropoutStack<T>.m_Items
  type: Field
  source:
    remote:
      path: source/Common/DropoutStack.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_Items
    path: ../source/Common/DropoutStack.cs
    startLine: 8
  assemblies:
  - Common
  namespace: Common
  syntax:
    content: readonly T[] m_Items
    return:
      type: '{T}[]'
    content.vb: ReadOnly m_Items As T()
  nameWithType.vb: DropoutStack(Of T).m_Items
  modifiers.csharp:
  - readonly
  modifiers.vb:
  - ReadOnly
  fullName.vb: Common.DropoutStack(Of T).m_Items
- uid: Common.DropoutStack`1.m_IndexTop
  commentId: F:Common.DropoutStack`1.m_IndexTop
  id: m_IndexTop
  parent: Common.DropoutStack`1
  langs:
  - csharp
  - vb
  name: m_IndexTop
  nameWithType: DropoutStack<T>.m_IndexTop
  fullName: Common.DropoutStack<T>.m_IndexTop
  type: Field
  source:
    remote:
      path: source/Common/DropoutStack.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_IndexTop
    path: ../source/Common/DropoutStack.cs
    startLine: 9
  assemblies:
  - Common
  namespace: Common
  syntax:
    content: int m_IndexTop
    return:
      type: System.Int32
    content.vb: m_IndexTop As Integer
  nameWithType.vb: DropoutStack(Of T).m_IndexTop
  fullName.vb: Common.DropoutStack(Of T).m_IndexTop
- uid: Common.DropoutStack`1.#ctor(System.Int32)
  commentId: M:Common.DropoutStack`1.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Common.DropoutStack`1
  langs:
  - csharp
  - vb
  name: DropoutStack(Int32)
  nameWithType: DropoutStack<T>.DropoutStack(Int32)
  fullName: Common.DropoutStack<T>.DropoutStack(System.Int32)
  type: Constructor
  source:
    remote:
      path: source/Common/DropoutStack.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: .ctor
    path: ../source/Common/DropoutStack.cs
    startLine: 11
  assemblies:
  - Common
  namespace: Common
  syntax:
    content: public DropoutStack(int capacity)
    parameters:
    - id: capacity
      type: System.Int32
    content.vb: Public Sub New(capacity As Integer)
  overload: Common.DropoutStack`1.#ctor*
  nameWithType.vb: DropoutStack(Of T).DropoutStack(Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Common.DropoutStack(Of T).DropoutStack(System.Int32)
- uid: Common.DropoutStack`1.Full
  commentId: P:Common.DropoutStack`1.Full
  id: Full
  parent: Common.DropoutStack`1
  langs:
  - csharp
  - vb
  name: Full
  nameWithType: DropoutStack<T>.Full
  fullName: Common.DropoutStack<T>.Full
  type: Property
  source:
    remote:
      path: source/Common/DropoutStack.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Full
    path: ../source/Common/DropoutStack.cs
    startLine: 16
  assemblies:
  - Common
  namespace: Common
  syntax:
    content: >-
      bool Full

      {

      }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly WriteOnly Property Full As Boolean
  overload: Common.DropoutStack`1.Full*
  nameWithType.vb: DropoutStack(Of T).Full
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Common.DropoutStack(Of T).Full
- uid: Common.DropoutStack`1.Empty
  commentId: P:Common.DropoutStack`1.Empty
  id: Empty
  parent: Common.DropoutStack`1
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: DropoutStack<T>.Empty
  fullName: Common.DropoutStack<T>.Empty
  type: Property
  source:
    remote:
      path: source/Common/DropoutStack.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Empty
    path: ../source/Common/DropoutStack.cs
    startLine: 17
  assemblies:
  - Common
  namespace: Common
  syntax:
    content: >-
      bool Empty

      {

      }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly WriteOnly Property Empty As Boolean
  overload: Common.DropoutStack`1.Empty*
  nameWithType.vb: DropoutStack(Of T).Empty
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Common.DropoutStack(Of T).Empty
- uid: Common.DropoutStack`1.Count
  commentId: P:Common.DropoutStack`1.Count
  id: Count
  parent: Common.DropoutStack`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: DropoutStack<T>.Count
  fullName: Common.DropoutStack<T>.Count
  type: Property
  source:
    remote:
      path: source/Common/DropoutStack.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Count
    path: ../source/Common/DropoutStack.cs
    startLine: 19
  assemblies:
  - Common
  namespace: Common
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: Common.DropoutStack`1.Count*
  nameWithType.vb: DropoutStack(Of T).Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Common.DropoutStack(Of T).Count
- uid: Common.DropoutStack`1.GetEnumerator
  commentId: M:Common.DropoutStack`1.GetEnumerator
  id: GetEnumerator
  parent: Common.DropoutStack`1
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: DropoutStack<T>.GetEnumerator()
  fullName: Common.DropoutStack<T>.GetEnumerator()
  type: Method
  source:
    remote:
      path: source/Common/DropoutStack.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: GetEnumerator
    path: ../source/Common/DropoutStack.cs
    startLine: 21
  assemblies:
  - Common
  namespace: Common
  syntax:
    content: public IEnumerator<T> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{{T}}
    content.vb: Public Function GetEnumerator As IEnumerator(Of T)
  overload: Common.DropoutStack`1.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  nameWithType.vb: DropoutStack(Of T).GetEnumerator()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Common.DropoutStack(Of T).GetEnumerator()
- uid: Common.DropoutStack`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Common.DropoutStack`1.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Common.DropoutStack`1
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: DropoutStack<T>.IEnumerable.GetEnumerator()
  fullName: Common.DropoutStack<T>.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: source/Common/DropoutStack.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: ../source/Common/DropoutStack.cs
    startLine: 29
  assemblies:
  - Common
  namespace: Common
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: Common.DropoutStack`1.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: DropoutStack(Of T).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Common.DropoutStack(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: Common.DropoutStack`1.Push(`0)
  commentId: M:Common.DropoutStack`1.Push(`0)
  id: Push(`0)
  parent: Common.DropoutStack`1
  langs:
  - csharp
  - vb
  name: Push(T)
  nameWithType: DropoutStack<T>.Push(T)
  fullName: Common.DropoutStack<T>.Push(T)
  type: Method
  source:
    remote:
      path: source/Common/DropoutStack.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Push
    path: ../source/Common/DropoutStack.cs
    startLine: 34
  assemblies:
  - Common
  namespace: Common
  syntax:
    content: public void Push(T item)
    parameters:
    - id: item
      type: '{T}'
    content.vb: Public Sub Push(item As T)
  overload: Common.DropoutStack`1.Push*
  nameWithType.vb: DropoutStack(Of T).Push(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Common.DropoutStack(Of T).Push(T)
- uid: Common.DropoutStack`1.Pop
  commentId: M:Common.DropoutStack`1.Pop
  id: Pop
  parent: Common.DropoutStack`1
  langs:
  - csharp
  - vb
  name: Pop()
  nameWithType: DropoutStack<T>.Pop()
  fullName: Common.DropoutStack<T>.Pop()
  type: Method
  source:
    remote:
      path: source/Common/DropoutStack.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Pop
    path: ../source/Common/DropoutStack.cs
    startLine: 41
  assemblies:
  - Common
  namespace: Common
  syntax:
    content: public T Pop()
    return:
      type: '{T}'
    content.vb: Public Function Pop As T
  overload: Common.DropoutStack`1.Pop*
  nameWithType.vb: DropoutStack(Of T).Pop()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Common.DropoutStack(Of T).Pop()
- uid: Common.DropoutStack`1.Peek
  commentId: M:Common.DropoutStack`1.Peek
  id: Peek
  parent: Common.DropoutStack`1
  langs:
  - csharp
  - vb
  name: Peek()
  nameWithType: DropoutStack<T>.Peek()
  fullName: Common.DropoutStack<T>.Peek()
  type: Method
  source:
    remote:
      path: source/Common/DropoutStack.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Peek
    path: ../source/Common/DropoutStack.cs
    startLine: 48
  assemblies:
  - Common
  namespace: Common
  syntax:
    content: public T Peek()
    return:
      type: '{T}'
    content.vb: Public Function Peek As T
  overload: Common.DropoutStack`1.Peek*
  nameWithType.vb: DropoutStack(Of T).Peek()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Common.DropoutStack(Of T).Peek()
- uid: Common.DropoutStack`1.GetItem(System.Int32)
  commentId: M:Common.DropoutStack`1.GetItem(System.Int32)
  id: GetItem(System.Int32)
  parent: Common.DropoutStack`1
  langs:
  - csharp
  - vb
  name: GetItem(Int32)
  nameWithType: DropoutStack<T>.GetItem(Int32)
  fullName: Common.DropoutStack<T>.GetItem(System.Int32)
  type: Method
  source:
    remote:
      path: source/Common/DropoutStack.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: GetItem
    path: ../source/Common/DropoutStack.cs
    startLine: 53
  assemblies:
  - Common
  namespace: Common
  syntax:
    content: T GetItem(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: '{T}'
    content.vb: Function GetItem(index As Integer) As T
  overload: Common.DropoutStack`1.GetItem*
  nameWithType.vb: DropoutStack(Of T).GetItem(Int32)
  fullName.vb: Common.DropoutStack(Of T).GetItem(System.Int32)
- uid: Common.DropoutStack`1.Clear
  commentId: M:Common.DropoutStack`1.Clear
  id: Clear
  parent: Common.DropoutStack`1
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: DropoutStack<T>.Clear()
  fullName: Common.DropoutStack<T>.Clear()
  type: Method
  source:
    remote:
      path: source/Common/DropoutStack.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Clear
    path: ../source/Common/DropoutStack.cs
    startLine: 63
  assemblies:
  - Common
  namespace: Common
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: Common.DropoutStack`1.Clear*
  nameWithType.vb: DropoutStack(Of T).Clear()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Common.DropoutStack(Of T).Clear()
references:
- uid: Common
  commentId: N:Common
  name: Common
  nameWithType: Common
  fullName: Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Common.DropoutStack`1.#ctor*
  commentId: Overload:Common.DropoutStack`1.#ctor
  name: DropoutStack
  nameWithType: DropoutStack<T>.DropoutStack
  fullName: Common.DropoutStack<T>.DropoutStack
  nameWithType.vb: DropoutStack(Of T).DropoutStack
  fullName.vb: Common.DropoutStack(Of T).DropoutStack
- uid: Common.DropoutStack`1.Full*
  commentId: Overload:Common.DropoutStack`1.Full
  name: Full
  nameWithType: DropoutStack<T>.Full
  fullName: Common.DropoutStack<T>.Full
  nameWithType.vb: DropoutStack(Of T).Full
  fullName.vb: Common.DropoutStack(Of T).Full
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Common.DropoutStack`1.Empty*
  commentId: Overload:Common.DropoutStack`1.Empty
  name: Empty
  nameWithType: DropoutStack<T>.Empty
  fullName: Common.DropoutStack<T>.Empty
  nameWithType.vb: DropoutStack(Of T).Empty
  fullName.vb: Common.DropoutStack(Of T).Empty
- uid: Common.DropoutStack`1.Count*
  commentId: Overload:Common.DropoutStack`1.Count
  name: Count
  nameWithType: DropoutStack<T>.Count
  fullName: Common.DropoutStack<T>.Count
  nameWithType.vb: DropoutStack(Of T).Count
  fullName.vb: Common.DropoutStack(Of T).Count
- uid: Common.DropoutStack`1.GetEnumerator*
  commentId: Overload:Common.DropoutStack`1.GetEnumerator
  name: GetEnumerator
  nameWithType: DropoutStack<T>.GetEnumerator
  fullName: Common.DropoutStack<T>.GetEnumerator
  nameWithType.vb: DropoutStack(Of T).GetEnumerator
  fullName.vb: Common.DropoutStack(Of T).GetEnumerator
- uid: System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{`0}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{{T}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{{T}}
  commentId: T:System.Collections.Generic.IEnumerator{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Common.DropoutStack`1.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:Common.DropoutStack`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator
  nameWithType: DropoutStack<T>.IEnumerable.GetEnumerator
  fullName: Common.DropoutStack<T>.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: DropoutStack(Of T).System.Collections.IEnumerable.GetEnumerator
  fullName.vb: Common.DropoutStack(Of T).System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: Common.DropoutStack`1.Push*
  commentId: Overload:Common.DropoutStack`1.Push
  name: Push
  nameWithType: DropoutStack<T>.Push
  fullName: Common.DropoutStack<T>.Push
  nameWithType.vb: DropoutStack(Of T).Push
  fullName.vb: Common.DropoutStack(Of T).Push
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Common.DropoutStack`1.Pop*
  commentId: Overload:Common.DropoutStack`1.Pop
  name: Pop
  nameWithType: DropoutStack<T>.Pop
  fullName: Common.DropoutStack<T>.Pop
  nameWithType.vb: DropoutStack(Of T).Pop
  fullName.vb: Common.DropoutStack(Of T).Pop
- uid: Common.DropoutStack`1.Peek*
  commentId: Overload:Common.DropoutStack`1.Peek
  name: Peek
  nameWithType: DropoutStack<T>.Peek
  fullName: Common.DropoutStack<T>.Peek
  nameWithType.vb: DropoutStack(Of T).Peek
  fullName.vb: Common.DropoutStack(Of T).Peek
- uid: Common.DropoutStack`1.GetItem*
  commentId: Overload:Common.DropoutStack`1.GetItem
  name: GetItem
  nameWithType: DropoutStack<T>.GetItem
  fullName: Common.DropoutStack<T>.GetItem
  nameWithType.vb: DropoutStack(Of T).GetItem
  fullName.vb: Common.DropoutStack(Of T).GetItem
- uid: Common.DropoutStack`1.Clear*
  commentId: Overload:Common.DropoutStack`1.Clear
  name: Clear
  nameWithType: DropoutStack<T>.Clear
  fullName: Common.DropoutStack<T>.Clear
  nameWithType.vb: DropoutStack(Of T).Clear
  fullName.vb: Common.DropoutStack(Of T).Clear
