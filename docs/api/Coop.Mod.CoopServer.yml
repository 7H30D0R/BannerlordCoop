### YamlMime:ManagedReference
items:
- uid: Coop.Mod.CoopServer
  commentId: T:Coop.Mod.CoopServer
  id: CoopServer
  parent: Coop.Mod
  children:
  - Coop.Mod.CoopServer.#ctor
  - Coop.Mod.CoopServer.AreAllClientsPlaying
  - Coop.Mod.CoopServer.CreateGameManager(TaleWorlds.Core.LoadGameResult)
  - Coop.Mod.CoopServer.CreateGameManager(TaleWorlds.SaveSystem.Load.LoadResult)
  - Coop.Mod.CoopServer.Current
  - Coop.Mod.CoopServer.Environment
  - Coop.Mod.CoopServer.gameManager
  - Coop.Mod.CoopServer.Instance
  - Coop.Mod.CoopServer.Logger
  - Coop.Mod.CoopServer.m_CoopServerSMs
  - Coop.Mod.CoopServer.m_GameEnvironmentServer
  - Coop.Mod.CoopServer.m_Instance
  - Coop.Mod.CoopServer.m_NetManager
  - Coop.Mod.CoopServer.OnClientConnected(Network.Infrastructure.ConnectionServer)
  - Coop.Mod.CoopServer.OnClientDisconnected(Network.Infrastructure.ConnectionServer,Network.Infrastructure.EDisconnectReason)
  - Coop.Mod.CoopServer.OnServerSendingWorldData
  - Coop.Mod.CoopServer.OnServerSentWorldData
  - Coop.Mod.CoopServer.Persistence
  - Coop.Mod.CoopServer.ReceiveClientDeclineWorldData(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  - Coop.Mod.CoopServer.ReceiveClientLoaded(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  - Coop.Mod.CoopServer.ReceiveClientPlayerPartyChanged(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  - Coop.Mod.CoopServer.ReceiveClientRequestWorldData(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  - Coop.Mod.CoopServer.SendInitialWorldData(Network.Infrastructure.ConnectionServer)
  - Coop.Mod.CoopServer.ShutDownServer
  - Coop.Mod.CoopServer.StartGame(System.String)
  - Coop.Mod.CoopServer.StartServer
  - Coop.Mod.CoopServer.SyncedObjectStore
  - Coop.Mod.CoopServer.ToString
  langs:
  - csharp
  - vb
  name: CoopServer
  nameWithType: CoopServer
  fullName: Coop.Mod.CoopServer
  type: Class
  source:
    remote:
      path: source/Coop/Mod/CoopServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: CoopServer
    path: ../source/Coop/Mod/CoopServer.cs
    startLine: 37
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public class CoopServer
    content.vb: Public Class CoopServer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Coop.Mod.CoopServer.Logger
  commentId: F:Coop.Mod.CoopServer.Logger
  id: Logger
  parent: Coop.Mod.CoopServer
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: CoopServer.Logger
  fullName: Coop.Mod.CoopServer.Logger
  type: Field
  source:
    remote:
      path: source/Coop/Mod/CoopServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Logger
    path: ../source/Coop/Mod/CoopServer.cs
    startLine: 39
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: static readonly Logger Logger
    return:
      type: NLog.Logger
    content.vb: Shared ReadOnly Logger As Logger
  modifiers.csharp:
  - static
  - readonly
  modifiers.vb:
  - Shared
  - ReadOnly
- uid: Coop.Mod.CoopServer.m_Instance
  commentId: F:Coop.Mod.CoopServer.m_Instance
  id: m_Instance
  parent: Coop.Mod.CoopServer
  langs:
  - csharp
  - vb
  name: m_Instance
  nameWithType: CoopServer.m_Instance
  fullName: Coop.Mod.CoopServer.m_Instance
  type: Field
  source:
    remote:
      path: source/Coop/Mod/CoopServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_Instance
    path: ../source/Coop/Mod/CoopServer.cs
    startLine: 41
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: static readonly Lazy<CoopServer> m_Instance
    return:
      type: System.Lazy{Coop.Mod.CoopServer}
    content.vb: Shared ReadOnly m_Instance As Lazy(Of CoopServer)
  modifiers.csharp:
  - static
  - readonly
  modifiers.vb:
  - Shared
  - ReadOnly
- uid: Coop.Mod.CoopServer.m_GameEnvironmentServer
  commentId: F:Coop.Mod.CoopServer.m_GameEnvironmentServer
  id: m_GameEnvironmentServer
  parent: Coop.Mod.CoopServer
  langs:
  - csharp
  - vb
  name: m_GameEnvironmentServer
  nameWithType: CoopServer.m_GameEnvironmentServer
  fullName: Coop.Mod.CoopServer.m_GameEnvironmentServer
  type: Field
  source:
    remote:
      path: source/Coop/Mod/CoopServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_GameEnvironmentServer
    path: ../source/Coop/Mod/CoopServer.cs
    startLine: 44
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: GameEnvironmentServer m_GameEnvironmentServer
    return:
      type: Coop.Mod.GameEnvironmentServer
    content.vb: m_GameEnvironmentServer As GameEnvironmentServer
- uid: Coop.Mod.CoopServer.AreAllClientsPlaying
  commentId: P:Coop.Mod.CoopServer.AreAllClientsPlaying
  id: AreAllClientsPlaying
  parent: Coop.Mod.CoopServer
  langs:
  - csharp
  - vb
  name: AreAllClientsPlaying
  nameWithType: CoopServer.AreAllClientsPlaying
  fullName: Coop.Mod.CoopServer.AreAllClientsPlaying
  type: Property
  source:
    remote:
      path: source/Coop/Mod/CoopServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: AreAllClientsPlaying
    path: ../source/Coop/Mod/CoopServer.cs
    startLine: 45
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public bool AreAllClientsPlaying { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property AreAllClientsPlaying As Boolean
  overload: Coop.Mod.CoopServer.AreAllClientsPlaying*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Coop.Mod.CoopServer.m_CoopServerSMs
  commentId: F:Coop.Mod.CoopServer.m_CoopServerSMs
  id: m_CoopServerSMs
  parent: Coop.Mod.CoopServer
  langs:
  - csharp
  - vb
  name: m_CoopServerSMs
  nameWithType: CoopServer.m_CoopServerSMs
  fullName: Coop.Mod.CoopServer.m_CoopServerSMs
  type: Field
  source:
    remote:
      path: source/Coop/Mod/CoopServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_CoopServerSMs
    path: ../source/Coop/Mod/CoopServer.cs
    startLine: 47
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: readonly Dictionary<ConnectionServer, CoopServerSM> m_CoopServerSMs
    return:
      type: System.Collections.Generic.Dictionary{Network.Infrastructure.ConnectionServer,Coop.Mod.CoopServerSM}
    content.vb: ReadOnly m_CoopServerSMs As Dictionary(Of ConnectionServer, CoopServerSM)
  modifiers.csharp:
  - readonly
  modifiers.vb:
  - ReadOnly
- uid: Coop.Mod.CoopServer.Environment
  commentId: P:Coop.Mod.CoopServer.Environment
  id: Environment
  parent: Coop.Mod.CoopServer
  langs:
  - csharp
  - vb
  name: Environment
  nameWithType: CoopServer.Environment
  fullName: Coop.Mod.CoopServer.Environment
  type: Property
  source:
    remote:
      path: source/Coop/Mod/CoopServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Environment
    path: ../source/Coop/Mod/CoopServer.cs
    startLine: 48
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public IEnvironmentServer Environment { get; }
    parameters: []
    return:
      type: Coop.Mod.Persistence.IEnvironmentServer
    content.vb: Public ReadOnly Property Environment As IEnvironmentServer
  overload: Coop.Mod.CoopServer.Environment*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Coop.Mod.CoopServer.m_NetManager
  commentId: F:Coop.Mod.CoopServer.m_NetManager
  id: m_NetManager
  parent: Coop.Mod.CoopServer
  langs:
  - csharp
  - vb
  name: m_NetManager
  nameWithType: CoopServer.m_NetManager
  fullName: Coop.Mod.CoopServer.m_NetManager
  type: Field
  source:
    remote:
      path: source/Coop/Mod/CoopServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_NetManager
    path: ../source/Coop/Mod/CoopServer.cs
    startLine: 50
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: LiteNetManagerServer m_NetManager
    return:
      type: Coop.NetImpl.LiteNet.LiteNetManagerServer
    content.vb: m_NetManager As LiteNetManagerServer
- uid: Coop.Mod.CoopServer.#ctor
  commentId: M:Coop.Mod.CoopServer.#ctor
  id: '#ctor'
  parent: Coop.Mod.CoopServer
  langs:
  - csharp
  - vb
  name: CoopServer()
  nameWithType: CoopServer.CoopServer()
  fullName: Coop.Mod.CoopServer.CoopServer()
  type: Constructor
  source:
    remote:
      path: source/Coop/Mod/CoopServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: .ctor
    path: ../source/Coop/Mod/CoopServer.cs
    startLine: 52
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: CoopServer()
    content.vb: Sub New
  overload: Coop.Mod.CoopServer.#ctor*
- uid: Coop.Mod.CoopServer.SyncedObjectStore
  commentId: P:Coop.Mod.CoopServer.SyncedObjectStore
  id: SyncedObjectStore
  parent: Coop.Mod.CoopServer
  langs:
  - csharp
  - vb
  name: SyncedObjectStore
  nameWithType: CoopServer.SyncedObjectStore
  fullName: Coop.Mod.CoopServer.SyncedObjectStore
  type: Property
  source:
    remote:
      path: source/Coop/Mod/CoopServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: SyncedObjectStore
    path: ../source/Coop/Mod/CoopServer.cs
    startLine: 60
  assemblies:
  - Coop
  namespace: Coop.Mod
  summary: "\nObject store shared with all connected clients. Set to an instance when the server\nis started, otherwise null.\n"
  example: []
  syntax:
    content: >-
      [CanBeNull]

      public SharedRemoteStore SyncedObjectStore { get; }
    parameters: []
    return:
      type: Sync.Store.SharedRemoteStore
    content.vb: >-
      <CanBeNull>

      Public ReadOnly Property SyncedObjectStore As SharedRemoteStore
  overload: Coop.Mod.CoopServer.SyncedObjectStore*
  attributes:
  - type: JetBrains.Annotations.CanBeNullAttribute
    ctor: JetBrains.Annotations.CanBeNullAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Coop.Mod.CoopServer.Persistence
  commentId: P:Coop.Mod.CoopServer.Persistence
  id: Persistence
  parent: Coop.Mod.CoopServer
  langs:
  - csharp
  - vb
  name: Persistence
  nameWithType: CoopServer.Persistence
  fullName: Coop.Mod.CoopServer.Persistence
  type: Property
  source:
    remote:
      path: source/Coop/Mod/CoopServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Persistence
    path: ../source/Coop/Mod/CoopServer.cs
    startLine: 63
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: >-
      [CanBeNull]

      public CoopServerRail Persistence { get; }
    parameters: []
    return:
      type: Coop.Mod.CoopServerRail
    content.vb: >-
      <CanBeNull>

      Public ReadOnly Property Persistence As CoopServerRail
  overload: Coop.Mod.CoopServer.Persistence*
  attributes:
  - type: JetBrains.Annotations.CanBeNullAttribute
    ctor: JetBrains.Annotations.CanBeNullAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Coop.Mod.CoopServer.Instance
  commentId: P:Coop.Mod.CoopServer.Instance
  id: Instance
  parent: Coop.Mod.CoopServer
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: CoopServer.Instance
  fullName: Coop.Mod.CoopServer.Instance
  type: Property
  source:
    remote:
      path: source/Coop/Mod/CoopServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Instance
    path: ../source/Coop/Mod/CoopServer.cs
    startLine: 65
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public static CoopServer Instance { get; }
    parameters: []
    return:
      type: Coop.Mod.CoopServer
    content.vb: Public Shared ReadOnly Property Instance As CoopServer
  overload: Coop.Mod.CoopServer.Instance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Coop.Mod.CoopServer.Current
  commentId: P:Coop.Mod.CoopServer.Current
  id: Current
  parent: Coop.Mod.CoopServer
  langs:
  - csharp
  - vb
  name: Current
  nameWithType: CoopServer.Current
  fullName: Coop.Mod.CoopServer.Current
  type: Property
  source:
    remote:
      path: source/Coop/Mod/CoopServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Current
    path: ../source/Coop/Mod/CoopServer.cs
    startLine: 67
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public Server Current { get; }
    parameters: []
    return:
      type: Network.Infrastructure.Server
    content.vb: Public ReadOnly Property Current As Server
  overload: Coop.Mod.CoopServer.Current*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Coop.Mod.CoopServer.gameManager
  commentId: P:Coop.Mod.CoopServer.gameManager
  id: gameManager
  parent: Coop.Mod.CoopServer
  langs:
  - csharp
  - vb
  name: gameManager
  nameWithType: CoopServer.gameManager
  fullName: Coop.Mod.CoopServer.gameManager
  type: Property
  source:
    remote:
      path: source/Coop/Mod/CoopServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: gameManager
    path: ../source/Coop/Mod/CoopServer.cs
    startLine: 68
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public ServerGameManager gameManager { get; }
    parameters: []
    return:
      type: Coop.Mod.Managers.ServerGameManager
    content.vb: Public ReadOnly Property gameManager As ServerGameManager
  overload: Coop.Mod.CoopServer.gameManager*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Coop.Mod.CoopServer.OnServerSendingWorldData
  commentId: E:Coop.Mod.CoopServer.OnServerSendingWorldData
  id: OnServerSendingWorldData
  parent: Coop.Mod.CoopServer
  langs:
  - csharp
  - vb
  name: OnServerSendingWorldData
  nameWithType: CoopServer.OnServerSendingWorldData
  fullName: Coop.Mod.CoopServer.OnServerSendingWorldData
  type: Event
  source:
    remote:
      path: source/Coop/Mod/CoopServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: OnServerSendingWorldData
    path: ../source/Coop/Mod/CoopServer.cs
    startLine: 71
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public event Action OnServerSendingWorldData
    return:
      type: System.Action
    content.vb: Public Event OnServerSendingWorldData As Action
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Coop.Mod.CoopServer.OnServerSentWorldData
  commentId: E:Coop.Mod.CoopServer.OnServerSentWorldData
  id: OnServerSentWorldData
  parent: Coop.Mod.CoopServer
  langs:
  - csharp
  - vb
  name: OnServerSentWorldData
  nameWithType: CoopServer.OnServerSentWorldData
  fullName: Coop.Mod.CoopServer.OnServerSentWorldData
  type: Event
  source:
    remote:
      path: source/Coop/Mod/CoopServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: OnServerSentWorldData
    path: ../source/Coop/Mod/CoopServer.cs
    startLine: 72
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public event Action OnServerSentWorldData
    return:
      type: System.Action
    content.vb: Public Event OnServerSentWorldData As Action
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Coop.Mod.CoopServer.StartServer
  commentId: M:Coop.Mod.CoopServer.StartServer
  id: StartServer
  parent: Coop.Mod.CoopServer
  langs:
  - csharp
  - vb
  name: StartServer()
  nameWithType: CoopServer.StartServer()
  fullName: Coop.Mod.CoopServer.StartServer()
  type: Method
  source:
    remote:
      path: source/Coop/Mod/CoopServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: StartServer
    path: ../source/Coop/Mod/CoopServer.cs
    startLine: 75
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public string StartServer()
    return:
      type: System.String
    content.vb: Public Function StartServer As String
  overload: Coop.Mod.CoopServer.StartServer*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Coop.Mod.CoopServer.ShutDownServer
  commentId: M:Coop.Mod.CoopServer.ShutDownServer
  id: ShutDownServer
  parent: Coop.Mod.CoopServer
  langs:
  - csharp
  - vb
  name: ShutDownServer()
  nameWithType: CoopServer.ShutDownServer()
  fullName: Coop.Mod.CoopServer.ShutDownServer()
  type: Method
  source:
    remote:
      path: source/Coop/Mod/CoopServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ShutDownServer
    path: ../source/Coop/Mod/CoopServer.cs
    startLine: 122
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public void ShutDownServer()
    content.vb: Public Sub ShutDownServer
  overload: Coop.Mod.CoopServer.ShutDownServer*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Coop.Mod.CoopServer.StartGame(System.String)
  commentId: M:Coop.Mod.CoopServer.StartGame(System.String)
  id: StartGame(System.String)
  parent: Coop.Mod.CoopServer
  langs:
  - csharp
  - vb
  name: StartGame(String)
  nameWithType: CoopServer.StartGame(String)
  fullName: Coop.Mod.CoopServer.StartGame(System.String)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/CoopServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: StartGame
    path: ../source/Coop/Mod/CoopServer.cs
    startLine: 137
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public void StartGame(string saveName)
    parameters:
    - id: saveName
      type: System.String
    content.vb: Public Sub StartGame(saveName As String)
  overload: Coop.Mod.CoopServer.StartGame*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Coop.Mod.CoopServer.CreateGameManager(TaleWorlds.Core.LoadGameResult)
  commentId: M:Coop.Mod.CoopServer.CreateGameManager(TaleWorlds.Core.LoadGameResult)
  id: CreateGameManager(TaleWorlds.Core.LoadGameResult)
  parent: Coop.Mod.CoopServer
  langs:
  - csharp
  - vb
  name: CreateGameManager(LoadGameResult)
  nameWithType: CoopServer.CreateGameManager(LoadGameResult)
  fullName: Coop.Mod.CoopServer.CreateGameManager(TaleWorlds.Core.LoadGameResult)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/CoopServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: CreateGameManager
    path: ../source/Coop/Mod/CoopServer.cs
    startLine: 155
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public ServerGameManager CreateGameManager(LoadGameResult saveGameData = null)
    parameters:
    - id: saveGameData
      type: TaleWorlds.Core.LoadGameResult
    return:
      type: Coop.Mod.Managers.ServerGameManager
    content.vb: Public Function CreateGameManager(saveGameData As LoadGameResult = Nothing) As ServerGameManager
  overload: Coop.Mod.CoopServer.CreateGameManager*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Coop.Mod.CoopServer.CreateGameManager(TaleWorlds.SaveSystem.Load.LoadResult)
  commentId: M:Coop.Mod.CoopServer.CreateGameManager(TaleWorlds.SaveSystem.Load.LoadResult)
  id: CreateGameManager(TaleWorlds.SaveSystem.Load.LoadResult)
  parent: Coop.Mod.CoopServer
  langs:
  - csharp
  - vb
  name: CreateGameManager(LoadResult)
  nameWithType: CoopServer.CreateGameManager(LoadResult)
  fullName: Coop.Mod.CoopServer.CreateGameManager(TaleWorlds.SaveSystem.Load.LoadResult)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/CoopServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: CreateGameManager
    path: ../source/Coop/Mod/CoopServer.cs
    startLine: 169
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public ServerGameManager CreateGameManager(LoadResult loadResult = null)
    parameters:
    - id: loadResult
      type: TaleWorlds.SaveSystem.Load.LoadResult
    return:
      type: Coop.Mod.Managers.ServerGameManager
    content.vb: Public Function CreateGameManager(loadResult As LoadResult = Nothing) As ServerGameManager
  overload: Coop.Mod.CoopServer.CreateGameManager*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Coop.Mod.CoopServer.ToString
  commentId: M:Coop.Mod.CoopServer.ToString
  id: ToString
  parent: Coop.Mod.CoopServer
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: CoopServer.ToString()
  fullName: Coop.Mod.CoopServer.ToString()
  type: Method
  source:
    remote:
      path: source/Coop/Mod/CoopServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ToString
    path: ../source/Coop/Mod/CoopServer.cs
    startLine: 183
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Coop.Mod.CoopServer.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Coop.Mod.CoopServer.OnClientConnected(Network.Infrastructure.ConnectionServer)
  commentId: M:Coop.Mod.CoopServer.OnClientConnected(Network.Infrastructure.ConnectionServer)
  id: OnClientConnected(Network.Infrastructure.ConnectionServer)
  parent: Coop.Mod.CoopServer
  langs:
  - csharp
  - vb
  name: OnClientConnected(ConnectionServer)
  nameWithType: CoopServer.OnClientConnected(ConnectionServer)
  fullName: Coop.Mod.CoopServer.OnClientConnected(Network.Infrastructure.ConnectionServer)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/CoopServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: OnClientConnected
    path: ../source/Coop/Mod/CoopServer.cs
    startLine: 193
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: void OnClientConnected(ConnectionServer connection)
    parameters:
    - id: connection
      type: Network.Infrastructure.ConnectionServer
    content.vb: Sub OnClientConnected(connection As ConnectionServer)
  overload: Coop.Mod.CoopServer.OnClientConnected*
- uid: Coop.Mod.CoopServer.OnClientDisconnected(Network.Infrastructure.ConnectionServer,Network.Infrastructure.EDisconnectReason)
  commentId: M:Coop.Mod.CoopServer.OnClientDisconnected(Network.Infrastructure.ConnectionServer,Network.Infrastructure.EDisconnectReason)
  id: OnClientDisconnected(Network.Infrastructure.ConnectionServer,Network.Infrastructure.EDisconnectReason)
  parent: Coop.Mod.CoopServer
  langs:
  - csharp
  - vb
  name: OnClientDisconnected(ConnectionServer, EDisconnectReason)
  nameWithType: CoopServer.OnClientDisconnected(ConnectionServer, EDisconnectReason)
  fullName: Coop.Mod.CoopServer.OnClientDisconnected(Network.Infrastructure.ConnectionServer, Network.Infrastructure.EDisconnectReason)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/CoopServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: OnClientDisconnected
    path: ../source/Coop/Mod/CoopServer.cs
    startLine: 220
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: void OnClientDisconnected(ConnectionServer connection, EDisconnectReason eReason)
    parameters:
    - id: connection
      type: Network.Infrastructure.ConnectionServer
    - id: eReason
      type: Network.Infrastructure.EDisconnectReason
    content.vb: Sub OnClientDisconnected(connection As ConnectionServer, eReason As EDisconnectReason)
  overload: Coop.Mod.CoopServer.OnClientDisconnected*
- uid: Coop.Mod.CoopServer.ReceiveClientRequestWorldData(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  commentId: M:Coop.Mod.CoopServer.ReceiveClientRequestWorldData(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  id: ReceiveClientRequestWorldData(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  parent: Coop.Mod.CoopServer
  langs:
  - csharp
  - vb
  name: ReceiveClientRequestWorldData(ConnectionBase, Packet)
  nameWithType: CoopServer.ReceiveClientRequestWorldData(ConnectionBase, Packet)
  fullName: Coop.Mod.CoopServer.ReceiveClientRequestWorldData(Network.Infrastructure.ConnectionBase, Network.Protocol.Packet)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/CoopServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ReceiveClientRequestWorldData
    path: ../source/Coop/Mod/CoopServer.cs
    startLine: 229
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: >-
      [GameServerPacketHandler(ECoopServerState.Preparing, EPacket.Client_RequestWorldData)]

      void ReceiveClientRequestWorldData(ConnectionBase connection, Packet packet)
    parameters:
    - id: connection
      type: Network.Infrastructure.ConnectionBase
    - id: packet
      type: Network.Protocol.Packet
    content.vb: >-
      <GameServerPacketHandler(ECoopServerState.Preparing, EPacket.Client_RequestWorldData)>

      Sub ReceiveClientRequestWorldData(connection As ConnectionBase, packet As Packet)
  overload: Coop.Mod.CoopServer.ReceiveClientRequestWorldData*
  attributes:
  - type: Coop.Mod.GameServerPacketHandlerAttribute
    ctor: Coop.Mod.GameServerPacketHandlerAttribute.#ctor(Coop.Mod.ECoopServerState,Network.Protocol.EPacket)
    arguments:
    - type: Coop.Mod.ECoopServerState
      value: 0
    - type: Network.Protocol.EPacket
      value: 2
- uid: Coop.Mod.CoopServer.ReceiveClientDeclineWorldData(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  commentId: M:Coop.Mod.CoopServer.ReceiveClientDeclineWorldData(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  id: ReceiveClientDeclineWorldData(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  parent: Coop.Mod.CoopServer
  langs:
  - csharp
  - vb
  name: ReceiveClientDeclineWorldData(ConnectionBase, Packet)
  nameWithType: CoopServer.ReceiveClientDeclineWorldData(ConnectionBase, Packet)
  fullName: Coop.Mod.CoopServer.ReceiveClientDeclineWorldData(Network.Infrastructure.ConnectionBase, Network.Protocol.Packet)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/CoopServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ReceiveClientDeclineWorldData
    path: ../source/Coop/Mod/CoopServer.cs
    startLine: 243
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: >-
      [GameServerPacketHandler(ECoopServerState.Preparing, EPacket.Client_DeclineWorldData)]

      void ReceiveClientDeclineWorldData(ConnectionBase connection, Packet packet)
    parameters:
    - id: connection
      type: Network.Infrastructure.ConnectionBase
    - id: packet
      type: Network.Protocol.Packet
    content.vb: >-
      <GameServerPacketHandler(ECoopServerState.Preparing, EPacket.Client_DeclineWorldData)>

      Sub ReceiveClientDeclineWorldData(connection As ConnectionBase, packet As Packet)
  overload: Coop.Mod.CoopServer.ReceiveClientDeclineWorldData*
  attributes:
  - type: Coop.Mod.GameServerPacketHandlerAttribute
    ctor: Coop.Mod.GameServerPacketHandlerAttribute.#ctor(Coop.Mod.ECoopServerState,Network.Protocol.EPacket)
    arguments:
    - type: Coop.Mod.ECoopServerState
      value: 0
    - type: Network.Protocol.EPacket
      value: 3
- uid: Coop.Mod.CoopServer.ReceiveClientLoaded(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  commentId: M:Coop.Mod.CoopServer.ReceiveClientLoaded(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  id: ReceiveClientLoaded(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  parent: Coop.Mod.CoopServer
  langs:
  - csharp
  - vb
  name: ReceiveClientLoaded(ConnectionBase, Packet)
  nameWithType: CoopServer.ReceiveClientLoaded(ConnectionBase, Packet)
  fullName: Coop.Mod.CoopServer.ReceiveClientLoaded(Network.Infrastructure.ConnectionBase, Network.Protocol.Packet)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/CoopServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ReceiveClientLoaded
    path: ../source/Coop/Mod/CoopServer.cs
    startLine: 249
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: >-
      [GameServerPacketHandler(ECoopServerState.SendingWorldData, EPacket.Client_Loaded)]

      void ReceiveClientLoaded(ConnectionBase connection, Packet packet)
    parameters:
    - id: connection
      type: Network.Infrastructure.ConnectionBase
    - id: packet
      type: Network.Protocol.Packet
    content.vb: >-
      <GameServerPacketHandler(ECoopServerState.SendingWorldData, EPacket.Client_Loaded)>

      Sub ReceiveClientLoaded(connection As ConnectionBase, packet As Packet)
  overload: Coop.Mod.CoopServer.ReceiveClientLoaded*
  attributes:
  - type: Coop.Mod.GameServerPacketHandlerAttribute
    ctor: Coop.Mod.GameServerPacketHandlerAttribute.#ctor(Coop.Mod.ECoopServerState,Network.Protocol.EPacket)
    arguments:
    - type: Coop.Mod.ECoopServerState
      value: 1
    - type: Network.Protocol.EPacket
      value: 4
- uid: Coop.Mod.CoopServer.ReceiveClientPlayerPartyChanged(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  commentId: M:Coop.Mod.CoopServer.ReceiveClientPlayerPartyChanged(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  id: ReceiveClientPlayerPartyChanged(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  parent: Coop.Mod.CoopServer
  langs:
  - csharp
  - vb
  name: ReceiveClientPlayerPartyChanged(ConnectionBase, Packet)
  nameWithType: CoopServer.ReceiveClientPlayerPartyChanged(ConnectionBase, Packet)
  fullName: Coop.Mod.CoopServer.ReceiveClientPlayerPartyChanged(Network.Infrastructure.ConnectionBase, Network.Protocol.Packet)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/CoopServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ReceiveClientPlayerPartyChanged
    path: ../source/Coop/Mod/CoopServer.cs
    startLine: 255
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: >-
      [GameServerPacketHandler(ECoopServerState.Playing, EPacket.Client_PartyChanged)]

      void ReceiveClientPlayerPartyChanged(ConnectionBase connection, Packet packet)
    parameters:
    - id: connection
      type: Network.Infrastructure.ConnectionBase
    - id: packet
      type: Network.Protocol.Packet
    content.vb: >-
      <GameServerPacketHandler(ECoopServerState.Playing, EPacket.Client_PartyChanged)>

      Sub ReceiveClientPlayerPartyChanged(connection As ConnectionBase, packet As Packet)
  overload: Coop.Mod.CoopServer.ReceiveClientPlayerPartyChanged*
  attributes:
  - type: Coop.Mod.GameServerPacketHandlerAttribute
    ctor: Coop.Mod.GameServerPacketHandlerAttribute.#ctor(Coop.Mod.ECoopServerState,Network.Protocol.EPacket)
    arguments:
    - type: Coop.Mod.ECoopServerState
      value: 2
    - type: Network.Protocol.EPacket
      value: 5
- uid: Coop.Mod.CoopServer.SendInitialWorldData(Network.Infrastructure.ConnectionServer)
  commentId: M:Coop.Mod.CoopServer.SendInitialWorldData(Network.Infrastructure.ConnectionServer)
  id: SendInitialWorldData(Network.Infrastructure.ConnectionServer)
  parent: Coop.Mod.CoopServer
  langs:
  - csharp
  - vb
  name: SendInitialWorldData(ConnectionServer)
  nameWithType: CoopServer.SendInitialWorldData(ConnectionServer)
  fullName: Coop.Mod.CoopServer.SendInitialWorldData(Network.Infrastructure.ConnectionServer)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/CoopServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: SendInitialWorldData
    path: ../source/Coop/Mod/CoopServer.cs
    startLine: 269
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: void SendInitialWorldData(ConnectionServer connection)
    parameters:
    - id: connection
      type: Network.Infrastructure.ConnectionServer
    content.vb: Sub SendInitialWorldData(connection As ConnectionServer)
  overload: Coop.Mod.CoopServer.SendInitialWorldData*
references:
- uid: Coop.Mod
  commentId: N:Coop.Mod
  name: Coop.Mod
  nameWithType: Coop.Mod
  fullName: Coop.Mod
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NLog.Logger
  commentId: T:NLog.Logger
  parent: NLog
  isExternal: true
  name: Logger
  nameWithType: Logger
  fullName: NLog.Logger
- uid: NLog
  commentId: N:NLog
  isExternal: true
  name: NLog
  nameWithType: NLog
  fullName: NLog
- uid: System.Lazy{Coop.Mod.CoopServer}
  commentId: T:System.Lazy{Coop.Mod.CoopServer}
  parent: System
  definition: System.Lazy`1
  name: Lazy<CoopServer>
  nameWithType: Lazy<CoopServer>
  fullName: System.Lazy<Coop.Mod.CoopServer>
  nameWithType.vb: Lazy(Of CoopServer)
  fullName.vb: System.Lazy(Of Coop.Mod.CoopServer)
  name.vb: Lazy(Of CoopServer)
  spec.csharp:
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Coop.Mod.CoopServer
    name: CoopServer
    nameWithType: CoopServer
    fullName: Coop.Mod.CoopServer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Coop.Mod.CoopServer
    name: CoopServer
    nameWithType: CoopServer
    fullName: Coop.Mod.CoopServer
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Lazy`1
  commentId: T:System.Lazy`1
  isExternal: true
  name: Lazy<T>
  nameWithType: Lazy<T>
  fullName: System.Lazy<T>
  nameWithType.vb: Lazy(Of T)
  fullName.vb: System.Lazy(Of T)
  name.vb: Lazy(Of T)
  spec.csharp:
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Coop.Mod.GameEnvironmentServer
  commentId: T:Coop.Mod.GameEnvironmentServer
  parent: Coop.Mod
  name: GameEnvironmentServer
  nameWithType: GameEnvironmentServer
  fullName: Coop.Mod.GameEnvironmentServer
- uid: Coop.Mod.CoopServer.AreAllClientsPlaying*
  commentId: Overload:Coop.Mod.CoopServer.AreAllClientsPlaying
  name: AreAllClientsPlaying
  nameWithType: CoopServer.AreAllClientsPlaying
  fullName: Coop.Mod.CoopServer.AreAllClientsPlaying
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.Dictionary{Network.Infrastructure.ConnectionServer,Coop.Mod.CoopServerSM}
  commentId: T:System.Collections.Generic.Dictionary{Network.Infrastructure.ConnectionServer,Coop.Mod.CoopServerSM}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<ConnectionServer, CoopServerSM>
  nameWithType: Dictionary<ConnectionServer, CoopServerSM>
  fullName: System.Collections.Generic.Dictionary<Network.Infrastructure.ConnectionServer, Coop.Mod.CoopServerSM>
  nameWithType.vb: Dictionary(Of ConnectionServer, CoopServerSM)
  fullName.vb: System.Collections.Generic.Dictionary(Of Network.Infrastructure.ConnectionServer, Coop.Mod.CoopServerSM)
  name.vb: Dictionary(Of ConnectionServer, CoopServerSM)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Network.Infrastructure.ConnectionServer
    name: ConnectionServer
    nameWithType: ConnectionServer
    fullName: Network.Infrastructure.ConnectionServer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Coop.Mod.CoopServerSM
    name: CoopServerSM
    nameWithType: CoopServerSM
    fullName: Coop.Mod.CoopServerSM
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Network.Infrastructure.ConnectionServer
    name: ConnectionServer
    nameWithType: ConnectionServer
    fullName: Network.Infrastructure.ConnectionServer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Coop.Mod.CoopServerSM
    name: CoopServerSM
    nameWithType: CoopServerSM
    fullName: Coop.Mod.CoopServerSM
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Coop.Mod.CoopServer.Environment*
  commentId: Overload:Coop.Mod.CoopServer.Environment
  name: Environment
  nameWithType: CoopServer.Environment
  fullName: Coop.Mod.CoopServer.Environment
- uid: Coop.Mod.Persistence.IEnvironmentServer
  commentId: T:Coop.Mod.Persistence.IEnvironmentServer
  parent: Coop.Mod.Persistence
  name: IEnvironmentServer
  nameWithType: IEnvironmentServer
  fullName: Coop.Mod.Persistence.IEnvironmentServer
- uid: Coop.Mod.Persistence
  commentId: N:Coop.Mod.Persistence
  name: Coop.Mod.Persistence
  nameWithType: Coop.Mod.Persistence
  fullName: Coop.Mod.Persistence
- uid: Coop.NetImpl.LiteNet.LiteNetManagerServer
  commentId: T:Coop.NetImpl.LiteNet.LiteNetManagerServer
  parent: Coop.NetImpl.LiteNet
  name: LiteNetManagerServer
  nameWithType: LiteNetManagerServer
  fullName: Coop.NetImpl.LiteNet.LiteNetManagerServer
- uid: Coop.NetImpl.LiteNet
  commentId: N:Coop.NetImpl.LiteNet
  name: Coop.NetImpl.LiteNet
  nameWithType: Coop.NetImpl.LiteNet
  fullName: Coop.NetImpl.LiteNet
- uid: Coop.Mod.CoopServer.#ctor*
  commentId: Overload:Coop.Mod.CoopServer.#ctor
  name: CoopServer
  nameWithType: CoopServer.CoopServer
  fullName: Coop.Mod.CoopServer.CoopServer
- uid: Coop.Mod.CoopServer.SyncedObjectStore*
  commentId: Overload:Coop.Mod.CoopServer.SyncedObjectStore
  name: SyncedObjectStore
  nameWithType: CoopServer.SyncedObjectStore
  fullName: Coop.Mod.CoopServer.SyncedObjectStore
- uid: Sync.Store.SharedRemoteStore
  commentId: T:Sync.Store.SharedRemoteStore
  parent: Sync.Store
  name: SharedRemoteStore
  nameWithType: SharedRemoteStore
  fullName: Sync.Store.SharedRemoteStore
- uid: Sync.Store
  commentId: N:Sync.Store
  name: Sync.Store
  nameWithType: Sync.Store
  fullName: Sync.Store
- uid: Coop.Mod.CoopServer.Persistence*
  commentId: Overload:Coop.Mod.CoopServer.Persistence
  name: Persistence
  nameWithType: CoopServer.Persistence
  fullName: Coop.Mod.CoopServer.Persistence
- uid: Coop.Mod.CoopServerRail
  commentId: T:Coop.Mod.CoopServerRail
  parent: Coop.Mod
  name: CoopServerRail
  nameWithType: CoopServerRail
  fullName: Coop.Mod.CoopServerRail
- uid: Coop.Mod.CoopServer.Instance*
  commentId: Overload:Coop.Mod.CoopServer.Instance
  name: Instance
  nameWithType: CoopServer.Instance
  fullName: Coop.Mod.CoopServer.Instance
- uid: Coop.Mod.CoopServer
  commentId: T:Coop.Mod.CoopServer
  parent: Coop.Mod
  name: CoopServer
  nameWithType: CoopServer
  fullName: Coop.Mod.CoopServer
- uid: Coop.Mod.CoopServer.Current*
  commentId: Overload:Coop.Mod.CoopServer.Current
  name: Current
  nameWithType: CoopServer.Current
  fullName: Coop.Mod.CoopServer.Current
- uid: Network.Infrastructure.Server
  commentId: T:Network.Infrastructure.Server
  parent: Network.Infrastructure
  name: Server
  nameWithType: Server
  fullName: Network.Infrastructure.Server
- uid: Network.Infrastructure
  commentId: N:Network.Infrastructure
  name: Network.Infrastructure
  nameWithType: Network.Infrastructure
  fullName: Network.Infrastructure
- uid: Coop.Mod.CoopServer.gameManager*
  commentId: Overload:Coop.Mod.CoopServer.gameManager
  name: gameManager
  nameWithType: CoopServer.gameManager
  fullName: Coop.Mod.CoopServer.gameManager
- uid: Coop.Mod.Managers.ServerGameManager
  commentId: T:Coop.Mod.Managers.ServerGameManager
  parent: Coop.Mod.Managers
  name: ServerGameManager
  nameWithType: ServerGameManager
  fullName: Coop.Mod.Managers.ServerGameManager
- uid: Coop.Mod.Managers
  commentId: N:Coop.Mod.Managers
  name: Coop.Mod.Managers
  nameWithType: Coop.Mod.Managers
  fullName: Coop.Mod.Managers
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: Coop.Mod.CoopServer.StartServer*
  commentId: Overload:Coop.Mod.CoopServer.StartServer
  name: StartServer
  nameWithType: CoopServer.StartServer
  fullName: Coop.Mod.CoopServer.StartServer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Coop.Mod.CoopServer.ShutDownServer*
  commentId: Overload:Coop.Mod.CoopServer.ShutDownServer
  name: ShutDownServer
  nameWithType: CoopServer.ShutDownServer
  fullName: Coop.Mod.CoopServer.ShutDownServer
- uid: Coop.Mod.CoopServer.StartGame*
  commentId: Overload:Coop.Mod.CoopServer.StartGame
  name: StartGame
  nameWithType: CoopServer.StartGame
  fullName: Coop.Mod.CoopServer.StartGame
- uid: Coop.Mod.CoopServer.CreateGameManager*
  commentId: Overload:Coop.Mod.CoopServer.CreateGameManager
  name: CreateGameManager
  nameWithType: CoopServer.CreateGameManager
  fullName: Coop.Mod.CoopServer.CreateGameManager
- uid: TaleWorlds.Core.LoadGameResult
  commentId: T:TaleWorlds.Core.LoadGameResult
  parent: TaleWorlds.Core
  isExternal: true
  name: LoadGameResult
  nameWithType: LoadGameResult
  fullName: TaleWorlds.Core.LoadGameResult
- uid: TaleWorlds.Core
  commentId: N:TaleWorlds.Core
  isExternal: true
  name: TaleWorlds.Core
  nameWithType: TaleWorlds.Core
  fullName: TaleWorlds.Core
- uid: TaleWorlds.SaveSystem.Load.LoadResult
  commentId: T:TaleWorlds.SaveSystem.Load.LoadResult
  parent: TaleWorlds.SaveSystem.Load
  isExternal: true
  name: LoadResult
  nameWithType: LoadResult
  fullName: TaleWorlds.SaveSystem.Load.LoadResult
- uid: TaleWorlds.SaveSystem.Load
  commentId: N:TaleWorlds.SaveSystem.Load
  isExternal: true
  name: TaleWorlds.SaveSystem.Load
  nameWithType: TaleWorlds.SaveSystem.Load
  fullName: TaleWorlds.SaveSystem.Load
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Coop.Mod.CoopServer.ToString*
  commentId: Overload:Coop.Mod.CoopServer.ToString
  name: ToString
  nameWithType: CoopServer.ToString
  fullName: Coop.Mod.CoopServer.ToString
- uid: Coop.Mod.CoopServer.OnClientConnected*
  commentId: Overload:Coop.Mod.CoopServer.OnClientConnected
  name: OnClientConnected
  nameWithType: CoopServer.OnClientConnected
  fullName: Coop.Mod.CoopServer.OnClientConnected
- uid: Network.Infrastructure.ConnectionServer
  commentId: T:Network.Infrastructure.ConnectionServer
  parent: Network.Infrastructure
  name: ConnectionServer
  nameWithType: ConnectionServer
  fullName: Network.Infrastructure.ConnectionServer
- uid: Coop.Mod.CoopServer.OnClientDisconnected*
  commentId: Overload:Coop.Mod.CoopServer.OnClientDisconnected
  name: OnClientDisconnected
  nameWithType: CoopServer.OnClientDisconnected
  fullName: Coop.Mod.CoopServer.OnClientDisconnected
- uid: Network.Infrastructure.EDisconnectReason
  commentId: T:Network.Infrastructure.EDisconnectReason
  parent: Network.Infrastructure
  name: EDisconnectReason
  nameWithType: EDisconnectReason
  fullName: Network.Infrastructure.EDisconnectReason
- uid: Coop.Mod.CoopServer.ReceiveClientRequestWorldData*
  commentId: Overload:Coop.Mod.CoopServer.ReceiveClientRequestWorldData
  name: ReceiveClientRequestWorldData
  nameWithType: CoopServer.ReceiveClientRequestWorldData
  fullName: Coop.Mod.CoopServer.ReceiveClientRequestWorldData
- uid: Network.Infrastructure.ConnectionBase
  commentId: T:Network.Infrastructure.ConnectionBase
  parent: Network.Infrastructure
  name: ConnectionBase
  nameWithType: ConnectionBase
  fullName: Network.Infrastructure.ConnectionBase
- uid: Network.Protocol.Packet
  commentId: T:Network.Protocol.Packet
  parent: Network.Protocol
  name: Packet
  nameWithType: Packet
  fullName: Network.Protocol.Packet
- uid: Network.Protocol
  commentId: N:Network.Protocol
  name: Network.Protocol
  nameWithType: Network.Protocol
  fullName: Network.Protocol
- uid: Coop.Mod.CoopServer.ReceiveClientDeclineWorldData*
  commentId: Overload:Coop.Mod.CoopServer.ReceiveClientDeclineWorldData
  name: ReceiveClientDeclineWorldData
  nameWithType: CoopServer.ReceiveClientDeclineWorldData
  fullName: Coop.Mod.CoopServer.ReceiveClientDeclineWorldData
- uid: Coop.Mod.CoopServer.ReceiveClientLoaded*
  commentId: Overload:Coop.Mod.CoopServer.ReceiveClientLoaded
  name: ReceiveClientLoaded
  nameWithType: CoopServer.ReceiveClientLoaded
  fullName: Coop.Mod.CoopServer.ReceiveClientLoaded
- uid: Coop.Mod.CoopServer.ReceiveClientPlayerPartyChanged*
  commentId: Overload:Coop.Mod.CoopServer.ReceiveClientPlayerPartyChanged
  name: ReceiveClientPlayerPartyChanged
  nameWithType: CoopServer.ReceiveClientPlayerPartyChanged
  fullName: Coop.Mod.CoopServer.ReceiveClientPlayerPartyChanged
- uid: Coop.Mod.CoopServer.SendInitialWorldData*
  commentId: Overload:Coop.Mod.CoopServer.SendInitialWorldData
  name: SendInitialWorldData
  nameWithType: CoopServer.SendInitialWorldData
  fullName: Coop.Mod.CoopServer.SendInitialWorldData
