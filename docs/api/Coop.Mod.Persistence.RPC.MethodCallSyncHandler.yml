### YamlMime:ManagedReference
items:
- uid: Coop.Mod.Persistence.RPC.MethodCallSyncHandler
  commentId: T:Coop.Mod.Persistence.RPC.MethodCallSyncHandler
  id: MethodCallSyncHandler
  parent: Coop.Mod.Persistence.RPC
  children:
  - Coop.Mod.Persistence.RPC.MethodCallSyncHandler.#ctor(Sync.MethodAccess,Coop.Mod.Persistence.RPC.IClientAccess)
  - Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Finalize
  - Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Logger
  - Coop.Mod.Persistence.RPC.MethodCallSyncHandler.m_ClientAccess
  - Coop.Mod.Persistence.RPC.MethodCallSyncHandler.m_IsRegistered
  - Coop.Mod.Persistence.RPC.MethodCallSyncHandler.MethodAccess
  - Coop.Mod.Persistence.RPC.MethodCallSyncHandler.ProduceArguments(System.Collections.Generic.IEnumerable{System.Object})
  - Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Register
  - Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Stats
  - Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Trace(Coop.Mod.Persistence.RPC.MethodCall,RailClientRoom)
  - Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Unregister
  langs:
  - csharp
  - vb
  name: MethodCallSyncHandler
  nameWithType: MethodCallSyncHandler
  fullName: Coop.Mod.Persistence.RPC.MethodCallSyncHandler
  type: Class
  source:
    remote:
      path: source/Coop/Mod/Persistence/RPC/MethodCallSyncHandler.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: MethodCallSyncHandler
    path: ../source/Coop/Mod/Persistence/RPC/MethodCallSyncHandler.cs
    startLine: 19
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence.RPC
  summary: "\nRegisters a global call handler for a <xref href=\"Coop.Mod.Persistence.RPC.MethodCallSyncHandler.MethodAccess\" data-throw-if-not-resolved=\"false\"></xref> that sends an\n<xref href=\"Coop.Mod.Persistence.RPC.EventMethodCall\" data-throw-if-not-resolved=\"false\"></xref> to the server.\n"
  example: []
  syntax:
    content: public class MethodCallSyncHandler
    content.vb: Public Class MethodCallSyncHandler
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Logger
  commentId: F:Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Logger
  id: Logger
  parent: Coop.Mod.Persistence.RPC.MethodCallSyncHandler
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: MethodCallSyncHandler.Logger
  fullName: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Logger
  type: Field
  source:
    remote:
      path: source/Coop/Mod/Persistence/RPC/MethodCallSyncHandler.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Logger
    path: ../source/Coop/Mod/Persistence/RPC/MethodCallSyncHandler.cs
    startLine: 22
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence.RPC
  syntax:
    content: static readonly Logger Logger
    return:
      type: NLog.Logger
    content.vb: Shared ReadOnly Logger As Logger
  modifiers.csharp:
  - static
  - readonly
  modifiers.vb:
  - Shared
  - ReadOnly
- uid: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.m_ClientAccess
  commentId: F:Coop.Mod.Persistence.RPC.MethodCallSyncHandler.m_ClientAccess
  id: m_ClientAccess
  parent: Coop.Mod.Persistence.RPC.MethodCallSyncHandler
  langs:
  - csharp
  - vb
  name: m_ClientAccess
  nameWithType: MethodCallSyncHandler.m_ClientAccess
  fullName: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.m_ClientAccess
  type: Field
  source:
    remote:
      path: source/Coop/Mod/Persistence/RPC/MethodCallSyncHandler.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_ClientAccess
    path: ../source/Coop/Mod/Persistence/RPC/MethodCallSyncHandler.cs
    startLine: 24
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence.RPC
  syntax:
    content: >-
      [NotNull]

      readonly IClientAccess m_ClientAccess
    return:
      type: Coop.Mod.Persistence.RPC.IClientAccess
    content.vb: >-
      <NotNull>

      ReadOnly m_ClientAccess As IClientAccess
  attributes:
  - type: JetBrains.Annotations.NotNullAttribute
    ctor: JetBrains.Annotations.NotNullAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - readonly
  modifiers.vb:
  - ReadOnly
- uid: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.m_IsRegistered
  commentId: F:Coop.Mod.Persistence.RPC.MethodCallSyncHandler.m_IsRegistered
  id: m_IsRegistered
  parent: Coop.Mod.Persistence.RPC.MethodCallSyncHandler
  langs:
  - csharp
  - vb
  name: m_IsRegistered
  nameWithType: MethodCallSyncHandler.m_IsRegistered
  fullName: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.m_IsRegistered
  type: Field
  source:
    remote:
      path: source/Coop/Mod/Persistence/RPC/MethodCallSyncHandler.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_IsRegistered
    path: ../source/Coop/Mod/Persistence/RPC/MethodCallSyncHandler.cs
    startLine: 25
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence.RPC
  syntax:
    content: bool m_IsRegistered
    return:
      type: System.Boolean
    content.vb: m_IsRegistered As Boolean
- uid: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.#ctor(Sync.MethodAccess,Coop.Mod.Persistence.RPC.IClientAccess)
  commentId: M:Coop.Mod.Persistence.RPC.MethodCallSyncHandler.#ctor(Sync.MethodAccess,Coop.Mod.Persistence.RPC.IClientAccess)
  id: '#ctor(Sync.MethodAccess,Coop.Mod.Persistence.RPC.IClientAccess)'
  parent: Coop.Mod.Persistence.RPC.MethodCallSyncHandler
  langs:
  - csharp
  - vb
  name: MethodCallSyncHandler(MethodAccess, IClientAccess)
  nameWithType: MethodCallSyncHandler.MethodCallSyncHandler(MethodAccess, IClientAccess)
  fullName: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.MethodCallSyncHandler(Sync.MethodAccess, Coop.Mod.Persistence.RPC.IClientAccess)
  type: Constructor
  source:
    remote:
      path: source/Coop/Mod/Persistence/RPC/MethodCallSyncHandler.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: .ctor
    path: ../source/Coop/Mod/Persistence/RPC/MethodCallSyncHandler.cs
    startLine: 27
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence.RPC
  syntax:
    content: public MethodCallSyncHandler([NotNull] MethodAccess methodAccess, [NotNull] IClientAccess access)
    parameters:
    - id: methodAccess
      type: Sync.MethodAccess
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    - id: access
      type: Coop.Mod.Persistence.RPC.IClientAccess
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    content.vb: Public Sub New(methodAccess As MethodAccess, access As IClientAccess)
  overload: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Stats
  commentId: P:Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Stats
  id: Stats
  parent: Coop.Mod.Persistence.RPC.MethodCallSyncHandler
  langs:
  - csharp
  - vb
  name: Stats
  nameWithType: MethodCallSyncHandler.Stats
  fullName: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Stats
  type: Property
  source:
    remote:
      path: source/Coop/Mod/Persistence/RPC/MethodCallSyncHandler.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Stats
    path: ../source/Coop/Mod/Persistence/RPC/MethodCallSyncHandler.cs
    startLine: 36
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence.RPC
  syntax:
    content: public MethodCallSyncHandler.Statistics Stats { get; }
    parameters: []
    return:
      type: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Statistics
    content.vb: Public ReadOnly Property Stats As MethodCallSyncHandler.Statistics
  overload: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Stats*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.MethodAccess
  commentId: P:Coop.Mod.Persistence.RPC.MethodCallSyncHandler.MethodAccess
  id: MethodAccess
  parent: Coop.Mod.Persistence.RPC.MethodCallSyncHandler
  langs:
  - csharp
  - vb
  name: MethodAccess
  nameWithType: MethodCallSyncHandler.MethodAccess
  fullName: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.MethodAccess
  type: Property
  source:
    remote:
      path: source/Coop/Mod/Persistence/RPC/MethodCallSyncHandler.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: MethodAccess
    path: ../source/Coop/Mod/Persistence/RPC/MethodCallSyncHandler.cs
    startLine: 37
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence.RPC
  syntax:
    content: public MethodAccess MethodAccess { get; }
    parameters: []
    return:
      type: Sync.MethodAccess
    content.vb: Public ReadOnly Property MethodAccess As MethodAccess
  overload: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.MethodAccess*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Trace(Coop.Mod.Persistence.RPC.MethodCall,RailClientRoom)
  commentId: M:Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Trace(Coop.Mod.Persistence.RPC.MethodCall,RailClientRoom)
  id: Trace(Coop.Mod.Persistence.RPC.MethodCall,RailClientRoom)
  parent: Coop.Mod.Persistence.RPC.MethodCallSyncHandler
  langs:
  - csharp
  - vb
  name: Trace(MethodCall, RailClientRoom)
  nameWithType: MethodCallSyncHandler.Trace(MethodCall, RailClientRoom)
  fullName: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Trace(Coop.Mod.Persistence.RPC.MethodCall, RailClientRoom)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/Persistence/RPC/MethodCallSyncHandler.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Trace
    path: ../source/Coop/Mod/Persistence/RPC/MethodCallSyncHandler.cs
    startLine: 39
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence.RPC
  syntax:
    content: >-
      [Conditional("DEBUG")]

      void Trace(MethodCall call, RailClientRoom room)
    parameters:
    - id: call
      type: Coop.Mod.Persistence.RPC.MethodCall
    - id: room
      type: RailClientRoom
    content.vb: >-
      <Conditional("DEBUG")>

      Sub Trace(call As MethodCall, room As RailClientRoom)
  overload: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Trace*
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
- uid: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Register
  commentId: M:Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Register
  id: Register
  parent: Coop.Mod.Persistence.RPC.MethodCallSyncHandler
  langs:
  - csharp
  - vb
  name: Register()
  nameWithType: MethodCallSyncHandler.Register()
  fullName: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Register()
  type: Method
  source:
    remote:
      path: source/Coop/Mod/Persistence/RPC/MethodCallSyncHandler.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Register
    path: ../source/Coop/Mod/Persistence/RPC/MethodCallSyncHandler.cs
    startLine: 50
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence.RPC
  syntax:
    content: void Register()
    content.vb: Sub Register
  overload: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Register*
- uid: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.ProduceArguments(System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:Coop.Mod.Persistence.RPC.MethodCallSyncHandler.ProduceArguments(System.Collections.Generic.IEnumerable{System.Object})
  id: ProduceArguments(System.Collections.Generic.IEnumerable{System.Object})
  parent: Coop.Mod.Persistence.RPC.MethodCallSyncHandler
  langs:
  - csharp
  - vb
  name: ProduceArguments(IEnumerable<Object>)
  nameWithType: MethodCallSyncHandler.ProduceArguments(IEnumerable<Object>)
  fullName: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.ProduceArguments(System.Collections.Generic.IEnumerable<System.Object>)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/Persistence/RPC/MethodCallSyncHandler.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ProduceArguments
    path: ../source/Coop/Mod/Persistence/RPC/MethodCallSyncHandler.cs
    startLine: 96
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence.RPC
  syntax:
    content: List<Argument> ProduceArguments(IEnumerable<object> objects)
    parameters:
    - id: objects
      type: System.Collections.Generic.IEnumerable{System.Object}
    return:
      type: System.Collections.Generic.List{Coop.Mod.Persistence.RPC.Argument}
    content.vb: Function ProduceArguments(objects As IEnumerable(Of Object)) As List(Of Argument)
  overload: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.ProduceArguments*
  nameWithType.vb: MethodCallSyncHandler.ProduceArguments(IEnumerable(Of Object))
  fullName.vb: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.ProduceArguments(System.Collections.Generic.IEnumerable(Of System.Object))
  name.vb: ProduceArguments(IEnumerable(Of Object))
- uid: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Unregister
  commentId: M:Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Unregister
  id: Unregister
  parent: Coop.Mod.Persistence.RPC.MethodCallSyncHandler
  langs:
  - csharp
  - vb
  name: Unregister()
  nameWithType: MethodCallSyncHandler.Unregister()
  fullName: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Unregister()
  type: Method
  source:
    remote:
      path: source/Coop/Mod/Persistence/RPC/MethodCallSyncHandler.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Unregister
    path: ../source/Coop/Mod/Persistence/RPC/MethodCallSyncHandler.cs
    startLine: 108
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence.RPC
  syntax:
    content: void Unregister()
    content.vb: Sub Unregister
  overload: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Unregister*
- uid: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Finalize
  commentId: M:Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Finalize
  id: Finalize
  parent: Coop.Mod.Persistence.RPC.MethodCallSyncHandler
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: MethodCallSyncHandler.Finalize()
  fullName: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Finalize()
  type: Method
  source:
    remote:
      path: source/Coop/Mod/Persistence/RPC/MethodCallSyncHandler.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Finalize
    path: ../source/Coop/Mod/Persistence/RPC/MethodCallSyncHandler.cs
    startLine: 118
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence.RPC
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Finalize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.MethodAccess
  commentId: P:Coop.Mod.Persistence.RPC.MethodCallSyncHandler.MethodAccess
  isExternal: true
- uid: Coop.Mod.Persistence.RPC.EventMethodCall
  commentId: T:Coop.Mod.Persistence.RPC.EventMethodCall
  parent: Coop.Mod.Persistence.RPC
  name: EventMethodCall
  nameWithType: EventMethodCall
  fullName: Coop.Mod.Persistence.RPC.EventMethodCall
- uid: Coop.Mod.Persistence.RPC
  commentId: N:Coop.Mod.Persistence.RPC
  name: Coop.Mod.Persistence.RPC
  nameWithType: Coop.Mod.Persistence.RPC
  fullName: Coop.Mod.Persistence.RPC
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NLog.Logger
  commentId: T:NLog.Logger
  parent: NLog
  isExternal: true
  name: Logger
  nameWithType: Logger
  fullName: NLog.Logger
- uid: NLog
  commentId: N:NLog
  isExternal: true
  name: NLog
  nameWithType: NLog
  fullName: NLog
- uid: Coop.Mod.Persistence.RPC.IClientAccess
  commentId: T:Coop.Mod.Persistence.RPC.IClientAccess
  parent: Coop.Mod.Persistence.RPC
  name: IClientAccess
  nameWithType: IClientAccess
  fullName: Coop.Mod.Persistence.RPC.IClientAccess
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.#ctor*
  commentId: Overload:Coop.Mod.Persistence.RPC.MethodCallSyncHandler.#ctor
  name: MethodCallSyncHandler
  nameWithType: MethodCallSyncHandler.MethodCallSyncHandler
  fullName: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.MethodCallSyncHandler
- uid: Sync.MethodAccess
  commentId: T:Sync.MethodAccess
  parent: Sync
  name: MethodAccess
  nameWithType: MethodAccess
  fullName: Sync.MethodAccess
- uid: Sync
  commentId: N:Sync
  name: Sync
  nameWithType: Sync
  fullName: Sync
- uid: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Stats*
  commentId: Overload:Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Stats
  name: Stats
  nameWithType: MethodCallSyncHandler.Stats
  fullName: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Stats
- uid: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Statistics
  commentId: T:Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Statistics
  parent: Coop.Mod.Persistence.RPC
  name: MethodCallSyncHandler.Statistics
  nameWithType: MethodCallSyncHandler.Statistics
  fullName: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Statistics
- uid: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.MethodAccess*
  commentId: Overload:Coop.Mod.Persistence.RPC.MethodCallSyncHandler.MethodAccess
  name: MethodAccess
  nameWithType: MethodCallSyncHandler.MethodAccess
  fullName: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.MethodAccess
- uid: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Trace*
  commentId: Overload:Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Trace
  name: Trace
  nameWithType: MethodCallSyncHandler.Trace
  fullName: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Trace
- uid: Coop.Mod.Persistence.RPC.MethodCall
  commentId: T:Coop.Mod.Persistence.RPC.MethodCall
  parent: Coop.Mod.Persistence.RPC
  name: MethodCall
  nameWithType: MethodCall
  fullName: Coop.Mod.Persistence.RPC.MethodCall
- uid: RailClientRoom
  isExternal: true
  name: RailClientRoom
  nameWithType: RailClientRoom
  fullName: RailClientRoom
- uid: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Register*
  commentId: Overload:Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Register
  name: Register
  nameWithType: MethodCallSyncHandler.Register
  fullName: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Register
- uid: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.ProduceArguments*
  commentId: Overload:Coop.Mod.Persistence.RPC.MethodCallSyncHandler.ProduceArguments
  name: ProduceArguments
  nameWithType: MethodCallSyncHandler.ProduceArguments
  fullName: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.ProduceArguments
- uid: System.Collections.Generic.IEnumerable{System.Object}
  commentId: T:System.Collections.Generic.IEnumerable{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Object>
  nameWithType: IEnumerable<Object>
  fullName: System.Collections.Generic.IEnumerable<System.Object>
  nameWithType.vb: IEnumerable(Of Object)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Object)
  name.vb: IEnumerable(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Coop.Mod.Persistence.RPC.Argument}
  commentId: T:System.Collections.Generic.List{Coop.Mod.Persistence.RPC.Argument}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Argument>
  nameWithType: List<Argument>
  fullName: System.Collections.Generic.List<Coop.Mod.Persistence.RPC.Argument>
  nameWithType.vb: List(Of Argument)
  fullName.vb: System.Collections.Generic.List(Of Coop.Mod.Persistence.RPC.Argument)
  name.vb: List(Of Argument)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Coop.Mod.Persistence.RPC.Argument
    name: Argument
    nameWithType: Argument
    fullName: Coop.Mod.Persistence.RPC.Argument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Coop.Mod.Persistence.RPC.Argument
    name: Argument
    nameWithType: Argument
    fullName: Coop.Mod.Persistence.RPC.Argument
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Unregister*
  commentId: Overload:Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Unregister
  name: Unregister
  nameWithType: MethodCallSyncHandler.Unregister
  fullName: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Unregister
- uid: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Finalize*
  commentId: Overload:Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Finalize
  name: Finalize
  nameWithType: MethodCallSyncHandler.Finalize
  fullName: Coop.Mod.Persistence.RPC.MethodCallSyncHandler.Finalize
