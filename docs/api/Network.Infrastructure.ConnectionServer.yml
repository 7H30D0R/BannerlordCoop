### YamlMime:ManagedReference
items:
- uid: Network.Infrastructure.ConnectionServer
  commentId: T:Network.Infrastructure.ConnectionServer
  id: ConnectionServer
  parent: Network.Infrastructure
  children:
  - Network.Infrastructure.ConnectionServer.#ctor(Network.Infrastructure.INetworkConnection,Network.Infrastructure.IGameStatePersistence,Network.Infrastructure.ISaveData)
  - Network.Infrastructure.ConnectionServer.closeConnection(Network.Infrastructure.EDisconnectReason)
  - Network.Infrastructure.ConnectionServer.Disconnect(Network.Infrastructure.EDisconnectReason)
  - Network.Infrastructure.ConnectionServer.Finalize
  - Network.Infrastructure.ConnectionServer.Logger
  - Network.Infrastructure.ConnectionServer.m_ServerSM
  - Network.Infrastructure.ConnectionServer.m_WorldData
  - Network.Infrastructure.ConnectionServer.OnClientJoined
  - Network.Infrastructure.ConnectionServer.onConnected
  - Network.Infrastructure.ConnectionServer.OnDisconnected
  - Network.Infrastructure.ConnectionServer.ReceiveClientHello(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  - Network.Infrastructure.ConnectionServer.ReceiveClientInfo(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  - Network.Infrastructure.ConnectionServer.ReceiveClientJoined(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  - Network.Infrastructure.ConnectionServer.ReceiveClientKeepAlive(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  - Network.Infrastructure.ConnectionServer.ReceiveSyncPacket(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  - Network.Infrastructure.ConnectionServer.SendJoinRequestAccepted
  - Network.Infrastructure.ConnectionServer.SendRequestClientInfo
  - Network.Infrastructure.ConnectionServer.SendWorldData
  - Network.Infrastructure.ConnectionServer.State
  langs:
  - csharp
  - vb
  name: ConnectionServer
  nameWithType: ConnectionServer
  fullName: Network.Infrastructure.ConnectionServer
  type: Class
  source:
    remote:
      path: source/Network/Infrastructure/ConnectionServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ConnectionServer
    path: ../source/Network/Infrastructure/ConnectionServer.cs
    startLine: 15
  assemblies:
  - Network
  namespace: Network.Infrastructure
  syntax:
    content: 'public class ConnectionServer : ConnectionBase'
    content.vb: >-
      Public Class ConnectionServer

          Inherits ConnectionBase
  inheritance:
  - System.Object
  - Network.Infrastructure.ConnectionBase
  inheritedMembers:
  - Network.Infrastructure.ConnectionBase.Dispatcher
  - Network.Infrastructure.ConnectionBase.GameStatePersistence
  - Network.Infrastructure.ConnectionBase.Send(Network.Protocol.Packet)
  - Network.Infrastructure.ConnectionBase.SendFragmented(Network.Protocol.Packet)
  - Network.Infrastructure.ConnectionBase.Receive(System.ArraySegment{System.Byte})
  - Network.Infrastructure.ConnectionBase.Network
  - Network.Infrastructure.ConnectionBase.Latency
  - Network.Infrastructure.ConnectionBase.ToString
  - Network.Infrastructure.ConnectionBase.m_Stream
  - Network.Infrastructure.ConnectionBase.m_PackageReader
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Network.Infrastructure.ConnectionServer.Logger
  commentId: F:Network.Infrastructure.ConnectionServer.Logger
  id: Logger
  parent: Network.Infrastructure.ConnectionServer
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: ConnectionServer.Logger
  fullName: Network.Infrastructure.ConnectionServer.Logger
  type: Field
  source:
    remote:
      path: source/Network/Infrastructure/ConnectionServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Logger
    path: ../source/Network/Infrastructure/ConnectionServer.cs
    startLine: 17
  assemblies:
  - Network
  namespace: Network.Infrastructure
  syntax:
    content: static readonly Logger Logger
    return:
      type: NLog.Logger
    content.vb: Shared ReadOnly Logger As Logger
  modifiers.csharp:
  - static
  - readonly
  modifiers.vb:
  - Shared
  - ReadOnly
- uid: Network.Infrastructure.ConnectionServer.m_ServerSM
  commentId: F:Network.Infrastructure.ConnectionServer.m_ServerSM
  id: m_ServerSM
  parent: Network.Infrastructure.ConnectionServer
  langs:
  - csharp
  - vb
  name: m_ServerSM
  nameWithType: ConnectionServer.m_ServerSM
  fullName: Network.Infrastructure.ConnectionServer.m_ServerSM
  type: Field
  source:
    remote:
      path: source/Network/Infrastructure/ConnectionServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_ServerSM
    path: ../source/Network/Infrastructure/ConnectionServer.cs
    startLine: 18
  assemblies:
  - Network
  namespace: Network.Infrastructure
  syntax:
    content: readonly ConnectionServerSM m_ServerSM
    return:
      type: Network.Infrastructure.ConnectionServerSM
    content.vb: ReadOnly m_ServerSM As ConnectionServerSM
  modifiers.csharp:
  - readonly
  modifiers.vb:
  - ReadOnly
- uid: Network.Infrastructure.ConnectionServer.m_WorldData
  commentId: F:Network.Infrastructure.ConnectionServer.m_WorldData
  id: m_WorldData
  parent: Network.Infrastructure.ConnectionServer
  langs:
  - csharp
  - vb
  name: m_WorldData
  nameWithType: ConnectionServer.m_WorldData
  fullName: Network.Infrastructure.ConnectionServer.m_WorldData
  type: Field
  source:
    remote:
      path: source/Network/Infrastructure/ConnectionServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_WorldData
    path: ../source/Network/Infrastructure/ConnectionServer.cs
    startLine: 19
  assemblies:
  - Network
  namespace: Network.Infrastructure
  syntax:
    content: readonly ISaveData m_WorldData
    return:
      type: Network.Infrastructure.ISaveData
    content.vb: ReadOnly m_WorldData As ISaveData
  modifiers.csharp:
  - readonly
  modifiers.vb:
  - ReadOnly
- uid: Network.Infrastructure.ConnectionServer.#ctor(Network.Infrastructure.INetworkConnection,Network.Infrastructure.IGameStatePersistence,Network.Infrastructure.ISaveData)
  commentId: M:Network.Infrastructure.ConnectionServer.#ctor(Network.Infrastructure.INetworkConnection,Network.Infrastructure.IGameStatePersistence,Network.Infrastructure.ISaveData)
  id: '#ctor(Network.Infrastructure.INetworkConnection,Network.Infrastructure.IGameStatePersistence,Network.Infrastructure.ISaveData)'
  parent: Network.Infrastructure.ConnectionServer
  langs:
  - csharp
  - vb
  name: ConnectionServer(INetworkConnection, IGameStatePersistence, ISaveData)
  nameWithType: ConnectionServer.ConnectionServer(INetworkConnection, IGameStatePersistence, ISaveData)
  fullName: Network.Infrastructure.ConnectionServer.ConnectionServer(Network.Infrastructure.INetworkConnection, Network.Infrastructure.IGameStatePersistence, Network.Infrastructure.ISaveData)
  type: Constructor
  source:
    remote:
      path: source/Network/Infrastructure/ConnectionServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: .ctor
    path: ../source/Network/Infrastructure/ConnectionServer.cs
    startLine: 21
  assemblies:
  - Network
  namespace: Network.Infrastructure
  syntax:
    content: public ConnectionServer(INetworkConnection network, IGameStatePersistence persistence, ISaveData worldData)
    parameters:
    - id: network
      type: Network.Infrastructure.INetworkConnection
    - id: persistence
      type: Network.Infrastructure.IGameStatePersistence
    - id: worldData
      type: Network.Infrastructure.ISaveData
    content.vb: Public Sub New(network As INetworkConnection, persistence As IGameStatePersistence, worldData As ISaveData)
  overload: Network.Infrastructure.ConnectionServer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Network.Infrastructure.ConnectionServer.State
  commentId: P:Network.Infrastructure.ConnectionServer.State
  id: State
  parent: Network.Infrastructure.ConnectionServer
  langs:
  - csharp
  - vb
  name: State
  nameWithType: ConnectionServer.State
  fullName: Network.Infrastructure.ConnectionServer.State
  type: Property
  source:
    remote:
      path: source/Network/Infrastructure/ConnectionServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: State
    path: ../source/Network/Infrastructure/ConnectionServer.cs
    startLine: 46
  assemblies:
  - Network
  namespace: Network.Infrastructure
  syntax:
    content: public override Enum State { get; }
    parameters: []
    return:
      type: System.Enum
    content.vb: 'Public Overrides ReadOnly Property State As '
  overridden: Network.Infrastructure.ConnectionBase.State
  overload: Network.Infrastructure.ConnectionServer.State*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Network.Infrastructure.ConnectionServer.OnClientJoined
  commentId: E:Network.Infrastructure.ConnectionServer.OnClientJoined
  id: OnClientJoined
  parent: Network.Infrastructure.ConnectionServer
  langs:
  - csharp
  - vb
  name: OnClientJoined
  nameWithType: ConnectionServer.OnClientJoined
  fullName: Network.Infrastructure.ConnectionServer.OnClientJoined
  type: Event
  source:
    remote:
      path: source/Network/Infrastructure/ConnectionServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: OnClientJoined
    path: ../source/Network/Infrastructure/ConnectionServer.cs
    startLine: 47
  assemblies:
  - Network
  namespace: Network.Infrastructure
  syntax:
    content: public event Action<ConnectionServer> OnClientJoined
    return:
      type: System.Action{Network.Infrastructure.ConnectionServer}
    content.vb: Public Event OnClientJoined As Action(Of ConnectionServer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Network.Infrastructure.ConnectionServer.OnDisconnected
  commentId: E:Network.Infrastructure.ConnectionServer.OnDisconnected
  id: OnDisconnected
  parent: Network.Infrastructure.ConnectionServer
  langs:
  - csharp
  - vb
  name: OnDisconnected
  nameWithType: ConnectionServer.OnDisconnected
  fullName: Network.Infrastructure.ConnectionServer.OnDisconnected
  type: Event
  source:
    remote:
      path: source/Network/Infrastructure/ConnectionServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: OnDisconnected
    path: ../source/Network/Infrastructure/ConnectionServer.cs
    startLine: 48
  assemblies:
  - Network
  namespace: Network.Infrastructure
  syntax:
    content: public event Action<ConnectionServer> OnDisconnected
    return:
      type: System.Action{Network.Infrastructure.ConnectionServer}
    content.vb: Public Event OnDisconnected As Action(Of ConnectionServer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Network.Infrastructure.ConnectionServer.Finalize
  commentId: M:Network.Infrastructure.ConnectionServer.Finalize
  id: Finalize
  parent: Network.Infrastructure.ConnectionServer
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: ConnectionServer.Finalize()
  fullName: Network.Infrastructure.ConnectionServer.Finalize()
  type: Method
  source:
    remote:
      path: source/Network/Infrastructure/ConnectionServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Finalize
    path: ../source/Network/Infrastructure/ConnectionServer.cs
    startLine: 50
  assemblies:
  - Network
  namespace: Network.Infrastructure
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: Network.Infrastructure.ConnectionServer.Finalize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Network.Infrastructure.ConnectionServer.SendWorldData
  commentId: M:Network.Infrastructure.ConnectionServer.SendWorldData
  id: SendWorldData
  parent: Network.Infrastructure.ConnectionServer
  langs:
  - csharp
  - vb
  name: SendWorldData()
  nameWithType: ConnectionServer.SendWorldData()
  fullName: Network.Infrastructure.ConnectionServer.SendWorldData()
  type: Method
  source:
    remote:
      path: source/Network/Infrastructure/ConnectionServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: SendWorldData
    path: ../source/Network/Infrastructure/ConnectionServer.cs
    startLine: 54
  assemblies:
  - Network
  namespace: Network.Infrastructure
  syntax:
    content: public void SendWorldData()
    content.vb: Public Sub SendWorldData
  overload: Network.Infrastructure.ConnectionServer.SendWorldData*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Network.Infrastructure.ConnectionServer.Disconnect(Network.Infrastructure.EDisconnectReason)
  commentId: M:Network.Infrastructure.ConnectionServer.Disconnect(Network.Infrastructure.EDisconnectReason)
  id: Disconnect(Network.Infrastructure.EDisconnectReason)
  parent: Network.Infrastructure.ConnectionServer
  langs:
  - csharp
  - vb
  name: Disconnect(EDisconnectReason)
  nameWithType: ConnectionServer.Disconnect(EDisconnectReason)
  fullName: Network.Infrastructure.ConnectionServer.Disconnect(Network.Infrastructure.EDisconnectReason)
  type: Method
  source:
    remote:
      path: source/Network/Infrastructure/ConnectionServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Disconnect
    path: ../source/Network/Infrastructure/ConnectionServer.cs
    startLine: 59
  assemblies:
  - Network
  namespace: Network.Infrastructure
  syntax:
    content: public override void Disconnect(EDisconnectReason eReason)
    parameters:
    - id: eReason
      type: Network.Infrastructure.EDisconnectReason
    content.vb: Public Overrides Sub Disconnect(eReason As EDisconnectReason)
  overridden: Network.Infrastructure.ConnectionBase.Disconnect(Network.Infrastructure.EDisconnectReason)
  overload: Network.Infrastructure.ConnectionServer.Disconnect*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Network.Infrastructure.ConnectionServer.closeConnection(Network.Infrastructure.EDisconnectReason)
  commentId: M:Network.Infrastructure.ConnectionServer.closeConnection(Network.Infrastructure.EDisconnectReason)
  id: closeConnection(Network.Infrastructure.EDisconnectReason)
  parent: Network.Infrastructure.ConnectionServer
  langs:
  - csharp
  - vb
  name: closeConnection(EDisconnectReason)
  nameWithType: ConnectionServer.closeConnection(EDisconnectReason)
  fullName: Network.Infrastructure.ConnectionServer.closeConnection(Network.Infrastructure.EDisconnectReason)
  type: Method
  source:
    remote:
      path: source/Network/Infrastructure/ConnectionServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: closeConnection
    path: ../source/Network/Infrastructure/ConnectionServer.cs
    startLine: 69
  assemblies:
  - Network
  namespace: Network.Infrastructure
  syntax:
    content: void closeConnection(EDisconnectReason eReason)
    parameters:
    - id: eReason
      type: Network.Infrastructure.EDisconnectReason
    content.vb: Sub closeConnection(eReason As EDisconnectReason)
  overload: Network.Infrastructure.ConnectionServer.closeConnection*
- uid: Network.Infrastructure.ConnectionServer.onConnected
  commentId: M:Network.Infrastructure.ConnectionServer.onConnected
  id: onConnected
  parent: Network.Infrastructure.ConnectionServer
  langs:
  - csharp
  - vb
  name: onConnected()
  nameWithType: ConnectionServer.onConnected()
  fullName: Network.Infrastructure.ConnectionServer.onConnected()
  type: Method
  source:
    remote:
      path: source/Network/Infrastructure/ConnectionServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: onConnected
    path: ../source/Network/Infrastructure/ConnectionServer.cs
    startLine: 75
  assemblies:
  - Network
  namespace: Network.Infrastructure
  syntax:
    content: void onConnected()
    content.vb: Sub onConnected
  overload: Network.Infrastructure.ConnectionServer.onConnected*
- uid: Network.Infrastructure.ConnectionServer.ReceiveClientHello(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  commentId: M:Network.Infrastructure.ConnectionServer.ReceiveClientHello(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  id: ReceiveClientHello(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  parent: Network.Infrastructure.ConnectionServer
  langs:
  - csharp
  - vb
  name: ReceiveClientHello(ConnectionBase, Packet)
  nameWithType: ConnectionServer.ReceiveClientHello(ConnectionBase, Packet)
  fullName: Network.Infrastructure.ConnectionServer.ReceiveClientHello(Network.Infrastructure.ConnectionBase, Network.Protocol.Packet)
  type: Method
  source:
    remote:
      path: source/Network/Infrastructure/ConnectionServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ReceiveClientHello
    path: ../source/Network/Infrastructure/ConnectionServer.cs
    startLine: 81
  assemblies:
  - Network
  namespace: Network.Infrastructure
  syntax:
    content: >-
      [ConnectionServerPacketHandler(EServerConnectionState.AwaitingClient, EPacket.Client_Hello)]

      void ReceiveClientHello(ConnectionBase connection, Packet packet)
    parameters:
    - id: connection
      type: Network.Infrastructure.ConnectionBase
    - id: packet
      type: Network.Protocol.Packet
    content.vb: >-
      <ConnectionServerPacketHandler(EServerConnectionState.AwaitingClient, EPacket.Client_Hello)>

      Sub ReceiveClientHello(connection As ConnectionBase, packet As Packet)
  overload: Network.Infrastructure.ConnectionServer.ReceiveClientHello*
  attributes:
  - type: Network.Infrastructure.ConnectionServerPacketHandlerAttribute
    ctor: Network.Infrastructure.ConnectionServerPacketHandlerAttribute.#ctor(Network.Infrastructure.EServerConnectionState,Network.Protocol.EPacket)
    arguments:
    - type: Network.Infrastructure.EServerConnectionState
      value: 0
    - type: Network.Protocol.EPacket
      value: 0
- uid: Network.Infrastructure.ConnectionServer.SendRequestClientInfo
  commentId: M:Network.Infrastructure.ConnectionServer.SendRequestClientInfo
  id: SendRequestClientInfo
  parent: Network.Infrastructure.ConnectionServer
  langs:
  - csharp
  - vb
  name: SendRequestClientInfo()
  nameWithType: ConnectionServer.SendRequestClientInfo()
  fullName: Network.Infrastructure.ConnectionServer.SendRequestClientInfo()
  type: Method
  source:
    remote:
      path: source/Network/Infrastructure/ConnectionServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: SendRequestClientInfo
    path: ../source/Network/Infrastructure/ConnectionServer.cs
    startLine: 100
  assemblies:
  - Network
  namespace: Network.Infrastructure
  syntax:
    content: void SendRequestClientInfo()
    content.vb: Sub SendRequestClientInfo
  overload: Network.Infrastructure.ConnectionServer.SendRequestClientInfo*
- uid: Network.Infrastructure.ConnectionServer.ReceiveClientInfo(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  commentId: M:Network.Infrastructure.ConnectionServer.ReceiveClientInfo(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  id: ReceiveClientInfo(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  parent: Network.Infrastructure.ConnectionServer
  langs:
  - csharp
  - vb
  name: ReceiveClientInfo(ConnectionBase, Packet)
  nameWithType: ConnectionServer.ReceiveClientInfo(ConnectionBase, Packet)
  fullName: Network.Infrastructure.ConnectionServer.ReceiveClientInfo(Network.Infrastructure.ConnectionBase, Network.Protocol.Packet)
  type: Method
  source:
    remote:
      path: source/Network/Infrastructure/ConnectionServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ReceiveClientInfo
    path: ../source/Network/Infrastructure/ConnectionServer.cs
    startLine: 108
  assemblies:
  - Network
  namespace: Network.Infrastructure
  syntax:
    content: >-
      [ConnectionServerPacketHandler(EServerConnectionState.AwaitingClient, EPacket.Client_Info)]

      void ReceiveClientInfo(ConnectionBase connection, Packet packet)
    parameters:
    - id: connection
      type: Network.Infrastructure.ConnectionBase
    - id: packet
      type: Network.Protocol.Packet
    content.vb: >-
      <ConnectionServerPacketHandler(EServerConnectionState.AwaitingClient, EPacket.Client_Info)>

      Sub ReceiveClientInfo(connection As ConnectionBase, packet As Packet)
  overload: Network.Infrastructure.ConnectionServer.ReceiveClientInfo*
  attributes:
  - type: Network.Infrastructure.ConnectionServerPacketHandlerAttribute
    ctor: Network.Infrastructure.ConnectionServerPacketHandlerAttribute.#ctor(Network.Infrastructure.EServerConnectionState,Network.Protocol.EPacket)
    arguments:
    - type: Network.Infrastructure.EServerConnectionState
      value: 0
    - type: Network.Protocol.EPacket
      value: 1
- uid: Network.Infrastructure.ConnectionServer.SendJoinRequestAccepted
  commentId: M:Network.Infrastructure.ConnectionServer.SendJoinRequestAccepted
  id: SendJoinRequestAccepted
  parent: Network.Infrastructure.ConnectionServer
  langs:
  - csharp
  - vb
  name: SendJoinRequestAccepted()
  nameWithType: ConnectionServer.SendJoinRequestAccepted()
  fullName: Network.Infrastructure.ConnectionServer.SendJoinRequestAccepted()
  type: Method
  source:
    remote:
      path: source/Network/Infrastructure/ConnectionServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: SendJoinRequestAccepted
    path: ../source/Network/Infrastructure/ConnectionServer.cs
    startLine: 118
  assemblies:
  - Network
  namespace: Network.Infrastructure
  syntax:
    content: void SendJoinRequestAccepted()
    content.vb: Sub SendJoinRequestAccepted
  overload: Network.Infrastructure.ConnectionServer.SendJoinRequestAccepted*
- uid: Network.Infrastructure.ConnectionServer.ReceiveClientJoined(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  commentId: M:Network.Infrastructure.ConnectionServer.ReceiveClientJoined(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  id: ReceiveClientJoined(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  parent: Network.Infrastructure.ConnectionServer
  langs:
  - csharp
  - vb
  name: ReceiveClientJoined(ConnectionBase, Packet)
  nameWithType: ConnectionServer.ReceiveClientJoined(ConnectionBase, Packet)
  fullName: Network.Infrastructure.ConnectionServer.ReceiveClientJoined(Network.Infrastructure.ConnectionBase, Network.Protocol.Packet)
  type: Method
  source:
    remote:
      path: source/Network/Infrastructure/ConnectionServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ReceiveClientJoined
    path: ../source/Network/Infrastructure/ConnectionServer.cs
    startLine: 126
  assemblies:
  - Network
  namespace: Network.Infrastructure
  syntax:
    content: >-
      [ConnectionServerPacketHandler(EServerConnectionState.ClientJoining, EPacket.Client_Loaded)]

      void ReceiveClientJoined(ConnectionBase connection, Packet packet)
    parameters:
    - id: connection
      type: Network.Infrastructure.ConnectionBase
    - id: packet
      type: Network.Protocol.Packet
    content.vb: >-
      <ConnectionServerPacketHandler(EServerConnectionState.ClientJoining, EPacket.Client_Loaded)>

      Sub ReceiveClientJoined(connection As ConnectionBase, packet As Packet)
  overload: Network.Infrastructure.ConnectionServer.ReceiveClientJoined*
  attributes:
  - type: Network.Infrastructure.ConnectionServerPacketHandlerAttribute
    ctor: Network.Infrastructure.ConnectionServerPacketHandlerAttribute.#ctor(Network.Infrastructure.EServerConnectionState,Network.Protocol.EPacket)
    arguments:
    - type: Network.Infrastructure.EServerConnectionState
      value: 1
    - type: Network.Protocol.EPacket
      value: 4
- uid: Network.Infrastructure.ConnectionServer.ReceiveSyncPacket(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  commentId: M:Network.Infrastructure.ConnectionServer.ReceiveSyncPacket(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  id: ReceiveSyncPacket(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  parent: Network.Infrastructure.ConnectionServer
  langs:
  - csharp
  - vb
  name: ReceiveSyncPacket(ConnectionBase, Packet)
  nameWithType: ConnectionServer.ReceiveSyncPacket(ConnectionBase, Packet)
  fullName: Network.Infrastructure.ConnectionServer.ReceiveSyncPacket(Network.Infrastructure.ConnectionBase, Network.Protocol.Packet)
  type: Method
  source:
    remote:
      path: source/Network/Infrastructure/ConnectionServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ReceiveSyncPacket
    path: ../source/Network/Infrastructure/ConnectionServer.cs
    startLine: 133
  assemblies:
  - Network
  namespace: Network.Infrastructure
  syntax:
    content: >-
      [ConnectionServerPacketHandler(EServerConnectionState.Ready, EPacket.Sync)]

      void ReceiveSyncPacket(ConnectionBase connection, Packet packet)
    parameters:
    - id: connection
      type: Network.Infrastructure.ConnectionBase
    - id: packet
      type: Network.Protocol.Packet
    content.vb: >-
      <ConnectionServerPacketHandler(EServerConnectionState.Ready, EPacket.Sync)>

      Sub ReceiveSyncPacket(connection As ConnectionBase, packet As Packet)
  overload: Network.Infrastructure.ConnectionServer.ReceiveSyncPacket*
  attributes:
  - type: Network.Infrastructure.ConnectionServerPacketHandlerAttribute
    ctor: Network.Infrastructure.ConnectionServerPacketHandlerAttribute.#ctor(Network.Infrastructure.EServerConnectionState,Network.Protocol.EPacket)
    arguments:
    - type: Network.Infrastructure.EServerConnectionState
      value: 2
    - type: Network.Protocol.EPacket
      value: 9
- uid: Network.Infrastructure.ConnectionServer.ReceiveClientKeepAlive(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  commentId: M:Network.Infrastructure.ConnectionServer.ReceiveClientKeepAlive(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  id: ReceiveClientKeepAlive(Network.Infrastructure.ConnectionBase,Network.Protocol.Packet)
  parent: Network.Infrastructure.ConnectionServer
  langs:
  - csharp
  - vb
  name: ReceiveClientKeepAlive(ConnectionBase, Packet)
  nameWithType: ConnectionServer.ReceiveClientKeepAlive(ConnectionBase, Packet)
  fullName: Network.Infrastructure.ConnectionServer.ReceiveClientKeepAlive(Network.Infrastructure.ConnectionBase, Network.Protocol.Packet)
  type: Method
  source:
    remote:
      path: source/Network/Infrastructure/ConnectionServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ReceiveClientKeepAlive
    path: ../source/Network/Infrastructure/ConnectionServer.cs
    startLine: 149
  assemblies:
  - Network
  namespace: Network.Infrastructure
  syntax:
    content: >-
      [ConnectionServerPacketHandler(EServerConnectionState.Ready, EPacket.KeepAlive)]

      void ReceiveClientKeepAlive(ConnectionBase connection, Packet packet)
    parameters:
    - id: connection
      type: Network.Infrastructure.ConnectionBase
    - id: packet
      type: Network.Protocol.Packet
    content.vb: >-
      <ConnectionServerPacketHandler(EServerConnectionState.Ready, EPacket.KeepAlive)>

      Sub ReceiveClientKeepAlive(connection As ConnectionBase, packet As Packet)
  overload: Network.Infrastructure.ConnectionServer.ReceiveClientKeepAlive*
  attributes:
  - type: Network.Infrastructure.ConnectionServerPacketHandlerAttribute
    ctor: Network.Infrastructure.ConnectionServerPacketHandlerAttribute.#ctor(Network.Infrastructure.EServerConnectionState,Network.Protocol.EPacket)
    arguments:
    - type: Network.Infrastructure.EServerConnectionState
      value: 2
    - type: Network.Protocol.EPacket
      value: 12
references:
- uid: Network.Infrastructure
  commentId: N:Network.Infrastructure
  name: Network.Infrastructure
  nameWithType: Network.Infrastructure
  fullName: Network.Infrastructure
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Network.Infrastructure.ConnectionBase
  commentId: T:Network.Infrastructure.ConnectionBase
  parent: Network.Infrastructure
  name: ConnectionBase
  nameWithType: ConnectionBase
  fullName: Network.Infrastructure.ConnectionBase
- uid: Network.Infrastructure.ConnectionBase.Dispatcher
  commentId: F:Network.Infrastructure.ConnectionBase.Dispatcher
  parent: Network.Infrastructure.ConnectionBase
  name: Dispatcher
  nameWithType: ConnectionBase.Dispatcher
  fullName: Network.Infrastructure.ConnectionBase.Dispatcher
- uid: Network.Infrastructure.ConnectionBase.GameStatePersistence
  commentId: P:Network.Infrastructure.ConnectionBase.GameStatePersistence
  parent: Network.Infrastructure.ConnectionBase
  name: GameStatePersistence
  nameWithType: ConnectionBase.GameStatePersistence
  fullName: Network.Infrastructure.ConnectionBase.GameStatePersistence
- uid: Network.Infrastructure.ConnectionBase.Send(Network.Protocol.Packet)
  commentId: M:Network.Infrastructure.ConnectionBase.Send(Network.Protocol.Packet)
  parent: Network.Infrastructure.ConnectionBase
  name: Send(Packet)
  nameWithType: ConnectionBase.Send(Packet)
  fullName: Network.Infrastructure.ConnectionBase.Send(Network.Protocol.Packet)
  spec.csharp:
  - uid: Network.Infrastructure.ConnectionBase.Send(Network.Protocol.Packet)
    name: Send
    nameWithType: ConnectionBase.Send
    fullName: Network.Infrastructure.ConnectionBase.Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: Network.Protocol.Packet
    name: Packet
    nameWithType: Packet
    fullName: Network.Protocol.Packet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Network.Infrastructure.ConnectionBase.Send(Network.Protocol.Packet)
    name: Send
    nameWithType: ConnectionBase.Send
    fullName: Network.Infrastructure.ConnectionBase.Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: Network.Protocol.Packet
    name: Packet
    nameWithType: Packet
    fullName: Network.Protocol.Packet
  - name: )
    nameWithType: )
    fullName: )
- uid: Network.Infrastructure.ConnectionBase.SendFragmented(Network.Protocol.Packet)
  commentId: M:Network.Infrastructure.ConnectionBase.SendFragmented(Network.Protocol.Packet)
  parent: Network.Infrastructure.ConnectionBase
  name: SendFragmented(Packet)
  nameWithType: ConnectionBase.SendFragmented(Packet)
  fullName: Network.Infrastructure.ConnectionBase.SendFragmented(Network.Protocol.Packet)
  spec.csharp:
  - uid: Network.Infrastructure.ConnectionBase.SendFragmented(Network.Protocol.Packet)
    name: SendFragmented
    nameWithType: ConnectionBase.SendFragmented
    fullName: Network.Infrastructure.ConnectionBase.SendFragmented
  - name: (
    nameWithType: (
    fullName: (
  - uid: Network.Protocol.Packet
    name: Packet
    nameWithType: Packet
    fullName: Network.Protocol.Packet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Network.Infrastructure.ConnectionBase.SendFragmented(Network.Protocol.Packet)
    name: SendFragmented
    nameWithType: ConnectionBase.SendFragmented
    fullName: Network.Infrastructure.ConnectionBase.SendFragmented
  - name: (
    nameWithType: (
    fullName: (
  - uid: Network.Protocol.Packet
    name: Packet
    nameWithType: Packet
    fullName: Network.Protocol.Packet
  - name: )
    nameWithType: )
    fullName: )
- uid: Network.Infrastructure.ConnectionBase.Receive(System.ArraySegment{System.Byte})
  commentId: M:Network.Infrastructure.ConnectionBase.Receive(System.ArraySegment{System.Byte})
  parent: Network.Infrastructure.ConnectionBase
  isExternal: true
  name: Receive(ArraySegment<Byte>)
  nameWithType: ConnectionBase.Receive(ArraySegment<Byte>)
  fullName: Network.Infrastructure.ConnectionBase.Receive(System.ArraySegment<System.Byte>)
  nameWithType.vb: ConnectionBase.Receive(ArraySegment(Of Byte))
  fullName.vb: Network.Infrastructure.ConnectionBase.Receive(System.ArraySegment(Of System.Byte))
  name.vb: Receive(ArraySegment(Of Byte))
  spec.csharp:
  - uid: Network.Infrastructure.ConnectionBase.Receive(System.ArraySegment{System.Byte})
    name: Receive
    nameWithType: ConnectionBase.Receive
    fullName: Network.Infrastructure.ConnectionBase.Receive
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Network.Infrastructure.ConnectionBase.Receive(System.ArraySegment{System.Byte})
    name: Receive
    nameWithType: ConnectionBase.Receive
    fullName: Network.Infrastructure.ConnectionBase.Receive
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Network.Infrastructure.ConnectionBase.Network
  commentId: P:Network.Infrastructure.ConnectionBase.Network
  parent: Network.Infrastructure.ConnectionBase
  name: Network
  nameWithType: ConnectionBase.Network
  fullName: Network.Infrastructure.ConnectionBase.Network
- uid: Network.Infrastructure.ConnectionBase.Latency
  commentId: F:Network.Infrastructure.ConnectionBase.Latency
  parent: Network.Infrastructure.ConnectionBase
  name: Latency
  nameWithType: ConnectionBase.Latency
  fullName: Network.Infrastructure.ConnectionBase.Latency
- uid: Network.Infrastructure.ConnectionBase.ToString
  commentId: M:Network.Infrastructure.ConnectionBase.ToString
  parent: Network.Infrastructure.ConnectionBase
  name: ToString()
  nameWithType: ConnectionBase.ToString()
  fullName: Network.Infrastructure.ConnectionBase.ToString()
  spec.csharp:
  - uid: Network.Infrastructure.ConnectionBase.ToString
    name: ToString
    nameWithType: ConnectionBase.ToString
    fullName: Network.Infrastructure.ConnectionBase.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Network.Infrastructure.ConnectionBase.ToString
    name: ToString
    nameWithType: ConnectionBase.ToString
    fullName: Network.Infrastructure.ConnectionBase.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Network.Infrastructure.ConnectionBase.m_Stream
  commentId: F:Network.Infrastructure.ConnectionBase.m_Stream
  parent: Network.Infrastructure.ConnectionBase
  name: m_Stream
  nameWithType: ConnectionBase.m_Stream
  fullName: Network.Infrastructure.ConnectionBase.m_Stream
- uid: Network.Infrastructure.ConnectionBase.m_PackageReader
  commentId: F:Network.Infrastructure.ConnectionBase.m_PackageReader
  parent: Network.Infrastructure.ConnectionBase
  name: m_PackageReader
  nameWithType: ConnectionBase.m_PackageReader
  fullName: Network.Infrastructure.ConnectionBase.m_PackageReader
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NLog.Logger
  commentId: T:NLog.Logger
  parent: NLog
  isExternal: true
  name: Logger
  nameWithType: Logger
  fullName: NLog.Logger
- uid: NLog
  commentId: N:NLog
  isExternal: true
  name: NLog
  nameWithType: NLog
  fullName: NLog
- uid: Network.Infrastructure.ConnectionServerSM
  commentId: T:Network.Infrastructure.ConnectionServerSM
  parent: Network.Infrastructure
  name: ConnectionServerSM
  nameWithType: ConnectionServerSM
  fullName: Network.Infrastructure.ConnectionServerSM
- uid: Network.Infrastructure.ISaveData
  commentId: T:Network.Infrastructure.ISaveData
  parent: Network.Infrastructure
  name: ISaveData
  nameWithType: ISaveData
  fullName: Network.Infrastructure.ISaveData
- uid: Network.Infrastructure.ConnectionServer.#ctor*
  commentId: Overload:Network.Infrastructure.ConnectionServer.#ctor
  name: ConnectionServer
  nameWithType: ConnectionServer.ConnectionServer
  fullName: Network.Infrastructure.ConnectionServer.ConnectionServer
- uid: Network.Infrastructure.INetworkConnection
  commentId: T:Network.Infrastructure.INetworkConnection
  parent: Network.Infrastructure
  name: INetworkConnection
  nameWithType: INetworkConnection
  fullName: Network.Infrastructure.INetworkConnection
- uid: Network.Infrastructure.IGameStatePersistence
  commentId: T:Network.Infrastructure.IGameStatePersistence
  parent: Network.Infrastructure
  name: IGameStatePersistence
  nameWithType: IGameStatePersistence
  fullName: Network.Infrastructure.IGameStatePersistence
- uid: Network.Infrastructure.ConnectionBase.State
  commentId: P:Network.Infrastructure.ConnectionBase.State
  parent: Network.Infrastructure.ConnectionBase
  name: State
  nameWithType: ConnectionBase.State
  fullName: Network.Infrastructure.ConnectionBase.State
- uid: Network.Infrastructure.ConnectionServer.State*
  commentId: Overload:Network.Infrastructure.ConnectionServer.State
  name: State
  nameWithType: ConnectionServer.State
  fullName: Network.Infrastructure.ConnectionServer.State
- uid: System.Enum
  commentId: T:System.Enum
  parent: System
  isExternal: true
  name: Enum
  nameWithType: Enum
  fullName: System.Enum
- uid: System.Action{Network.Infrastructure.ConnectionServer}
  commentId: T:System.Action{Network.Infrastructure.ConnectionServer}
  parent: System
  definition: System.Action`1
  name: Action<ConnectionServer>
  nameWithType: Action<ConnectionServer>
  fullName: System.Action<Network.Infrastructure.ConnectionServer>
  nameWithType.vb: Action(Of ConnectionServer)
  fullName.vb: System.Action(Of Network.Infrastructure.ConnectionServer)
  name.vb: Action(Of ConnectionServer)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Network.Infrastructure.ConnectionServer
    name: ConnectionServer
    nameWithType: ConnectionServer
    fullName: Network.Infrastructure.ConnectionServer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Network.Infrastructure.ConnectionServer
    name: ConnectionServer
    nameWithType: ConnectionServer
    fullName: Network.Infrastructure.ConnectionServer
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Network.Infrastructure.ConnectionServer.Finalize*
  commentId: Overload:Network.Infrastructure.ConnectionServer.Finalize
  name: Finalize
  nameWithType: ConnectionServer.Finalize
  fullName: Network.Infrastructure.ConnectionServer.Finalize
- uid: Network.Infrastructure.ConnectionServer.SendWorldData*
  commentId: Overload:Network.Infrastructure.ConnectionServer.SendWorldData
  name: SendWorldData
  nameWithType: ConnectionServer.SendWorldData
  fullName: Network.Infrastructure.ConnectionServer.SendWorldData
- uid: Network.Infrastructure.ConnectionBase.Disconnect(Network.Infrastructure.EDisconnectReason)
  commentId: M:Network.Infrastructure.ConnectionBase.Disconnect(Network.Infrastructure.EDisconnectReason)
  parent: Network.Infrastructure.ConnectionBase
  name: Disconnect(EDisconnectReason)
  nameWithType: ConnectionBase.Disconnect(EDisconnectReason)
  fullName: Network.Infrastructure.ConnectionBase.Disconnect(Network.Infrastructure.EDisconnectReason)
  spec.csharp:
  - uid: Network.Infrastructure.ConnectionBase.Disconnect(Network.Infrastructure.EDisconnectReason)
    name: Disconnect
    nameWithType: ConnectionBase.Disconnect
    fullName: Network.Infrastructure.ConnectionBase.Disconnect
  - name: (
    nameWithType: (
    fullName: (
  - uid: Network.Infrastructure.EDisconnectReason
    name: EDisconnectReason
    nameWithType: EDisconnectReason
    fullName: Network.Infrastructure.EDisconnectReason
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Network.Infrastructure.ConnectionBase.Disconnect(Network.Infrastructure.EDisconnectReason)
    name: Disconnect
    nameWithType: ConnectionBase.Disconnect
    fullName: Network.Infrastructure.ConnectionBase.Disconnect
  - name: (
    nameWithType: (
    fullName: (
  - uid: Network.Infrastructure.EDisconnectReason
    name: EDisconnectReason
    nameWithType: EDisconnectReason
    fullName: Network.Infrastructure.EDisconnectReason
  - name: )
    nameWithType: )
    fullName: )
- uid: Network.Infrastructure.ConnectionServer.Disconnect*
  commentId: Overload:Network.Infrastructure.ConnectionServer.Disconnect
  name: Disconnect
  nameWithType: ConnectionServer.Disconnect
  fullName: Network.Infrastructure.ConnectionServer.Disconnect
- uid: Network.Infrastructure.EDisconnectReason
  commentId: T:Network.Infrastructure.EDisconnectReason
  parent: Network.Infrastructure
  name: EDisconnectReason
  nameWithType: EDisconnectReason
  fullName: Network.Infrastructure.EDisconnectReason
- uid: Network.Infrastructure.ConnectionServer.closeConnection*
  commentId: Overload:Network.Infrastructure.ConnectionServer.closeConnection
  name: closeConnection
  nameWithType: ConnectionServer.closeConnection
  fullName: Network.Infrastructure.ConnectionServer.closeConnection
- uid: Network.Infrastructure.ConnectionServer.onConnected*
  commentId: Overload:Network.Infrastructure.ConnectionServer.onConnected
  name: onConnected
  nameWithType: ConnectionServer.onConnected
  fullName: Network.Infrastructure.ConnectionServer.onConnected
- uid: Network.Infrastructure.ConnectionServer.ReceiveClientHello*
  commentId: Overload:Network.Infrastructure.ConnectionServer.ReceiveClientHello
  name: ReceiveClientHello
  nameWithType: ConnectionServer.ReceiveClientHello
  fullName: Network.Infrastructure.ConnectionServer.ReceiveClientHello
- uid: Network.Protocol.Packet
  commentId: T:Network.Protocol.Packet
  parent: Network.Protocol
  name: Packet
  nameWithType: Packet
  fullName: Network.Protocol.Packet
- uid: Network.Protocol
  commentId: N:Network.Protocol
  name: Network.Protocol
  nameWithType: Network.Protocol
  fullName: Network.Protocol
- uid: Network.Infrastructure.ConnectionServer.SendRequestClientInfo*
  commentId: Overload:Network.Infrastructure.ConnectionServer.SendRequestClientInfo
  name: SendRequestClientInfo
  nameWithType: ConnectionServer.SendRequestClientInfo
  fullName: Network.Infrastructure.ConnectionServer.SendRequestClientInfo
- uid: Network.Infrastructure.ConnectionServer.ReceiveClientInfo*
  commentId: Overload:Network.Infrastructure.ConnectionServer.ReceiveClientInfo
  name: ReceiveClientInfo
  nameWithType: ConnectionServer.ReceiveClientInfo
  fullName: Network.Infrastructure.ConnectionServer.ReceiveClientInfo
- uid: Network.Infrastructure.ConnectionServer.SendJoinRequestAccepted*
  commentId: Overload:Network.Infrastructure.ConnectionServer.SendJoinRequestAccepted
  name: SendJoinRequestAccepted
  nameWithType: ConnectionServer.SendJoinRequestAccepted
  fullName: Network.Infrastructure.ConnectionServer.SendJoinRequestAccepted
- uid: Network.Infrastructure.ConnectionServer.ReceiveClientJoined*
  commentId: Overload:Network.Infrastructure.ConnectionServer.ReceiveClientJoined
  name: ReceiveClientJoined
  nameWithType: ConnectionServer.ReceiveClientJoined
  fullName: Network.Infrastructure.ConnectionServer.ReceiveClientJoined
- uid: Network.Infrastructure.ConnectionServer.ReceiveSyncPacket*
  commentId: Overload:Network.Infrastructure.ConnectionServer.ReceiveSyncPacket
  name: ReceiveSyncPacket
  nameWithType: ConnectionServer.ReceiveSyncPacket
  fullName: Network.Infrastructure.ConnectionServer.ReceiveSyncPacket
- uid: Network.Infrastructure.ConnectionServer.ReceiveClientKeepAlive*
  commentId: Overload:Network.Infrastructure.ConnectionServer.ReceiveClientKeepAlive
  name: ReceiveClientKeepAlive
  nameWithType: ConnectionServer.ReceiveClientKeepAlive
  fullName: Network.Infrastructure.ConnectionServer.ReceiveClientKeepAlive
