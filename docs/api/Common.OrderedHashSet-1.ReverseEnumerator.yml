### YamlMime:ManagedReference
items:
- uid: Common.OrderedHashSet`1.ReverseEnumerator
  commentId: T:Common.OrderedHashSet`1.ReverseEnumerator
  id: OrderedHashSet`1.ReverseEnumerator
  parent: Common
  children:
  - Common.OrderedHashSet`1.ReverseEnumerator.#ctor(Common.OrderedHashSet{`0})
  - Common.OrderedHashSet`1.ReverseEnumerator.#ctor(Common.OrderedHashSet{`0},System.Int32)
  - Common.OrderedHashSet`1.ReverseEnumerator.Current
  - Common.OrderedHashSet`1.ReverseEnumerator.m_index
  - Common.OrderedHashSet`1.ReverseEnumerator.m_set
  - Common.OrderedHashSet`1.ReverseEnumerator.m_version
  - Common.OrderedHashSet`1.ReverseEnumerator.MoveNext
  - Common.OrderedHashSet`1.ReverseEnumerator.System#Collections#IEnumerator#Current
  - Common.OrderedHashSet`1.ReverseEnumerator.System#Collections#IEnumerator#Reset
  - Common.OrderedHashSet`1.ReverseEnumerator.System#IDisposable#Dispose
  langs:
  - csharp
  - vb
  name: OrderedHashSet<T>.ReverseEnumerator
  nameWithType: OrderedHashSet<T>.ReverseEnumerator
  fullName: Common.OrderedHashSet<T>.ReverseEnumerator
  type: Struct
  source:
    remote:
      path: source/Common/OrderedHashSet.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ReverseEnumerator
    path: ../source/Common/OrderedHashSet.cs
    startLine: 382
  assemblies:
  - Common
  namespace: Common
  syntax:
    content: >-
      [Serializable]

      public struct ReverseEnumerator : IEnumerator<T>, IDisposable, IEnumerator
    content.vb: >-
      <Serializable>

      Public Structure ReverseEnumerator

          Implements IEnumerator(Of T), IDisposable, IEnumerator
  implements:
  - System.Collections.Generic.IEnumerator{{T}}
  - System.IDisposable
  - System.Collections.IEnumerator
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  nameWithType.vb: OrderedHashSet(Of T).ReverseEnumerator
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
  fullName.vb: Common.OrderedHashSet(Of T).ReverseEnumerator
  name.vb: OrderedHashSet(Of T).ReverseEnumerator
- uid: Common.OrderedHashSet`1.ReverseEnumerator.m_set
  commentId: F:Common.OrderedHashSet`1.ReverseEnumerator.m_set
  id: m_set
  parent: Common.OrderedHashSet`1.ReverseEnumerator
  langs:
  - csharp
  - vb
  name: m_set
  nameWithType: OrderedHashSet<T>.ReverseEnumerator.m_set
  fullName: Common.OrderedHashSet<T>.ReverseEnumerator.m_set
  type: Field
  source:
    remote:
      path: source/Common/OrderedHashSet.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_set
    path: ../source/Common/OrderedHashSet.cs
    startLine: 385
  assemblies:
  - Common
  namespace: Common
  syntax:
    content: OrderedHashSet<T> m_set
    return:
      type: Common.OrderedHashSet`1
    content.vb: m_set As OrderedHashSet(Of T)
  nameWithType.vb: OrderedHashSet(Of T).ReverseEnumerator.m_set
  fullName.vb: Common.OrderedHashSet(Of T).ReverseEnumerator.m_set
- uid: Common.OrderedHashSet`1.ReverseEnumerator.m_index
  commentId: F:Common.OrderedHashSet`1.ReverseEnumerator.m_index
  id: m_index
  parent: Common.OrderedHashSet`1.ReverseEnumerator
  langs:
  - csharp
  - vb
  name: m_index
  nameWithType: OrderedHashSet<T>.ReverseEnumerator.m_index
  fullName: Common.OrderedHashSet<T>.ReverseEnumerator.m_index
  type: Field
  source:
    remote:
      path: source/Common/OrderedHashSet.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_index
    path: ../source/Common/OrderedHashSet.cs
    startLine: 386
  assemblies:
  - Common
  namespace: Common
  syntax:
    content: int m_index
    return:
      type: System.Int32
    content.vb: m_index As Integer
  nameWithType.vb: OrderedHashSet(Of T).ReverseEnumerator.m_index
  fullName.vb: Common.OrderedHashSet(Of T).ReverseEnumerator.m_index
- uid: Common.OrderedHashSet`1.ReverseEnumerator.m_version
  commentId: F:Common.OrderedHashSet`1.ReverseEnumerator.m_version
  id: m_version
  parent: Common.OrderedHashSet`1.ReverseEnumerator
  langs:
  - csharp
  - vb
  name: m_version
  nameWithType: OrderedHashSet<T>.ReverseEnumerator.m_version
  fullName: Common.OrderedHashSet<T>.ReverseEnumerator.m_version
  type: Field
  source:
    remote:
      path: source/Common/OrderedHashSet.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_version
    path: ../source/Common/OrderedHashSet.cs
    startLine: 387
  assemblies:
  - Common
  namespace: Common
  syntax:
    content: int m_version
    return:
      type: System.Int32
    content.vb: m_version As Integer
  nameWithType.vb: OrderedHashSet(Of T).ReverseEnumerator.m_version
  fullName.vb: Common.OrderedHashSet(Of T).ReverseEnumerator.m_version
- uid: Common.OrderedHashSet`1.ReverseEnumerator.Current
  commentId: P:Common.OrderedHashSet`1.ReverseEnumerator.Current
  id: Current
  parent: Common.OrderedHashSet`1.ReverseEnumerator
  langs:
  - csharp
  - vb
  name: Current
  nameWithType: OrderedHashSet<T>.ReverseEnumerator.Current
  fullName: Common.OrderedHashSet<T>.ReverseEnumerator.Current
  type: Property
  source:
    remote:
      path: source/Common/OrderedHashSet.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Current
    path: ../source/Common/OrderedHashSet.cs
    startLine: 389
  assemblies:
  - Common
  namespace: Common
  syntax:
    content: public T Current { get; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public ReadOnly Property Current As T
  overload: Common.OrderedHashSet`1.ReverseEnumerator.Current*
  implements:
  - System.Collections.Generic.IEnumerator{{T}}.Current
  nameWithType.vb: OrderedHashSet(Of T).ReverseEnumerator.Current
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Common.OrderedHashSet(Of T).ReverseEnumerator.Current
- uid: Common.OrderedHashSet`1.ReverseEnumerator.#ctor(Common.OrderedHashSet{`0})
  commentId: M:Common.OrderedHashSet`1.ReverseEnumerator.#ctor(Common.OrderedHashSet{`0})
  id: '#ctor(Common.OrderedHashSet{`0})'
  parent: Common.OrderedHashSet`1.ReverseEnumerator
  langs:
  - csharp
  - vb
  name: ReverseEnumerator(OrderedHashSet<T>)
  nameWithType: OrderedHashSet<T>.ReverseEnumerator.ReverseEnumerator(OrderedHashSet<T>)
  fullName: Common.OrderedHashSet<T>.ReverseEnumerator.ReverseEnumerator(Common.OrderedHashSet<T>)
  type: Constructor
  source:
    remote:
      path: source/Common/OrderedHashSet.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: .ctor
    path: ../source/Common/OrderedHashSet.cs
    startLine: 391
  assemblies:
  - Common
  namespace: Common
  syntax:
    content: ReverseEnumerator(OrderedHashSet<T> set)
    parameters:
    - id: set
      type: Common.OrderedHashSet`1
    content.vb: Sub New(set As OrderedHashSet(Of T))
  overload: Common.OrderedHashSet`1.ReverseEnumerator.#ctor*
  nameWithType.vb: OrderedHashSet(Of T).ReverseEnumerator.ReverseEnumerator(OrderedHashSet(Of T))
  fullName.vb: Common.OrderedHashSet(Of T).ReverseEnumerator.ReverseEnumerator(Common.OrderedHashSet(Of T))
  name.vb: ReverseEnumerator(OrderedHashSet(Of T))
- uid: Common.OrderedHashSet`1.ReverseEnumerator.#ctor(Common.OrderedHashSet{`0},System.Int32)
  commentId: M:Common.OrderedHashSet`1.ReverseEnumerator.#ctor(Common.OrderedHashSet{`0},System.Int32)
  id: '#ctor(Common.OrderedHashSet{`0},System.Int32)'
  parent: Common.OrderedHashSet`1.ReverseEnumerator
  langs:
  - csharp
  - vb
  name: ReverseEnumerator(OrderedHashSet<T>, Int32)
  nameWithType: OrderedHashSet<T>.ReverseEnumerator.ReverseEnumerator(OrderedHashSet<T>, Int32)
  fullName: Common.OrderedHashSet<T>.ReverseEnumerator.ReverseEnumerator(Common.OrderedHashSet<T>, System.Int32)
  type: Constructor
  source:
    remote:
      path: source/Common/OrderedHashSet.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: .ctor
    path: ../source/Common/OrderedHashSet.cs
    startLine: 395
  assemblies:
  - Common
  namespace: Common
  syntax:
    content: ReverseEnumerator(OrderedHashSet<T> set, int startIndex)
    parameters:
    - id: set
      type: Common.OrderedHashSet`1
    - id: startIndex
      type: System.Int32
    content.vb: Sub New(set As OrderedHashSet(Of T), startIndex As Integer)
  overload: Common.OrderedHashSet`1.ReverseEnumerator.#ctor*
  nameWithType.vb: OrderedHashSet(Of T).ReverseEnumerator.ReverseEnumerator(OrderedHashSet(Of T), Int32)
  fullName.vb: Common.OrderedHashSet(Of T).ReverseEnumerator.ReverseEnumerator(Common.OrderedHashSet(Of T), System.Int32)
  name.vb: ReverseEnumerator(OrderedHashSet(Of T), Int32)
- uid: Common.OrderedHashSet`1.ReverseEnumerator.MoveNext
  commentId: M:Common.OrderedHashSet`1.ReverseEnumerator.MoveNext
  id: MoveNext
  parent: Common.OrderedHashSet`1.ReverseEnumerator
  langs:
  - csharp
  - vb
  name: MoveNext()
  nameWithType: OrderedHashSet<T>.ReverseEnumerator.MoveNext()
  fullName: Common.OrderedHashSet<T>.ReverseEnumerator.MoveNext()
  type: Method
  source:
    remote:
      path: source/Common/OrderedHashSet.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: MoveNext
    path: ../source/Common/OrderedHashSet.cs
    startLine: 403
  assemblies:
  - Common
  namespace: Common
  syntax:
    content: public bool MoveNext()
    return:
      type: System.Boolean
    content.vb: Public Function MoveNext As Boolean
  overload: Common.OrderedHashSet`1.ReverseEnumerator.MoveNext*
  implements:
  - System.Collections.IEnumerator.MoveNext
  nameWithType.vb: OrderedHashSet(Of T).ReverseEnumerator.MoveNext()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Common.OrderedHashSet(Of T).ReverseEnumerator.MoveNext()
- uid: Common.OrderedHashSet`1.ReverseEnumerator.System#Collections#IEnumerator#Current
  commentId: P:Common.OrderedHashSet`1.ReverseEnumerator.System#Collections#IEnumerator#Current
  id: System#Collections#IEnumerator#Current
  isEii: true
  parent: Common.OrderedHashSet`1.ReverseEnumerator
  langs:
  - csharp
  - vb
  name: IEnumerator.Current
  nameWithType: OrderedHashSet<T>.ReverseEnumerator.IEnumerator.Current
  fullName: Common.OrderedHashSet<T>.ReverseEnumerator.System.Collections.IEnumerator.Current
  type: Property
  source:
    remote:
      path: source/Common/OrderedHashSet.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: System.Collections.IEnumerator.Current
    path: ../source/Common/OrderedHashSet.cs
    startLine: 421
  assemblies:
  - Common
  namespace: Common
  syntax:
    content: object IEnumerator.Current { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: ReadOnly WriteOnly Property System.Collections.IEnumerator.Current As Object Implements IEnumerator.Current
  overload: Common.OrderedHashSet`1.ReverseEnumerator.System#Collections#IEnumerator#Current*
  implements:
  - System.Collections.IEnumerator.Current
  nameWithType.vb: OrderedHashSet(Of T).ReverseEnumerator.System.Collections.IEnumerator.Current
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Common.OrderedHashSet(Of T).ReverseEnumerator.System.Collections.IEnumerator.Current
  name.vb: System.Collections.IEnumerator.Current
- uid: Common.OrderedHashSet`1.ReverseEnumerator.System#IDisposable#Dispose
  commentId: M:Common.OrderedHashSet`1.ReverseEnumerator.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: Common.OrderedHashSet`1.ReverseEnumerator
  langs:
  - csharp
  - vb
  name: IDisposable.Dispose()
  nameWithType: OrderedHashSet<T>.ReverseEnumerator.IDisposable.Dispose()
  fullName: Common.OrderedHashSet<T>.ReverseEnumerator.System.IDisposable.Dispose()
  type: Method
  source:
    remote:
      path: source/Common/OrderedHashSet.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: System.IDisposable.Dispose
    path: ../source/Common/OrderedHashSet.cs
    startLine: 434
  assemblies:
  - Common
  namespace: Common
  syntax:
    content: void IDisposable.Dispose()
    content.vb: Sub System.IDisposable.Dispose Implements IDisposable.Dispose
  overload: Common.OrderedHashSet`1.ReverseEnumerator.System#IDisposable#Dispose*
  implements:
  - System.IDisposable.Dispose
  nameWithType.vb: OrderedHashSet(Of T).ReverseEnumerator.System.IDisposable.Dispose()
  fullName.vb: Common.OrderedHashSet(Of T).ReverseEnumerator.System.IDisposable.Dispose()
  name.vb: System.IDisposable.Dispose()
- uid: Common.OrderedHashSet`1.ReverseEnumerator.System#Collections#IEnumerator#Reset
  commentId: M:Common.OrderedHashSet`1.ReverseEnumerator.System#Collections#IEnumerator#Reset
  id: System#Collections#IEnumerator#Reset
  isEii: true
  parent: Common.OrderedHashSet`1.ReverseEnumerator
  langs:
  - csharp
  - vb
  name: IEnumerator.Reset()
  nameWithType: OrderedHashSet<T>.ReverseEnumerator.IEnumerator.Reset()
  fullName: Common.OrderedHashSet<T>.ReverseEnumerator.System.Collections.IEnumerator.Reset()
  type: Method
  source:
    remote:
      path: source/Common/OrderedHashSet.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: System.Collections.IEnumerator.Reset
    path: ../source/Common/OrderedHashSet.cs
    startLine: 438
  assemblies:
  - Common
  namespace: Common
  syntax:
    content: void IEnumerator.Reset()
    content.vb: Sub System.Collections.IEnumerator.Reset Implements IEnumerator.Reset
  overload: Common.OrderedHashSet`1.ReverseEnumerator.System#Collections#IEnumerator#Reset*
  implements:
  - System.Collections.IEnumerator.Reset
  nameWithType.vb: OrderedHashSet(Of T).ReverseEnumerator.System.Collections.IEnumerator.Reset()
  fullName.vb: Common.OrderedHashSet(Of T).ReverseEnumerator.System.Collections.IEnumerator.Reset()
  name.vb: System.Collections.IEnumerator.Reset()
references:
- uid: Common
  commentId: N:Common
  name: Common
  nameWithType: Common
  fullName: Common
- uid: System.Collections.Generic.IEnumerator{{T}}
  commentId: T:System.Collections.Generic.IEnumerator{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Common.OrderedHashSet`1
  commentId: T:Common.OrderedHashSet`1
  parent: Common
  name: OrderedHashSet<T>
  nameWithType: OrderedHashSet<T>
  fullName: Common.OrderedHashSet<T>
  nameWithType.vb: OrderedHashSet(Of T)
  fullName.vb: Common.OrderedHashSet(Of T)
  name.vb: OrderedHashSet(Of T)
  spec.csharp:
  - uid: Common.OrderedHashSet`1
    name: OrderedHashSet
    nameWithType: OrderedHashSet
    fullName: Common.OrderedHashSet
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Common.OrderedHashSet`1
    name: OrderedHashSet
    nameWithType: OrderedHashSet
    fullName: Common.OrderedHashSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Common.OrderedHashSet`1.ReverseEnumerator.Current*
  commentId: Overload:Common.OrderedHashSet`1.ReverseEnumerator.Current
  name: Current
  nameWithType: OrderedHashSet<T>.ReverseEnumerator.Current
  fullName: Common.OrderedHashSet<T>.ReverseEnumerator.Current
  nameWithType.vb: OrderedHashSet(Of T).ReverseEnumerator.Current
  fullName.vb: Common.OrderedHashSet(Of T).ReverseEnumerator.Current
- uid: System.Collections.Generic.IEnumerator{{T}}.Current
  commentId: P:System.Collections.Generic.IEnumerator{`0}.Current
  parent: System.Collections.Generic.IEnumerator{{T}}
  definition: System.Collections.Generic.IEnumerator`1.Current
  name: Current
  nameWithType: IEnumerator<T>.Current
  fullName: System.Collections.Generic.IEnumerator<T>.Current
  nameWithType.vb: IEnumerator(Of T).Current
  fullName.vb: System.Collections.Generic.IEnumerator(Of T).Current
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.IEnumerator`1.Current
  commentId: P:System.Collections.Generic.IEnumerator`1.Current
  isExternal: true
  name: Current
  nameWithType: IEnumerator<T>.Current
  fullName: System.Collections.Generic.IEnumerator<T>.Current
  nameWithType.vb: IEnumerator(Of T).Current
  fullName.vb: System.Collections.Generic.IEnumerator(Of T).Current
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Common.OrderedHashSet`1.ReverseEnumerator.#ctor*
  commentId: Overload:Common.OrderedHashSet`1.ReverseEnumerator.#ctor
  name: ReverseEnumerator
  nameWithType: OrderedHashSet<T>.ReverseEnumerator.ReverseEnumerator
  fullName: Common.OrderedHashSet<T>.ReverseEnumerator.ReverseEnumerator
  nameWithType.vb: OrderedHashSet(Of T).ReverseEnumerator.ReverseEnumerator
  fullName.vb: Common.OrderedHashSet(Of T).ReverseEnumerator.ReverseEnumerator
- uid: Common.OrderedHashSet`1.ReverseEnumerator.MoveNext*
  commentId: Overload:Common.OrderedHashSet`1.ReverseEnumerator.MoveNext
  name: MoveNext
  nameWithType: OrderedHashSet<T>.ReverseEnumerator.MoveNext
  fullName: Common.OrderedHashSet<T>.ReverseEnumerator.MoveNext
  nameWithType.vb: OrderedHashSet(Of T).ReverseEnumerator.MoveNext
  fullName.vb: Common.OrderedHashSet(Of T).ReverseEnumerator.MoveNext
- uid: System.Collections.IEnumerator.MoveNext
  commentId: M:System.Collections.IEnumerator.MoveNext
  parent: System.Collections.IEnumerator
  isExternal: true
  name: MoveNext()
  nameWithType: IEnumerator.MoveNext()
  fullName: System.Collections.IEnumerator.MoveNext()
  spec.csharp:
  - uid: System.Collections.IEnumerator.MoveNext
    name: MoveNext
    nameWithType: IEnumerator.MoveNext
    fullName: System.Collections.IEnumerator.MoveNext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerator.MoveNext
    name: MoveNext
    nameWithType: IEnumerator.MoveNext
    fullName: System.Collections.IEnumerator.MoveNext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Common.OrderedHashSet`1.ReverseEnumerator.System#Collections#IEnumerator#Current*
  commentId: Overload:Common.OrderedHashSet`1.ReverseEnumerator.System#Collections#IEnumerator#Current
  name: IEnumerator.Current
  nameWithType: OrderedHashSet<T>.ReverseEnumerator.IEnumerator.Current
  fullName: Common.OrderedHashSet<T>.ReverseEnumerator.System.Collections.IEnumerator.Current
  nameWithType.vb: OrderedHashSet(Of T).ReverseEnumerator.System.Collections.IEnumerator.Current
  fullName.vb: Common.OrderedHashSet(Of T).ReverseEnumerator.System.Collections.IEnumerator.Current
  name.vb: System.Collections.IEnumerator.Current
- uid: System.Collections.IEnumerator.Current
  commentId: P:System.Collections.IEnumerator.Current
  parent: System.Collections.IEnumerator
  isExternal: true
  name: Current
  nameWithType: IEnumerator.Current
  fullName: System.Collections.IEnumerator.Current
- uid: Common.OrderedHashSet`1.ReverseEnumerator.System#IDisposable#Dispose*
  commentId: Overload:Common.OrderedHashSet`1.ReverseEnumerator.System#IDisposable#Dispose
  name: IDisposable.Dispose
  nameWithType: OrderedHashSet<T>.ReverseEnumerator.IDisposable.Dispose
  fullName: Common.OrderedHashSet<T>.ReverseEnumerator.System.IDisposable.Dispose
  nameWithType.vb: OrderedHashSet(Of T).ReverseEnumerator.System.IDisposable.Dispose
  fullName.vb: Common.OrderedHashSet(Of T).ReverseEnumerator.System.IDisposable.Dispose
  name.vb: System.IDisposable.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Common.OrderedHashSet`1.ReverseEnumerator.System#Collections#IEnumerator#Reset*
  commentId: Overload:Common.OrderedHashSet`1.ReverseEnumerator.System#Collections#IEnumerator#Reset
  name: IEnumerator.Reset
  nameWithType: OrderedHashSet<T>.ReverseEnumerator.IEnumerator.Reset
  fullName: Common.OrderedHashSet<T>.ReverseEnumerator.System.Collections.IEnumerator.Reset
  nameWithType.vb: OrderedHashSet(Of T).ReverseEnumerator.System.Collections.IEnumerator.Reset
  fullName.vb: Common.OrderedHashSet(Of T).ReverseEnumerator.System.Collections.IEnumerator.Reset
  name.vb: System.Collections.IEnumerator.Reset
- uid: System.Collections.IEnumerator.Reset
  commentId: M:System.Collections.IEnumerator.Reset
  parent: System.Collections.IEnumerator
  isExternal: true
  name: Reset()
  nameWithType: IEnumerator.Reset()
  fullName: System.Collections.IEnumerator.Reset()
  spec.csharp:
  - uid: System.Collections.IEnumerator.Reset
    name: Reset
    nameWithType: IEnumerator.Reset
    fullName: System.Collections.IEnumerator.Reset
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerator.Reset
    name: Reset
    nameWithType: IEnumerator.Reset
    fullName: System.Collections.IEnumerator.Reset
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
