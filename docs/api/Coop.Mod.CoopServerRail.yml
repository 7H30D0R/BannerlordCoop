### YamlMime:ManagedReference
items:
- uid: Coop.Mod.CoopServerRail
  commentId: T:Coop.Mod.CoopServerRail
  id: CoopServerRail
  parent: Coop.Mod
  children:
  - Coop.Mod.CoopServerRail.#ctor(Network.Infrastructure.Server,Sync.Store.SharedRemoteStore,RailRegistry,System.TimeSpan)
  - Coop.Mod.CoopServerRail.ClientJoined(Network.Infrastructure.ConnectionServer)
  - Coop.Mod.CoopServerRail.ConnectedClients
  - Coop.Mod.CoopServerRail.Disconnected(Network.Infrastructure.ConnectionServer)
  - Coop.Mod.CoopServerRail.EntityManager
  - Coop.Mod.CoopServerRail.EventQueue
  - Coop.Mod.CoopServerRail.Finalize
  - Coop.Mod.CoopServerRail.m_Instance
  - Coop.Mod.CoopServerRail.m_RailConnections
  - Coop.Mod.CoopServerRail.m_Server
  - Coop.Mod.CoopServerRail.Room
  - Coop.Mod.CoopServerRail.Update(System.TimeSpan)
  langs:
  - csharp
  - vb
  name: CoopServerRail
  nameWithType: CoopServerRail
  fullName: Coop.Mod.CoopServerRail
  type: Class
  source:
    remote:
      path: source/Coop/Mod/CoopServerRail.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: CoopServerRail
    path: ../source/Coop/Mod/CoopServerRail.cs
    startLine: 15
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: 'public class CoopServerRail : IUpdateable'
    content.vb: >-
      Public Class CoopServerRail
          Implements IUpdateable
  inheritance:
  - System.Object
  implements:
  - Common.IUpdateable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Coop.Mod.CoopServerRail.m_Instance
  commentId: F:Coop.Mod.CoopServerRail.m_Instance
  id: m_Instance
  parent: Coop.Mod.CoopServerRail
  langs:
  - csharp
  - vb
  name: m_Instance
  nameWithType: CoopServerRail.m_Instance
  fullName: Coop.Mod.CoopServerRail.m_Instance
  type: Field
  source:
    remote:
      path: source/Coop/Mod/CoopServerRail.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_Instance
    path: ../source/Coop/Mod/CoopServerRail.cs
    startLine: 17
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: >-
      [NotNull]

      readonly RailServer m_Instance
    return:
      type: RailServer
    content.vb: >-
      <NotNull>

      ReadOnly m_Instance As RailServer
  attributes:
  - type: JetBrains.Annotations.NotNullAttribute
    ctor: JetBrains.Annotations.NotNullAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - readonly
  modifiers.vb:
  - ReadOnly
- uid: Coop.Mod.CoopServerRail.m_RailConnections
  commentId: F:Coop.Mod.CoopServerRail.m_RailConnections
  id: m_RailConnections
  parent: Coop.Mod.CoopServerRail
  langs:
  - csharp
  - vb
  name: m_RailConnections
  nameWithType: CoopServerRail.m_RailConnections
  fullName: Coop.Mod.CoopServerRail.m_RailConnections
  type: Field
  source:
    remote:
      path: source/Coop/Mod/CoopServerRail.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_RailConnections
    path: ../source/Coop/Mod/CoopServerRail.cs
    startLine: 19
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: readonly Dictionary<ConnectionServer, RailNetPeerWrapper> m_RailConnections
    return:
      type: System.Collections.Generic.Dictionary{Network.Infrastructure.ConnectionServer,Coop.NetImpl.LiteNet.RailNetPeerWrapper}
    content.vb: ReadOnly m_RailConnections As Dictionary(Of ConnectionServer, RailNetPeerWrapper)
  modifiers.csharp:
  - readonly
  modifiers.vb:
  - ReadOnly
- uid: Coop.Mod.CoopServerRail.m_Server
  commentId: F:Coop.Mod.CoopServerRail.m_Server
  id: m_Server
  parent: Coop.Mod.CoopServerRail
  langs:
  - csharp
  - vb
  name: m_Server
  nameWithType: CoopServerRail.m_Server
  fullName: Coop.Mod.CoopServerRail.m_Server
  type: Field
  source:
    remote:
      path: source/Coop/Mod/CoopServerRail.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_Server
    path: ../source/Coop/Mod/CoopServerRail.cs
    startLine: 22
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: >-
      [NotNull]

      readonly Server m_Server
    return:
      type: Network.Infrastructure.Server
    content.vb: >-
      <NotNull>

      ReadOnly m_Server As Server
  attributes:
  - type: JetBrains.Annotations.NotNullAttribute
    ctor: JetBrains.Annotations.NotNullAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - readonly
  modifiers.vb:
  - ReadOnly
- uid: Coop.Mod.CoopServerRail.#ctor(Network.Infrastructure.Server,Sync.Store.SharedRemoteStore,RailRegistry,System.TimeSpan)
  commentId: M:Coop.Mod.CoopServerRail.#ctor(Network.Infrastructure.Server,Sync.Store.SharedRemoteStore,RailRegistry,System.TimeSpan)
  id: '#ctor(Network.Infrastructure.Server,Sync.Store.SharedRemoteStore,RailRegistry,System.TimeSpan)'
  parent: Coop.Mod.CoopServerRail
  langs:
  - csharp
  - vb
  name: CoopServerRail(Server, SharedRemoteStore, RailRegistry, TimeSpan)
  nameWithType: CoopServerRail.CoopServerRail(Server, SharedRemoteStore, RailRegistry, TimeSpan)
  fullName: Coop.Mod.CoopServerRail.CoopServerRail(Network.Infrastructure.Server, Sync.Store.SharedRemoteStore, RailRegistry, System.TimeSpan)
  type: Constructor
  source:
    remote:
      path: source/Coop/Mod/CoopServerRail.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: .ctor
    path: ../source/Coop/Mod/CoopServerRail.cs
    startLine: 24
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public CoopServerRail([NotNull] Server server, [NotNull] SharedRemoteStore store, [NotNull] RailRegistry registry, TimeSpan eventTimeout)
    parameters:
    - id: server
      type: Network.Infrastructure.Server
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    - id: store
      type: Sync.Store.SharedRemoteStore
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    - id: registry
      type: RailRegistry
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    - id: eventTimeout
      type: System.TimeSpan
    content.vb: Public Sub New(server As Server, store As SharedRemoteStore, registry As RailRegistry, eventTimeout As TimeSpan)
  overload: Coop.Mod.CoopServerRail.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Coop.Mod.CoopServerRail.Room
  commentId: P:Coop.Mod.CoopServerRail.Room
  id: Room
  parent: Coop.Mod.CoopServerRail
  langs:
  - csharp
  - vb
  name: Room
  nameWithType: CoopServerRail.Room
  fullName: Coop.Mod.CoopServerRail.Room
  type: Property
  source:
    remote:
      path: source/Coop/Mod/CoopServerRail.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Room
    path: ../source/Coop/Mod/CoopServerRail.cs
    startLine: 36
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: >-
      [CanBeNull]

      public RailServerRoom Room { get; }
    parameters: []
    return:
      type: RailServerRoom
    content.vb: >-
      <CanBeNull>

      Public ReadOnly Property Room As RailServerRoom
  overload: Coop.Mod.CoopServerRail.Room*
  attributes:
  - type: JetBrains.Annotations.CanBeNullAttribute
    ctor: JetBrains.Annotations.CanBeNullAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Coop.Mod.CoopServerRail.ConnectedClients
  commentId: P:Coop.Mod.CoopServerRail.ConnectedClients
  id: ConnectedClients
  parent: Coop.Mod.CoopServerRail
  langs:
  - csharp
  - vb
  name: ConnectedClients
  nameWithType: CoopServerRail.ConnectedClients
  fullName: Coop.Mod.CoopServerRail.ConnectedClients
  type: Property
  source:
    remote:
      path: source/Coop/Mod/CoopServerRail.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ConnectedClients
    path: ../source/Coop/Mod/CoopServerRail.cs
    startLine: 38
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: >-
      [NotNull]

      public IReadOnlyCollection<RailServerPeer> ConnectedClients { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyCollection{RailServerPeer}
    content.vb: >-
      <NotNull>

      Public ReadOnly Property ConnectedClients As IReadOnlyCollection(Of RailServerPeer)
  overload: Coop.Mod.CoopServerRail.ConnectedClients*
  attributes:
  - type: JetBrains.Annotations.NotNullAttribute
    ctor: JetBrains.Annotations.NotNullAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Coop.Mod.CoopServerRail.EventQueue
  commentId: P:Coop.Mod.CoopServerRail.EventQueue
  id: EventQueue
  parent: Coop.Mod.CoopServerRail
  langs:
  - csharp
  - vb
  name: EventQueue
  nameWithType: CoopServerRail.EventQueue
  fullName: Coop.Mod.CoopServerRail.EventQueue
  type: Property
  source:
    remote:
      path: source/Coop/Mod/CoopServerRail.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: EventQueue
    path: ../source/Coop/Mod/CoopServerRail.cs
    startLine: 41
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public EventBroadcastingQueue EventQueue { get; }
    parameters: []
    return:
      type: Coop.Mod.Persistence.RPC.EventBroadcastingQueue
    content.vb: Public ReadOnly Property EventQueue As EventBroadcastingQueue
  overload: Coop.Mod.CoopServerRail.EventQueue*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Coop.Mod.CoopServerRail.EntityManager
  commentId: P:Coop.Mod.CoopServerRail.EntityManager
  id: EntityManager
  parent: Coop.Mod.CoopServerRail
  langs:
  - csharp
  - vb
  name: EntityManager
  nameWithType: CoopServerRail.EntityManager
  fullName: Coop.Mod.CoopServerRail.EntityManager
  type: Property
  source:
    remote:
      path: source/Coop/Mod/CoopServerRail.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: EntityManager
    path: ../source/Coop/Mod/CoopServerRail.cs
    startLine: 43
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: >-
      [NotNull]

      public EntityManager EntityManager { get; }
    parameters: []
    return:
      type: Coop.Mod.Persistence.EntityManager
    content.vb: >-
      <NotNull>

      Public ReadOnly Property EntityManager As EntityManager
  overload: Coop.Mod.CoopServerRail.EntityManager*
  attributes:
  - type: JetBrains.Annotations.NotNullAttribute
    ctor: JetBrains.Annotations.NotNullAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Coop.Mod.CoopServerRail.Update(System.TimeSpan)
  commentId: M:Coop.Mod.CoopServerRail.Update(System.TimeSpan)
  id: Update(System.TimeSpan)
  parent: Coop.Mod.CoopServerRail
  langs:
  - csharp
  - vb
  name: Update(TimeSpan)
  nameWithType: CoopServerRail.Update(TimeSpan)
  fullName: Coop.Mod.CoopServerRail.Update(System.TimeSpan)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/CoopServerRail.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Update
    path: ../source/Coop/Mod/CoopServerRail.cs
    startLine: 45
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public void Update(TimeSpan frameTime)
    parameters:
    - id: frameTime
      type: System.TimeSpan
    content.vb: Public Sub Update(frameTime As TimeSpan)
  overload: Coop.Mod.CoopServerRail.Update*
  implements:
  - Common.IUpdateable.Update(System.TimeSpan)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Coop.Mod.CoopServerRail.Finalize
  commentId: M:Coop.Mod.CoopServerRail.Finalize
  id: Finalize
  parent: Coop.Mod.CoopServerRail
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: CoopServerRail.Finalize()
  fullName: Coop.Mod.CoopServerRail.Finalize()
  type: Method
  source:
    remote:
      path: source/Coop/Mod/CoopServerRail.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Finalize
    path: ../source/Coop/Mod/CoopServerRail.cs
    startLine: 52
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: Coop.Mod.CoopServerRail.Finalize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Coop.Mod.CoopServerRail.ClientJoined(Network.Infrastructure.ConnectionServer)
  commentId: M:Coop.Mod.CoopServerRail.ClientJoined(Network.Infrastructure.ConnectionServer)
  id: ClientJoined(Network.Infrastructure.ConnectionServer)
  parent: Coop.Mod.CoopServerRail
  langs:
  - csharp
  - vb
  name: ClientJoined(ConnectionServer)
  nameWithType: CoopServerRail.ClientJoined(ConnectionServer)
  fullName: Coop.Mod.CoopServerRail.ClientJoined(Network.Infrastructure.ConnectionServer)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/CoopServerRail.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ClientJoined
    path: ../source/Coop/Mod/CoopServerRail.cs
    startLine: 57
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public void ClientJoined(ConnectionServer connection)
    parameters:
    - id: connection
      type: Network.Infrastructure.ConnectionServer
    content.vb: Public Sub ClientJoined(connection As ConnectionServer)
  overload: Coop.Mod.CoopServerRail.ClientJoined*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Coop.Mod.CoopServerRail.Disconnected(Network.Infrastructure.ConnectionServer)
  commentId: M:Coop.Mod.CoopServerRail.Disconnected(Network.Infrastructure.ConnectionServer)
  id: Disconnected(Network.Infrastructure.ConnectionServer)
  parent: Coop.Mod.CoopServerRail
  langs:
  - csharp
  - vb
  name: Disconnected(ConnectionServer)
  nameWithType: CoopServerRail.Disconnected(ConnectionServer)
  fullName: Coop.Mod.CoopServerRail.Disconnected(Network.Infrastructure.ConnectionServer)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/CoopServerRail.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Disconnected
    path: ../source/Coop/Mod/CoopServerRail.cs
    startLine: 64
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public void Disconnected(ConnectionServer connection)
    parameters:
    - id: connection
      type: Network.Infrastructure.ConnectionServer
    content.vb: Public Sub Disconnected(connection As ConnectionServer)
  overload: Coop.Mod.CoopServerRail.Disconnected*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Coop.Mod
  commentId: N:Coop.Mod
  name: Coop.Mod
  nameWithType: Coop.Mod
  fullName: Coop.Mod
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Common.IUpdateable
  commentId: T:Common.IUpdateable
  parent: Common
  name: IUpdateable
  nameWithType: IUpdateable
  fullName: Common.IUpdateable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Common
  commentId: N:Common
  name: Common
  nameWithType: Common
  fullName: Common
- uid: RailServer
  isExternal: true
  name: RailServer
  nameWithType: RailServer
  fullName: RailServer
- uid: System.Collections.Generic.Dictionary{Network.Infrastructure.ConnectionServer,Coop.NetImpl.LiteNet.RailNetPeerWrapper}
  commentId: T:System.Collections.Generic.Dictionary{Network.Infrastructure.ConnectionServer,Coop.NetImpl.LiteNet.RailNetPeerWrapper}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<ConnectionServer, RailNetPeerWrapper>
  nameWithType: Dictionary<ConnectionServer, RailNetPeerWrapper>
  fullName: System.Collections.Generic.Dictionary<Network.Infrastructure.ConnectionServer, Coop.NetImpl.LiteNet.RailNetPeerWrapper>
  nameWithType.vb: Dictionary(Of ConnectionServer, RailNetPeerWrapper)
  fullName.vb: System.Collections.Generic.Dictionary(Of Network.Infrastructure.ConnectionServer, Coop.NetImpl.LiteNet.RailNetPeerWrapper)
  name.vb: Dictionary(Of ConnectionServer, RailNetPeerWrapper)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Network.Infrastructure.ConnectionServer
    name: ConnectionServer
    nameWithType: ConnectionServer
    fullName: Network.Infrastructure.ConnectionServer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Coop.NetImpl.LiteNet.RailNetPeerWrapper
    name: RailNetPeerWrapper
    nameWithType: RailNetPeerWrapper
    fullName: Coop.NetImpl.LiteNet.RailNetPeerWrapper
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Network.Infrastructure.ConnectionServer
    name: ConnectionServer
    nameWithType: ConnectionServer
    fullName: Network.Infrastructure.ConnectionServer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Coop.NetImpl.LiteNet.RailNetPeerWrapper
    name: RailNetPeerWrapper
    nameWithType: RailNetPeerWrapper
    fullName: Coop.NetImpl.LiteNet.RailNetPeerWrapper
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Network.Infrastructure.Server
  commentId: T:Network.Infrastructure.Server
  parent: Network.Infrastructure
  name: Server
  nameWithType: Server
  fullName: Network.Infrastructure.Server
- uid: Network.Infrastructure
  commentId: N:Network.Infrastructure
  name: Network.Infrastructure
  nameWithType: Network.Infrastructure
  fullName: Network.Infrastructure
- uid: Coop.Mod.CoopServerRail.#ctor*
  commentId: Overload:Coop.Mod.CoopServerRail.#ctor
  name: CoopServerRail
  nameWithType: CoopServerRail.CoopServerRail
  fullName: Coop.Mod.CoopServerRail.CoopServerRail
- uid: Sync.Store.SharedRemoteStore
  commentId: T:Sync.Store.SharedRemoteStore
  parent: Sync.Store
  name: SharedRemoteStore
  nameWithType: SharedRemoteStore
  fullName: Sync.Store.SharedRemoteStore
- uid: RailRegistry
  isExternal: true
  name: RailRegistry
  nameWithType: RailRegistry
  fullName: RailRegistry
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Sync.Store
  commentId: N:Sync.Store
  name: Sync.Store
  nameWithType: Sync.Store
  fullName: Sync.Store
- uid: Coop.Mod.CoopServerRail.Room*
  commentId: Overload:Coop.Mod.CoopServerRail.Room
  name: Room
  nameWithType: CoopServerRail.Room
  fullName: Coop.Mod.CoopServerRail.Room
- uid: RailServerRoom
  isExternal: true
  name: RailServerRoom
  nameWithType: RailServerRoom
  fullName: RailServerRoom
- uid: Coop.Mod.CoopServerRail.ConnectedClients*
  commentId: Overload:Coop.Mod.CoopServerRail.ConnectedClients
  name: ConnectedClients
  nameWithType: CoopServerRail.ConnectedClients
  fullName: Coop.Mod.CoopServerRail.ConnectedClients
- uid: System.Collections.Generic.IReadOnlyCollection{RailServerPeer}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{RailServerPeer}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<RailServerPeer>
  nameWithType: IReadOnlyCollection<RailServerPeer>
  fullName: System.Collections.Generic.IReadOnlyCollection<RailServerPeer>
  nameWithType.vb: IReadOnlyCollection(Of RailServerPeer)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of RailServerPeer)
  name.vb: IReadOnlyCollection(Of RailServerPeer)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RailServerPeer
    name: RailServerPeer
    nameWithType: RailServerPeer
    fullName: RailServerPeer
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RailServerPeer
    name: RailServerPeer
    nameWithType: RailServerPeer
    fullName: RailServerPeer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Coop.Mod.CoopServerRail.EventQueue*
  commentId: Overload:Coop.Mod.CoopServerRail.EventQueue
  name: EventQueue
  nameWithType: CoopServerRail.EventQueue
  fullName: Coop.Mod.CoopServerRail.EventQueue
- uid: Coop.Mod.Persistence.RPC.EventBroadcastingQueue
  commentId: T:Coop.Mod.Persistence.RPC.EventBroadcastingQueue
  parent: Coop.Mod.Persistence.RPC
  name: EventBroadcastingQueue
  nameWithType: EventBroadcastingQueue
  fullName: Coop.Mod.Persistence.RPC.EventBroadcastingQueue
- uid: Coop.Mod.Persistence.RPC
  commentId: N:Coop.Mod.Persistence.RPC
  name: Coop.Mod.Persistence.RPC
  nameWithType: Coop.Mod.Persistence.RPC
  fullName: Coop.Mod.Persistence.RPC
- uid: Coop.Mod.CoopServerRail.EntityManager*
  commentId: Overload:Coop.Mod.CoopServerRail.EntityManager
  name: EntityManager
  nameWithType: CoopServerRail.EntityManager
  fullName: Coop.Mod.CoopServerRail.EntityManager
- uid: Coop.Mod.Persistence.EntityManager
  commentId: T:Coop.Mod.Persistence.EntityManager
  parent: Coop.Mod.Persistence
  name: EntityManager
  nameWithType: EntityManager
  fullName: Coop.Mod.Persistence.EntityManager
- uid: Coop.Mod.Persistence
  commentId: N:Coop.Mod.Persistence
  name: Coop.Mod.Persistence
  nameWithType: Coop.Mod.Persistence
  fullName: Coop.Mod.Persistence
- uid: Coop.Mod.CoopServerRail.Update*
  commentId: Overload:Coop.Mod.CoopServerRail.Update
  name: Update
  nameWithType: CoopServerRail.Update
  fullName: Coop.Mod.CoopServerRail.Update
- uid: Common.IUpdateable.Update(System.TimeSpan)
  commentId: M:Common.IUpdateable.Update(System.TimeSpan)
  parent: Common.IUpdateable
  isExternal: true
  name: Update(TimeSpan)
  nameWithType: IUpdateable.Update(TimeSpan)
  fullName: Common.IUpdateable.Update(System.TimeSpan)
  spec.csharp:
  - uid: Common.IUpdateable.Update(System.TimeSpan)
    name: Update
    nameWithType: IUpdateable.Update
    fullName: Common.IUpdateable.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Common.IUpdateable.Update(System.TimeSpan)
    name: Update
    nameWithType: IUpdateable.Update
    fullName: Common.IUpdateable.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Coop.Mod.CoopServerRail.Finalize*
  commentId: Overload:Coop.Mod.CoopServerRail.Finalize
  name: Finalize
  nameWithType: CoopServerRail.Finalize
  fullName: Coop.Mod.CoopServerRail.Finalize
- uid: Coop.Mod.CoopServerRail.ClientJoined*
  commentId: Overload:Coop.Mod.CoopServerRail.ClientJoined
  name: ClientJoined
  nameWithType: CoopServerRail.ClientJoined
  fullName: Coop.Mod.CoopServerRail.ClientJoined
- uid: Network.Infrastructure.ConnectionServer
  commentId: T:Network.Infrastructure.ConnectionServer
  parent: Network.Infrastructure
  name: ConnectionServer
  nameWithType: ConnectionServer
  fullName: Network.Infrastructure.ConnectionServer
- uid: Coop.Mod.CoopServerRail.Disconnected*
  commentId: Overload:Coop.Mod.CoopServerRail.Disconnected
  name: Disconnected
  nameWithType: CoopServerRail.Disconnected
  fullName: Coop.Mod.CoopServerRail.Disconnected
