### YamlMime:ManagedReference
items:
- uid: Network.Infrastructure.ConnectionServerSM
  commentId: T:Network.Infrastructure.ConnectionServerSM
  id: ConnectionServerSM
  parent: Network.Infrastructure
  children:
  - Network.Infrastructure.ConnectionServerSM.#ctor
  - Network.Infrastructure.ConnectionServerSM.AwaitingClientState
  - Network.Infrastructure.ConnectionServerSM.ClientJoiningState
  - Network.Infrastructure.ConnectionServerSM.CloseTrigger
  - Network.Infrastructure.ConnectionServerSM.ReadyState
  - Network.Infrastructure.ConnectionServerSM.TerminatedState
  langs:
  - csharp
  - vb
  name: ConnectionServerSM
  nameWithType: ConnectionServerSM
  fullName: Network.Infrastructure.ConnectionServerSM
  type: Class
  source:
    remote:
      path: source/Network/Infrastructure/ConnectionServerSM.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ConnectionServerSM
    path: ../source/Network/Infrastructure/ConnectionServerSM.cs
    startLine: 47
  assemblies:
  - Network
  namespace: Network.Infrastructure
  syntax:
    content: 'public class ConnectionServerSM : CoopStateMachine<EServerConnectionState, EServerConnectionTrigger>'
    content.vb: >-
      Public Class ConnectionServerSM

          Inherits CoopStateMachine(Of EServerConnectionState, EServerConnectionTrigger)
  inheritance:
  - System.Object
  - Common.CoopStateMachine
  - Common.CoopStateMachine{Network.Infrastructure.EServerConnectionState,Network.Infrastructure.EServerConnectionTrigger}
  inheritedMembers:
  - Common.CoopStateMachine{Network.Infrastructure.EServerConnectionState,Network.Infrastructure.EServerConnectionTrigger}.Logger
  - Common.CoopStateMachine{Network.Infrastructure.EServerConnectionState,Network.Infrastructure.EServerConnectionTrigger}.StateMachine
  - Common.CoopStateMachine.State
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Network.Infrastructure.ConnectionServerSM.TerminatedState
  commentId: F:Network.Infrastructure.ConnectionServerSM.TerminatedState
  id: TerminatedState
  parent: Network.Infrastructure.ConnectionServerSM
  langs:
  - csharp
  - vb
  name: TerminatedState
  nameWithType: ConnectionServerSM.TerminatedState
  fullName: Network.Infrastructure.ConnectionServerSM.TerminatedState
  type: Field
  source:
    remote:
      path: source/Network/Infrastructure/ConnectionServerSM.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: TerminatedState
    path: ../source/Network/Infrastructure/ConnectionServerSM.cs
    startLine: 49
  assemblies:
  - Network
  namespace: Network.Infrastructure
  syntax:
    content: public readonly StateMachine<EServerConnectionState, EServerConnectionTrigger>.StateConfiguration TerminatedState
    return:
      type: Stateless.StateMachine{Network.Infrastructure.EServerConnectionState,Network.Infrastructure.EServerConnectionTrigger}.StateConfiguration
    content.vb: Public ReadOnly TerminatedState As StateMachine(Of EServerConnectionState, EServerConnectionTrigger).StateConfiguration
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Network.Infrastructure.ConnectionServerSM.AwaitingClientState
  commentId: F:Network.Infrastructure.ConnectionServerSM.AwaitingClientState
  id: AwaitingClientState
  parent: Network.Infrastructure.ConnectionServerSM
  langs:
  - csharp
  - vb
  name: AwaitingClientState
  nameWithType: ConnectionServerSM.AwaitingClientState
  fullName: Network.Infrastructure.ConnectionServerSM.AwaitingClientState
  type: Field
  source:
    remote:
      path: source/Network/Infrastructure/ConnectionServerSM.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: AwaitingClientState
    path: ../source/Network/Infrastructure/ConnectionServerSM.cs
    startLine: 50
  assemblies:
  - Network
  namespace: Network.Infrastructure
  syntax:
    content: public readonly StateMachine<EServerConnectionState, EServerConnectionTrigger>.StateConfiguration AwaitingClientState
    return:
      type: Stateless.StateMachine{Network.Infrastructure.EServerConnectionState,Network.Infrastructure.EServerConnectionTrigger}.StateConfiguration
    content.vb: Public ReadOnly AwaitingClientState As StateMachine(Of EServerConnectionState, EServerConnectionTrigger).StateConfiguration
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Network.Infrastructure.ConnectionServerSM.ClientJoiningState
  commentId: F:Network.Infrastructure.ConnectionServerSM.ClientJoiningState
  id: ClientJoiningState
  parent: Network.Infrastructure.ConnectionServerSM
  langs:
  - csharp
  - vb
  name: ClientJoiningState
  nameWithType: ConnectionServerSM.ClientJoiningState
  fullName: Network.Infrastructure.ConnectionServerSM.ClientJoiningState
  type: Field
  source:
    remote:
      path: source/Network/Infrastructure/ConnectionServerSM.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ClientJoiningState
    path: ../source/Network/Infrastructure/ConnectionServerSM.cs
    startLine: 51
  assemblies:
  - Network
  namespace: Network.Infrastructure
  syntax:
    content: public readonly StateMachine<EServerConnectionState, EServerConnectionTrigger>.StateConfiguration ClientJoiningState
    return:
      type: Stateless.StateMachine{Network.Infrastructure.EServerConnectionState,Network.Infrastructure.EServerConnectionTrigger}.StateConfiguration
    content.vb: Public ReadOnly ClientJoiningState As StateMachine(Of EServerConnectionState, EServerConnectionTrigger).StateConfiguration
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Network.Infrastructure.ConnectionServerSM.ReadyState
  commentId: F:Network.Infrastructure.ConnectionServerSM.ReadyState
  id: ReadyState
  parent: Network.Infrastructure.ConnectionServerSM
  langs:
  - csharp
  - vb
  name: ReadyState
  nameWithType: ConnectionServerSM.ReadyState
  fullName: Network.Infrastructure.ConnectionServerSM.ReadyState
  type: Field
  source:
    remote:
      path: source/Network/Infrastructure/ConnectionServerSM.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ReadyState
    path: ../source/Network/Infrastructure/ConnectionServerSM.cs
    startLine: 52
  assemblies:
  - Network
  namespace: Network.Infrastructure
  syntax:
    content: public readonly StateMachine<EServerConnectionState, EServerConnectionTrigger>.StateConfiguration ReadyState
    return:
      type: Stateless.StateMachine{Network.Infrastructure.EServerConnectionState,Network.Infrastructure.EServerConnectionTrigger}.StateConfiguration
    content.vb: Public ReadOnly ReadyState As StateMachine(Of EServerConnectionState, EServerConnectionTrigger).StateConfiguration
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Network.Infrastructure.ConnectionServerSM.CloseTrigger
  commentId: F:Network.Infrastructure.ConnectionServerSM.CloseTrigger
  id: CloseTrigger
  parent: Network.Infrastructure.ConnectionServerSM
  langs:
  - csharp
  - vb
  name: CloseTrigger
  nameWithType: ConnectionServerSM.CloseTrigger
  fullName: Network.Infrastructure.ConnectionServerSM.CloseTrigger
  type: Field
  source:
    remote:
      path: source/Network/Infrastructure/ConnectionServerSM.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: CloseTrigger
    path: ../source/Network/Infrastructure/ConnectionServerSM.cs
    startLine: 55
  assemblies:
  - Network
  namespace: Network.Infrastructure
  syntax:
    content: public readonly StateMachine<EServerConnectionState, EServerConnectionTrigger>.TriggerWithParameters<EDisconnectReason> CloseTrigger
    return:
      type: Stateless.StateMachine{Network.Infrastructure.EServerConnectionState,Network.Infrastructure.EServerConnectionTrigger}.TriggerWithParameters{Network.Infrastructure.EDisconnectReason}
    content.vb: Public ReadOnly CloseTrigger As StateMachine(Of EServerConnectionState, EServerConnectionTrigger).TriggerWithParameters(Of EDisconnectReason)
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Network.Infrastructure.ConnectionServerSM.#ctor
  commentId: M:Network.Infrastructure.ConnectionServerSM.#ctor
  id: '#ctor'
  parent: Network.Infrastructure.ConnectionServerSM
  langs:
  - csharp
  - vb
  name: ConnectionServerSM()
  nameWithType: ConnectionServerSM.ConnectionServerSM()
  fullName: Network.Infrastructure.ConnectionServerSM.ConnectionServerSM()
  type: Constructor
  source:
    remote:
      path: source/Network/Infrastructure/ConnectionServerSM.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: .ctor
    path: ../source/Network/Infrastructure/ConnectionServerSM.cs
    startLine: 56
  assemblies:
  - Network
  namespace: Network.Infrastructure
  syntax:
    content: public ConnectionServerSM()
    content.vb: Public Sub New
  overload: Network.Infrastructure.ConnectionServerSM.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Network.Infrastructure
  commentId: N:Network.Infrastructure
  name: Network.Infrastructure
  nameWithType: Network.Infrastructure
  fullName: Network.Infrastructure
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Common.CoopStateMachine
  commentId: T:Common.CoopStateMachine
  parent: Common
  name: CoopStateMachine
  nameWithType: CoopStateMachine
  fullName: Common.CoopStateMachine
- uid: Common.CoopStateMachine{Network.Infrastructure.EServerConnectionState,Network.Infrastructure.EServerConnectionTrigger}
  commentId: T:Common.CoopStateMachine{Network.Infrastructure.EServerConnectionState,Network.Infrastructure.EServerConnectionTrigger}
  parent: Common
  definition: Common.CoopStateMachine`2
  name: CoopStateMachine<EServerConnectionState, EServerConnectionTrigger>
  nameWithType: CoopStateMachine<EServerConnectionState, EServerConnectionTrigger>
  fullName: Common.CoopStateMachine<Network.Infrastructure.EServerConnectionState, Network.Infrastructure.EServerConnectionTrigger>
  nameWithType.vb: CoopStateMachine(Of EServerConnectionState, EServerConnectionTrigger)
  fullName.vb: Common.CoopStateMachine(Of Network.Infrastructure.EServerConnectionState, Network.Infrastructure.EServerConnectionTrigger)
  name.vb: CoopStateMachine(Of EServerConnectionState, EServerConnectionTrigger)
  spec.csharp:
  - uid: Common.CoopStateMachine`2
    name: CoopStateMachine
    nameWithType: CoopStateMachine
    fullName: Common.CoopStateMachine
  - name: <
    nameWithType: <
    fullName: <
  - uid: Network.Infrastructure.EServerConnectionState
    name: EServerConnectionState
    nameWithType: EServerConnectionState
    fullName: Network.Infrastructure.EServerConnectionState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Network.Infrastructure.EServerConnectionTrigger
    name: EServerConnectionTrigger
    nameWithType: EServerConnectionTrigger
    fullName: Network.Infrastructure.EServerConnectionTrigger
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Common.CoopStateMachine`2
    name: CoopStateMachine
    nameWithType: CoopStateMachine
    fullName: Common.CoopStateMachine
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Network.Infrastructure.EServerConnectionState
    name: EServerConnectionState
    nameWithType: EServerConnectionState
    fullName: Network.Infrastructure.EServerConnectionState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Network.Infrastructure.EServerConnectionTrigger
    name: EServerConnectionTrigger
    nameWithType: EServerConnectionTrigger
    fullName: Network.Infrastructure.EServerConnectionTrigger
  - name: )
    nameWithType: )
    fullName: )
- uid: Common.CoopStateMachine{Network.Infrastructure.EServerConnectionState,Network.Infrastructure.EServerConnectionTrigger}.Logger
  commentId: F:Common.CoopStateMachine{Network.Infrastructure.EServerConnectionState,Network.Infrastructure.EServerConnectionTrigger}.Logger
  parent: Common.CoopStateMachine{Network.Infrastructure.EServerConnectionState,Network.Infrastructure.EServerConnectionTrigger}
  definition: Common.CoopStateMachine`2.Logger
  name: Logger
  nameWithType: CoopStateMachine<EServerConnectionState, EServerConnectionTrigger>.Logger
  fullName: Common.CoopStateMachine<Network.Infrastructure.EServerConnectionState, Network.Infrastructure.EServerConnectionTrigger>.Logger
  nameWithType.vb: CoopStateMachine(Of EServerConnectionState, EServerConnectionTrigger).Logger
  fullName.vb: Common.CoopStateMachine(Of Network.Infrastructure.EServerConnectionState, Network.Infrastructure.EServerConnectionTrigger).Logger
- uid: Common.CoopStateMachine{Network.Infrastructure.EServerConnectionState,Network.Infrastructure.EServerConnectionTrigger}.StateMachine
  commentId: F:Common.CoopStateMachine{Network.Infrastructure.EServerConnectionState,Network.Infrastructure.EServerConnectionTrigger}.StateMachine
  parent: Common.CoopStateMachine{Network.Infrastructure.EServerConnectionState,Network.Infrastructure.EServerConnectionTrigger}
  definition: Common.CoopStateMachine`2.StateMachine
  name: StateMachine
  nameWithType: CoopStateMachine<EServerConnectionState, EServerConnectionTrigger>.StateMachine
  fullName: Common.CoopStateMachine<Network.Infrastructure.EServerConnectionState, Network.Infrastructure.EServerConnectionTrigger>.StateMachine
  nameWithType.vb: CoopStateMachine(Of EServerConnectionState, EServerConnectionTrigger).StateMachine
  fullName.vb: Common.CoopStateMachine(Of Network.Infrastructure.EServerConnectionState, Network.Infrastructure.EServerConnectionTrigger).StateMachine
- uid: Common.CoopStateMachine.State
  commentId: P:Common.CoopStateMachine.State
  parent: Common.CoopStateMachine
  name: State
  nameWithType: CoopStateMachine.State
  fullName: Common.CoopStateMachine.State
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Common
  commentId: N:Common
  name: Common
  nameWithType: Common
  fullName: Common
- uid: Common.CoopStateMachine`2
  commentId: T:Common.CoopStateMachine`2
  name: CoopStateMachine<T, U>
  nameWithType: CoopStateMachine<T, U>
  fullName: Common.CoopStateMachine<T, U>
  nameWithType.vb: CoopStateMachine(Of T, U)
  fullName.vb: Common.CoopStateMachine(Of T, U)
  name.vb: CoopStateMachine(Of T, U)
  spec.csharp:
  - uid: Common.CoopStateMachine`2
    name: CoopStateMachine
    nameWithType: CoopStateMachine
    fullName: Common.CoopStateMachine
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: U
    nameWithType: U
    fullName: U
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Common.CoopStateMachine`2
    name: CoopStateMachine
    nameWithType: CoopStateMachine
    fullName: Common.CoopStateMachine
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: U
    nameWithType: U
    fullName: U
  - name: )
    nameWithType: )
    fullName: )
- uid: Common.CoopStateMachine`2.Logger
  commentId: F:Common.CoopStateMachine`2.Logger
  name: Logger
  nameWithType: CoopStateMachine<T, U>.Logger
  fullName: Common.CoopStateMachine<T, U>.Logger
  nameWithType.vb: CoopStateMachine(Of T, U).Logger
  fullName.vb: Common.CoopStateMachine(Of T, U).Logger
- uid: Common.CoopStateMachine`2.StateMachine
  commentId: F:Common.CoopStateMachine`2.StateMachine
  name: StateMachine
  nameWithType: CoopStateMachine<T, U>.StateMachine
  fullName: Common.CoopStateMachine<T, U>.StateMachine
  nameWithType.vb: CoopStateMachine(Of T, U).StateMachine
  fullName.vb: Common.CoopStateMachine(Of T, U).StateMachine
- uid: Stateless.StateMachine{Network.Infrastructure.EServerConnectionState,Network.Infrastructure.EServerConnectionTrigger}.StateConfiguration
  commentId: T:Stateless.StateMachine{Network.Infrastructure.EServerConnectionState,Network.Infrastructure.EServerConnectionTrigger}.StateConfiguration
  parent: Stateless
  definition: Stateless.StateMachine`2.StateConfiguration
  name: StateMachine.StateConfiguration<>
  nameWithType: StateMachine.StateConfiguration<>
  fullName: Stateless.StateMachine.StateConfiguration<>
  nameWithType.vb: StateMachine.StateConfiguration(Of )
  fullName.vb: Stateless.StateMachine.StateConfiguration(Of )
  name.vb: StateMachine.StateConfiguration(Of )
  spec.csharp:
  - uid: Stateless.StateMachine`2.StateConfiguration
    name: StateMachine.StateConfiguration
    nameWithType: StateMachine.StateConfiguration
    fullName: Stateless.StateMachine.StateConfiguration
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Stateless.StateMachine`2.StateConfiguration
    name: StateMachine.StateConfiguration
    nameWithType: StateMachine.StateConfiguration
    fullName: Stateless.StateMachine.StateConfiguration
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: Stateless.StateMachine`2.StateConfiguration
  commentId: T:Stateless.StateMachine`2.StateConfiguration
  isExternal: true
  name: StateMachine.StateConfiguration<>
  nameWithType: StateMachine.StateConfiguration<>
  fullName: Stateless.StateMachine.StateConfiguration<>
  nameWithType.vb: StateMachine.StateConfiguration(Of )
  fullName.vb: Stateless.StateMachine.StateConfiguration(Of )
  name.vb: StateMachine.StateConfiguration(Of )
  spec.csharp:
  - uid: Stateless.StateMachine`2.StateConfiguration
    name: StateMachine.StateConfiguration
    nameWithType: StateMachine.StateConfiguration
    fullName: Stateless.StateMachine.StateConfiguration
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Stateless.StateMachine`2.StateConfiguration
    name: StateMachine.StateConfiguration
    nameWithType: StateMachine.StateConfiguration
    fullName: Stateless.StateMachine.StateConfiguration
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: Stateless
  commentId: N:Stateless
  isExternal: true
  name: Stateless
  nameWithType: Stateless
  fullName: Stateless
- uid: Stateless.StateMachine{Network.Infrastructure.EServerConnectionState,Network.Infrastructure.EServerConnectionTrigger}.TriggerWithParameters{Network.Infrastructure.EDisconnectReason}
  commentId: T:Stateless.StateMachine{Network.Infrastructure.EServerConnectionState,Network.Infrastructure.EServerConnectionTrigger}.TriggerWithParameters{Network.Infrastructure.EDisconnectReason}
  parent: Stateless
  definition: Stateless.StateMachine`2.TriggerWithParameters`1
  name: StateMachine.TriggerWithParameters<EDisconnectReason>
  nameWithType: StateMachine.TriggerWithParameters<EDisconnectReason>
  fullName: Stateless.StateMachine.TriggerWithParameters<Network.Infrastructure.EDisconnectReason>
  nameWithType.vb: StateMachine.TriggerWithParameters(Of EDisconnectReason)
  fullName.vb: Stateless.StateMachine.TriggerWithParameters(Of Network.Infrastructure.EDisconnectReason)
  name.vb: StateMachine.TriggerWithParameters(Of EDisconnectReason)
  spec.csharp:
  - uid: Stateless.StateMachine`2.TriggerWithParameters`1
    name: StateMachine.TriggerWithParameters
    nameWithType: StateMachine.TriggerWithParameters
    fullName: Stateless.StateMachine.TriggerWithParameters
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Network.Infrastructure.EDisconnectReason
    name: EDisconnectReason
    nameWithType: EDisconnectReason
    fullName: Network.Infrastructure.EDisconnectReason
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Stateless.StateMachine`2.TriggerWithParameters`1
    name: StateMachine.TriggerWithParameters
    nameWithType: StateMachine.TriggerWithParameters
    fullName: Stateless.StateMachine.TriggerWithParameters
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Network.Infrastructure.EDisconnectReason
    name: EDisconnectReason
    nameWithType: EDisconnectReason
    fullName: Network.Infrastructure.EDisconnectReason
  - name: )
    nameWithType: )
    fullName: )
- uid: Stateless.StateMachine`2.TriggerWithParameters`1
  commentId: T:Stateless.StateMachine`2.TriggerWithParameters`1
  isExternal: true
  name: StateMachine.TriggerWithParameters<TArg0>
  nameWithType: StateMachine.TriggerWithParameters<TArg0>
  fullName: Stateless.StateMachine.TriggerWithParameters<TArg0>
  nameWithType.vb: StateMachine.TriggerWithParameters(Of TArg0)
  fullName.vb: Stateless.StateMachine.TriggerWithParameters(Of TArg0)
  name.vb: StateMachine.TriggerWithParameters(Of TArg0)
  spec.csharp:
  - uid: Stateless.StateMachine`2.TriggerWithParameters`1
    name: StateMachine.TriggerWithParameters
    nameWithType: StateMachine.TriggerWithParameters
    fullName: Stateless.StateMachine.TriggerWithParameters
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TArg0
    nameWithType: TArg0
    fullName: TArg0
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Stateless.StateMachine`2.TriggerWithParameters`1
    name: StateMachine.TriggerWithParameters
    nameWithType: StateMachine.TriggerWithParameters
    fullName: Stateless.StateMachine.TriggerWithParameters
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TArg0
    nameWithType: TArg0
    fullName: TArg0
  - name: )
    nameWithType: )
    fullName: )
- uid: Network.Infrastructure.ConnectionServerSM.#ctor*
  commentId: Overload:Network.Infrastructure.ConnectionServerSM.#ctor
  name: ConnectionServerSM
  nameWithType: ConnectionServerSM.ConnectionServerSM
  fullName: Network.Infrastructure.ConnectionServerSM.ConnectionServerSM
