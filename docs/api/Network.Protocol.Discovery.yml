### YamlMime:ManagedReference
items:
- uid: Network.Protocol.Discovery
  commentId: T:Network.Protocol.Discovery
  id: Discovery
  parent: Network.Protocol
  children:
  - Network.Protocol.Discovery.#cctor
  - Network.Protocol.Discovery.GetPayload
  - Network.Protocol.Discovery.MagicNumber
  - Network.Protocol.Discovery.Payload
  - Network.Protocol.Discovery.TryDeserialize(Network.ByteReader)
  langs:
  - csharp
  - vb
  name: Discovery
  nameWithType: Discovery
  fullName: Network.Protocol.Discovery
  type: Class
  source:
    remote:
      path: source/Network/Protocol/Discovery.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Discovery
    path: ../source/Network/Protocol/Discovery.cs
    startLine: 5
  assemblies:
  - Network
  namespace: Network.Protocol
  summary: "\nPayload serializer for a discovery packet.\n"
  example: []
  syntax:
    content: public static class Discovery
    content.vb: Public Module Discovery
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Network.Protocol.Discovery.MagicNumber
  commentId: F:Network.Protocol.Discovery.MagicNumber
  id: MagicNumber
  parent: Network.Protocol.Discovery
  langs:
  - csharp
  - vb
  name: MagicNumber
  nameWithType: Discovery.MagicNumber
  fullName: Network.Protocol.Discovery.MagicNumber
  type: Field
  source:
    remote:
      path: source/Network/Protocol/Discovery.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: MagicNumber
    path: ../source/Network/Protocol/Discovery.cs
    startLine: 7
  assemblies:
  - Network
  namespace: Network.Protocol
  syntax:
    content: const int MagicNumber = 322399958
    return:
      type: System.Int32
    content.vb: Const MagicNumber As Integer = 322399958
  modifiers.csharp:
  - const
  modifiers.vb:
  - Const
- uid: Network.Protocol.Discovery.Payload
  commentId: F:Network.Protocol.Discovery.Payload
  id: Payload
  parent: Network.Protocol.Discovery
  langs:
  - csharp
  - vb
  name: Payload
  nameWithType: Discovery.Payload
  fullName: Network.Protocol.Discovery.Payload
  type: Field
  source:
    remote:
      path: source/Network/Protocol/Discovery.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Payload
    path: ../source/Network/Protocol/Discovery.cs
    startLine: 8
  assemblies:
  - Network
  namespace: Network.Protocol
  syntax:
    content: static readonly byte[] Payload
    return:
      type: System.Byte[]
    content.vb: Shared ReadOnly Payload As Byte()
  modifiers.csharp:
  - static
  - readonly
  modifiers.vb:
  - Shared
  - ReadOnly
- uid: Network.Protocol.Discovery.#cctor
  commentId: M:Network.Protocol.Discovery.#cctor
  id: '#cctor'
  parent: Network.Protocol.Discovery
  langs:
  - csharp
  - vb
  name: .cctor()
  nameWithType: Discovery..cctor()
  fullName: Network.Protocol.Discovery..cctor()
  type: Constructor
  source:
    remote:
      path: source/Network/Protocol/Discovery.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: .cctor
    path: ../source/Network/Protocol/Discovery.cs
    startLine: 10
  assemblies:
  - Network
  namespace: Network.Protocol
  syntax:
    content: static Discovery()
    content.vb: Shared Sub New
  overload: Network.Protocol.Discovery.#cctor*
  modifiers.csharp:
  - static
  modifiers.vb:
  - Shared
- uid: Network.Protocol.Discovery.GetPayload
  commentId: M:Network.Protocol.Discovery.GetPayload
  id: GetPayload
  parent: Network.Protocol.Discovery
  langs:
  - csharp
  - vb
  name: GetPayload()
  nameWithType: Discovery.GetPayload()
  fullName: Network.Protocol.Discovery.GetPayload()
  type: Method
  source:
    remote:
      path: source/Network/Protocol/Discovery.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: GetPayload
    path: ../source/Network/Protocol/Discovery.cs
    startLine: 21
  assemblies:
  - Network
  namespace: Network.Protocol
  summary: "\nGet the payload that is being broadcast by the server.\n"
  example: []
  syntax:
    content: public static byte[] GetPayload()
    return:
      type: System.Byte[]
      description: Payload
    content.vb: Public Shared Function GetPayload As Byte()
  overload: Network.Protocol.Discovery.GetPayload*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Network.Protocol.Discovery.TryDeserialize(Network.ByteReader)
  commentId: M:Network.Protocol.Discovery.TryDeserialize(Network.ByteReader)
  id: TryDeserialize(Network.ByteReader)
  parent: Network.Protocol.Discovery
  langs:
  - csharp
  - vb
  name: TryDeserialize(ByteReader)
  nameWithType: Discovery.TryDeserialize(ByteReader)
  fullName: Network.Protocol.Discovery.TryDeserialize(Network.ByteReader)
  type: Method
  source:
    remote:
      path: source/Network/Protocol/Discovery.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: TryDeserialize
    path: ../source/Network/Protocol/Discovery.cs
    startLine: 32
  assemblies:
  - Network
  namespace: Network.Protocol
  summary: "\nCheck if the <see cref=\"!:reader\"></see> contains a discovery packet. If so, deserialize\nit. Otherwise leave the reader as it is.\n"
  example: []
  syntax:
    content: public static bool TryDeserialize(ByteReader reader)
    parameters:
    - id: reader
      type: Network.ByteReader
      description: ''
    return:
      type: System.Boolean
      description: Was a discovery packet read?
    content.vb: Public Shared Function TryDeserialize(reader As ByteReader) As Boolean
  overload: Network.Protocol.Discovery.TryDeserialize*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Network.Protocol
  commentId: N:Network.Protocol
  name: Network.Protocol
  nameWithType: Network.Protocol
  fullName: Network.Protocol
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Network.Protocol.Discovery.#cctor*
  commentId: Overload:Network.Protocol.Discovery.#cctor
  name: .cctor
  nameWithType: Discovery..cctor
  fullName: Network.Protocol.Discovery..cctor
- uid: Network.Protocol.Discovery.GetPayload*
  commentId: Overload:Network.Protocol.Discovery.GetPayload
  name: GetPayload
  nameWithType: Discovery.GetPayload
  fullName: Network.Protocol.Discovery.GetPayload
- uid: Network.Protocol.Discovery.TryDeserialize*
  commentId: Overload:Network.Protocol.Discovery.TryDeserialize
  name: TryDeserialize
  nameWithType: Discovery.TryDeserialize
  fullName: Network.Protocol.Discovery.TryDeserialize
- uid: Network.ByteReader
  commentId: T:Network.ByteReader
  parent: Network
  name: ByteReader
  nameWithType: ByteReader
  fullName: Network.ByteReader
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Network
  commentId: N:Network
  name: Network
  nameWithType: Network
  fullName: Network
