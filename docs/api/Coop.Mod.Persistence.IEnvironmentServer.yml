### YamlMime:ManagedReference
items:
- uid: Coop.Mod.Persistence.IEnvironmentServer
  commentId: T:Coop.Mod.Persistence.IEnvironmentServer
  id: IEnvironmentServer
  parent: Coop.Mod.Persistence
  children:
  - Coop.Mod.Persistence.IEnvironmentServer.CanChangeTimeControlMode
  - Coop.Mod.Persistence.IEnvironmentServer.EventQueue
  - Coop.Mod.Persistence.IEnvironmentServer.GetMobilePartyByIndex(System.Int32)
  - Coop.Mod.Persistence.IEnvironmentServer.Store
  - Coop.Mod.Persistence.IEnvironmentServer.TargetPosition
  langs:
  - csharp
  - vb
  name: IEnvironmentServer
  nameWithType: IEnvironmentServer
  fullName: Coop.Mod.Persistence.IEnvironmentServer
  type: Interface
  source:
    remote:
      path: source/Coop/Mod/Persistence/IEnvironmentServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: IEnvironmentServer
    path: ../source/Coop/Mod/Persistence/IEnvironmentServer.cs
    startLine: 12
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence
  summary: "\nProvides an abstraction layer between the persistence and the game for the server.\n"
  example: []
  syntax:
    content: public interface IEnvironmentServer
    content.vb: Public Interface IEnvironmentServer
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Coop.Mod.Persistence.IEnvironmentServer.TargetPosition
  commentId: P:Coop.Mod.Persistence.IEnvironmentServer.TargetPosition
  id: TargetPosition
  parent: Coop.Mod.Persistence.IEnvironmentServer
  langs:
  - csharp
  - vb
  name: TargetPosition
  nameWithType: IEnvironmentServer.TargetPosition
  fullName: Coop.Mod.Persistence.IEnvironmentServer.TargetPosition
  type: Property
  source:
    remote:
      path: source/Coop/Mod/Persistence/IEnvironmentServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: TargetPosition
    path: ../source/Coop/Mod/Persistence/IEnvironmentServer.cs
    startLine: 17
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence
  summary: "\nAccess to the movement data for all parties in the clients game world.\n"
  example: []
  syntax:
    content: FieldAccessGroup<MobileParty, MovementData> TargetPosition { get; }
    parameters: []
    return:
      type: Sync.FieldAccessGroup{TaleWorlds.CampaignSystem.MobileParty,Coop.Mod.Persistence.Party.MovementData}
    content.vb: ReadOnly Property TargetPosition As FieldAccessGroup(Of MobileParty, MovementData)
  overload: Coop.Mod.Persistence.IEnvironmentServer.TargetPosition*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Coop.Mod.Persistence.IEnvironmentServer.CanChangeTimeControlMode
  commentId: P:Coop.Mod.Persistence.IEnvironmentServer.CanChangeTimeControlMode
  id: CanChangeTimeControlMode
  parent: Coop.Mod.Persistence.IEnvironmentServer
  langs:
  - csharp
  - vb
  name: CanChangeTimeControlMode
  nameWithType: IEnvironmentServer.CanChangeTimeControlMode
  fullName: Coop.Mod.Persistence.IEnvironmentServer.CanChangeTimeControlMode
  type: Property
  source:
    remote:
      path: source/Coop/Mod/Persistence/IEnvironmentServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: CanChangeTimeControlMode
    path: ../source/Coop/Mod/Persistence/IEnvironmentServer.cs
    startLine: 22
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence
  summary: "\nDetermines if the campaign time control mode could be changed right now.\n"
  example: []
  syntax:
    content: bool CanChangeTimeControlMode { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property CanChangeTimeControlMode As Boolean
  overload: Coop.Mod.Persistence.IEnvironmentServer.CanChangeTimeControlMode*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Coop.Mod.Persistence.IEnvironmentServer.Store
  commentId: P:Coop.Mod.Persistence.IEnvironmentServer.Store
  id: Store
  parent: Coop.Mod.Persistence.IEnvironmentServer
  langs:
  - csharp
  - vb
  name: Store
  nameWithType: IEnvironmentServer.Store
  fullName: Coop.Mod.Persistence.IEnvironmentServer.Store
  type: Property
  source:
    remote:
      path: source/Coop/Mod/Persistence/IEnvironmentServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Store
    path: ../source/Coop/Mod/Persistence/IEnvironmentServer.cs
    startLine: 27
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence
  summary: "\nReturns the shared object store for this server.\n"
  example: []
  syntax:
    content: >-
      [NotNull]

      SharedRemoteStore Store { get; }
    parameters: []
    return:
      type: Sync.Store.SharedRemoteStore
    content.vb: >-
      <NotNull>

      ReadOnly Property Store As SharedRemoteStore
  overload: Coop.Mod.Persistence.IEnvironmentServer.Store*
  attributes:
  - type: JetBrains.Annotations.NotNullAttribute
    ctor: JetBrains.Annotations.NotNullAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Coop.Mod.Persistence.IEnvironmentServer.EventQueue
  commentId: P:Coop.Mod.Persistence.IEnvironmentServer.EventQueue
  id: EventQueue
  parent: Coop.Mod.Persistence.IEnvironmentServer
  langs:
  - csharp
  - vb
  name: EventQueue
  nameWithType: IEnvironmentServer.EventQueue
  fullName: Coop.Mod.Persistence.IEnvironmentServer.EventQueue
  type: Property
  source:
    remote:
      path: source/Coop/Mod/Persistence/IEnvironmentServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: EventQueue
    path: ../source/Coop/Mod/Persistence/IEnvironmentServer.cs
    startLine: 33
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence
  summary: "\nReturns the queue to broadcast events to all clients. NotNull if persistence is initialized.\n"
  example: []
  syntax:
    content: >-
      [CanBeNull]

      EventBroadcastingQueue EventQueue { get; }
    parameters: []
    return:
      type: Coop.Mod.Persistence.RPC.EventBroadcastingQueue
    content.vb: >-
      <CanBeNull>

      ReadOnly Property EventQueue As EventBroadcastingQueue
  overload: Coop.Mod.Persistence.IEnvironmentServer.EventQueue*
  attributes:
  - type: JetBrains.Annotations.CanBeNullAttribute
    ctor: JetBrains.Annotations.CanBeNullAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Coop.Mod.Persistence.IEnvironmentServer.GetMobilePartyByIndex(System.Int32)
  commentId: M:Coop.Mod.Persistence.IEnvironmentServer.GetMobilePartyByIndex(System.Int32)
  id: GetMobilePartyByIndex(System.Int32)
  parent: Coop.Mod.Persistence.IEnvironmentServer
  langs:
  - csharp
  - vb
  name: GetMobilePartyByIndex(Int32)
  nameWithType: IEnvironmentServer.GetMobilePartyByIndex(Int32)
  fullName: Coop.Mod.Persistence.IEnvironmentServer.GetMobilePartyByIndex(System.Int32)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/Persistence/IEnvironmentServer.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: GetMobilePartyByIndex
    path: ../source/Coop/Mod/Persistence/IEnvironmentServer.cs
    startLine: 41
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence
  summary: "\nReturns a party given its party index.\n"
  example: []
  syntax:
    content: >-
      [CanBeNull]

      MobileParty GetMobilePartyByIndex(int iPartyIndex)
    parameters:
    - id: iPartyIndex
      type: System.Int32
      description: ''
    return:
      type: TaleWorlds.CampaignSystem.MobileParty
      description: ''
    content.vb: >-
      <CanBeNull>

      Function GetMobilePartyByIndex(iPartyIndex As Integer) As MobileParty
  overload: Coop.Mod.Persistence.IEnvironmentServer.GetMobilePartyByIndex*
  attributes:
  - type: JetBrains.Annotations.CanBeNullAttribute
    ctor: JetBrains.Annotations.CanBeNullAttribute.#ctor
    arguments: []
references:
- uid: Coop.Mod.Persistence
  commentId: N:Coop.Mod.Persistence
  name: Coop.Mod.Persistence
  nameWithType: Coop.Mod.Persistence
  fullName: Coop.Mod.Persistence
- uid: Coop.Mod.Persistence.IEnvironmentServer.TargetPosition*
  commentId: Overload:Coop.Mod.Persistence.IEnvironmentServer.TargetPosition
  name: TargetPosition
  nameWithType: IEnvironmentServer.TargetPosition
  fullName: Coop.Mod.Persistence.IEnvironmentServer.TargetPosition
- uid: Sync.FieldAccessGroup{TaleWorlds.CampaignSystem.MobileParty,Coop.Mod.Persistence.Party.MovementData}
  commentId: T:Sync.FieldAccessGroup{TaleWorlds.CampaignSystem.MobileParty,Coop.Mod.Persistence.Party.MovementData}
  parent: Sync
  definition: Sync.FieldAccessGroup`2
  name: FieldAccessGroup<MobileParty, MovementData>
  nameWithType: FieldAccessGroup<MobileParty, MovementData>
  fullName: Sync.FieldAccessGroup<TaleWorlds.CampaignSystem.MobileParty, Coop.Mod.Persistence.Party.MovementData>
  nameWithType.vb: FieldAccessGroup(Of MobileParty, MovementData)
  fullName.vb: Sync.FieldAccessGroup(Of TaleWorlds.CampaignSystem.MobileParty, Coop.Mod.Persistence.Party.MovementData)
  name.vb: FieldAccessGroup(Of MobileParty, MovementData)
  spec.csharp:
  - uid: Sync.FieldAccessGroup`2
    name: FieldAccessGroup
    nameWithType: FieldAccessGroup
    fullName: Sync.FieldAccessGroup
  - name: <
    nameWithType: <
    fullName: <
  - uid: TaleWorlds.CampaignSystem.MobileParty
    name: MobileParty
    nameWithType: MobileParty
    fullName: TaleWorlds.CampaignSystem.MobileParty
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Coop.Mod.Persistence.Party.MovementData
    name: MovementData
    nameWithType: MovementData
    fullName: Coop.Mod.Persistence.Party.MovementData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Sync.FieldAccessGroup`2
    name: FieldAccessGroup
    nameWithType: FieldAccessGroup
    fullName: Sync.FieldAccessGroup
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TaleWorlds.CampaignSystem.MobileParty
    name: MobileParty
    nameWithType: MobileParty
    fullName: TaleWorlds.CampaignSystem.MobileParty
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Coop.Mod.Persistence.Party.MovementData
    name: MovementData
    nameWithType: MovementData
    fullName: Coop.Mod.Persistence.Party.MovementData
  - name: )
    nameWithType: )
    fullName: )
- uid: Sync.FieldAccessGroup`2
  commentId: T:Sync.FieldAccessGroup`2
  parent: Sync
  name: FieldAccessGroup<TDeclaring, TValueObject>
  nameWithType: FieldAccessGroup<TDeclaring, TValueObject>
  fullName: Sync.FieldAccessGroup<TDeclaring, TValueObject>
  nameWithType.vb: FieldAccessGroup(Of TDeclaring, TValueObject)
  fullName.vb: Sync.FieldAccessGroup(Of TDeclaring, TValueObject)
  name.vb: FieldAccessGroup(Of TDeclaring, TValueObject)
  spec.csharp:
  - uid: Sync.FieldAccessGroup`2
    name: FieldAccessGroup
    nameWithType: FieldAccessGroup
    fullName: Sync.FieldAccessGroup
  - name: <
    nameWithType: <
    fullName: <
  - name: TDeclaring
    nameWithType: TDeclaring
    fullName: TDeclaring
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValueObject
    nameWithType: TValueObject
    fullName: TValueObject
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Sync.FieldAccessGroup`2
    name: FieldAccessGroup
    nameWithType: FieldAccessGroup
    fullName: Sync.FieldAccessGroup
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDeclaring
    nameWithType: TDeclaring
    fullName: TDeclaring
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValueObject
    nameWithType: TValueObject
    fullName: TValueObject
  - name: )
    nameWithType: )
    fullName: )
- uid: Sync
  commentId: N:Sync
  name: Sync
  nameWithType: Sync
  fullName: Sync
- uid: Coop.Mod.Persistence.IEnvironmentServer.CanChangeTimeControlMode*
  commentId: Overload:Coop.Mod.Persistence.IEnvironmentServer.CanChangeTimeControlMode
  name: CanChangeTimeControlMode
  nameWithType: IEnvironmentServer.CanChangeTimeControlMode
  fullName: Coop.Mod.Persistence.IEnvironmentServer.CanChangeTimeControlMode
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Coop.Mod.Persistence.IEnvironmentServer.Store*
  commentId: Overload:Coop.Mod.Persistence.IEnvironmentServer.Store
  name: Store
  nameWithType: IEnvironmentServer.Store
  fullName: Coop.Mod.Persistence.IEnvironmentServer.Store
- uid: Sync.Store.SharedRemoteStore
  commentId: T:Sync.Store.SharedRemoteStore
  parent: Sync.Store
  name: SharedRemoteStore
  nameWithType: SharedRemoteStore
  fullName: Sync.Store.SharedRemoteStore
- uid: Sync.Store
  commentId: N:Sync.Store
  name: Sync.Store
  nameWithType: Sync.Store
  fullName: Sync.Store
- uid: Coop.Mod.Persistence.IEnvironmentServer.EventQueue*
  commentId: Overload:Coop.Mod.Persistence.IEnvironmentServer.EventQueue
  name: EventQueue
  nameWithType: IEnvironmentServer.EventQueue
  fullName: Coop.Mod.Persistence.IEnvironmentServer.EventQueue
- uid: Coop.Mod.Persistence.RPC.EventBroadcastingQueue
  commentId: T:Coop.Mod.Persistence.RPC.EventBroadcastingQueue
  parent: Coop.Mod.Persistence.RPC
  name: EventBroadcastingQueue
  nameWithType: EventBroadcastingQueue
  fullName: Coop.Mod.Persistence.RPC.EventBroadcastingQueue
- uid: Coop.Mod.Persistence.RPC
  commentId: N:Coop.Mod.Persistence.RPC
  name: Coop.Mod.Persistence.RPC
  nameWithType: Coop.Mod.Persistence.RPC
  fullName: Coop.Mod.Persistence.RPC
- uid: Coop.Mod.Persistence.IEnvironmentServer.GetMobilePartyByIndex*
  commentId: Overload:Coop.Mod.Persistence.IEnvironmentServer.GetMobilePartyByIndex
  name: GetMobilePartyByIndex
  nameWithType: IEnvironmentServer.GetMobilePartyByIndex
  fullName: Coop.Mod.Persistence.IEnvironmentServer.GetMobilePartyByIndex
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TaleWorlds.CampaignSystem.MobileParty
  commentId: T:TaleWorlds.CampaignSystem.MobileParty
  parent: TaleWorlds.CampaignSystem
  isExternal: true
  name: MobileParty
  nameWithType: MobileParty
  fullName: TaleWorlds.CampaignSystem.MobileParty
- uid: TaleWorlds.CampaignSystem
  commentId: N:TaleWorlds.CampaignSystem
  isExternal: true
  name: TaleWorlds.CampaignSystem
  nameWithType: TaleWorlds.CampaignSystem
  fullName: TaleWorlds.CampaignSystem
