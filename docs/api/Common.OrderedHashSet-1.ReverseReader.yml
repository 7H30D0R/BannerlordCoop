### YamlMime:ManagedReference
items:
- uid: Common.OrderedHashSet`1.ReverseReader
  commentId: T:Common.OrderedHashSet`1.ReverseReader
  id: OrderedHashSet`1.ReverseReader
  parent: Common
  children:
  - Common.OrderedHashSet`1.ReverseReader.#ctor(Common.OrderedHashSet{`0})
  - Common.OrderedHashSet`1.ReverseReader.Contains(`0)
  - Common.OrderedHashSet`1.ReverseReader.Count
  - Common.OrderedHashSet`1.ReverseReader.GetEnumerator
  - Common.OrderedHashSet`1.ReverseReader.m_set
  - Common.OrderedHashSet`1.ReverseReader.StartWith(`0)
  - Common.OrderedHashSet`1.ReverseReader.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  - Common.OrderedHashSet`1.ReverseReader.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: OrderedHashSet<T>.ReverseReader
  nameWithType: OrderedHashSet<T>.ReverseReader
  fullName: Common.OrderedHashSet<T>.ReverseReader
  type: Struct
  source:
    remote:
      path: source/Common/OrderedHashSet.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ReverseReader
    path: ../source/Common/OrderedHashSet.cs
    startLine: 219
  assemblies:
  - Common
  namespace: Common
  syntax:
    content: 'public struct ReverseReader : IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable'
    content.vb: >-
      Public Structure ReverseReader

          Implements IReadOnlyCollection(Of T), IEnumerable(Of T), IEnumerable
  implements:
  - System.Collections.Generic.IReadOnlyCollection{{T}}
  - System.Collections.Generic.IEnumerable{{T}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: OrderedHashSet(Of T).ReverseReader
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
  fullName.vb: Common.OrderedHashSet(Of T).ReverseReader
  name.vb: OrderedHashSet(Of T).ReverseReader
- uid: Common.OrderedHashSet`1.ReverseReader.m_set
  commentId: F:Common.OrderedHashSet`1.ReverseReader.m_set
  id: m_set
  parent: Common.OrderedHashSet`1.ReverseReader
  langs:
  - csharp
  - vb
  name: m_set
  nameWithType: OrderedHashSet<T>.ReverseReader.m_set
  fullName: Common.OrderedHashSet<T>.ReverseReader.m_set
  type: Field
  source:
    remote:
      path: source/Common/OrderedHashSet.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_set
    path: ../source/Common/OrderedHashSet.cs
    startLine: 221
  assemblies:
  - Common
  namespace: Common
  syntax:
    content: readonly OrderedHashSet<T> m_set
    return:
      type: Common.OrderedHashSet`1
    content.vb: ReadOnly m_set As OrderedHashSet(Of T)
  nameWithType.vb: OrderedHashSet(Of T).ReverseReader.m_set
  modifiers.csharp:
  - readonly
  modifiers.vb:
  - ReadOnly
  fullName.vb: Common.OrderedHashSet(Of T).ReverseReader.m_set
- uid: Common.OrderedHashSet`1.ReverseReader.Count
  commentId: P:Common.OrderedHashSet`1.ReverseReader.Count
  id: Count
  parent: Common.OrderedHashSet`1.ReverseReader
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: OrderedHashSet<T>.ReverseReader.Count
  fullName: Common.OrderedHashSet<T>.ReverseReader.Count
  type: Property
  source:
    remote:
      path: source/Common/OrderedHashSet.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Count
    path: ../source/Common/OrderedHashSet.cs
    startLine: 223
  assemblies:
  - Common
  namespace: Common
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: Common.OrderedHashSet`1.ReverseReader.Count*
  implements:
  - System.Collections.Generic.IReadOnlyCollection{{T}}.Count
  nameWithType.vb: OrderedHashSet(Of T).ReverseReader.Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Common.OrderedHashSet(Of T).ReverseReader.Count
- uid: Common.OrderedHashSet`1.ReverseReader.#ctor(Common.OrderedHashSet{`0})
  commentId: M:Common.OrderedHashSet`1.ReverseReader.#ctor(Common.OrderedHashSet{`0})
  id: '#ctor(Common.OrderedHashSet{`0})'
  parent: Common.OrderedHashSet`1.ReverseReader
  langs:
  - csharp
  - vb
  name: ReverseReader(OrderedHashSet<T>)
  nameWithType: OrderedHashSet<T>.ReverseReader.ReverseReader(OrderedHashSet<T>)
  fullName: Common.OrderedHashSet<T>.ReverseReader.ReverseReader(Common.OrderedHashSet<T>)
  type: Constructor
  source:
    remote:
      path: source/Common/OrderedHashSet.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: .ctor
    path: ../source/Common/OrderedHashSet.cs
    startLine: 225
  assemblies:
  - Common
  namespace: Common
  syntax:
    content: public ReverseReader(OrderedHashSet<T> set)
    parameters:
    - id: set
      type: Common.OrderedHashSet`1
    content.vb: Public Sub New(set As OrderedHashSet(Of T))
  overload: Common.OrderedHashSet`1.ReverseReader.#ctor*
  nameWithType.vb: OrderedHashSet(Of T).ReverseReader.ReverseReader(OrderedHashSet(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Common.OrderedHashSet(Of T).ReverseReader.ReverseReader(Common.OrderedHashSet(Of T))
  name.vb: ReverseReader(OrderedHashSet(Of T))
- uid: Common.OrderedHashSet`1.ReverseReader.Contains(`0)
  commentId: M:Common.OrderedHashSet`1.ReverseReader.Contains(`0)
  id: Contains(`0)
  parent: Common.OrderedHashSet`1.ReverseReader
  langs:
  - csharp
  - vb
  name: Contains(T)
  nameWithType: OrderedHashSet<T>.ReverseReader.Contains(T)
  fullName: Common.OrderedHashSet<T>.ReverseReader.Contains(T)
  type: Method
  source:
    remote:
      path: source/Common/OrderedHashSet.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Contains
    path: ../source/Common/OrderedHashSet.cs
    startLine: 230
  assemblies:
  - Common
  namespace: Common
  syntax:
    content: public bool Contains(T item)
    parameters:
    - id: item
      type: '{T}'
    return:
      type: System.Boolean
    content.vb: Public Function Contains(item As T) As Boolean
  overload: Common.OrderedHashSet`1.ReverseReader.Contains*
  nameWithType.vb: OrderedHashSet(Of T).ReverseReader.Contains(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Common.OrderedHashSet(Of T).ReverseReader.Contains(T)
- uid: Common.OrderedHashSet`1.ReverseReader.StartWith(`0)
  commentId: M:Common.OrderedHashSet`1.ReverseReader.StartWith(`0)
  id: StartWith(`0)
  parent: Common.OrderedHashSet`1.ReverseReader
  langs:
  - csharp
  - vb
  name: StartWith(T)
  nameWithType: OrderedHashSet<T>.ReverseReader.StartWith(T)
  fullName: Common.OrderedHashSet<T>.ReverseReader.StartWith(T)
  type: Method
  source:
    remote:
      path: source/Common/OrderedHashSet.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: StartWith
    path: ../source/Common/OrderedHashSet.cs
    startLine: 235
  assemblies:
  - Common
  namespace: Common
  syntax:
    content: public OrderedHashSet<T>.ReverseRange StartWith(T item)
    parameters:
    - id: item
      type: '{T}'
    return:
      type: Common.OrderedHashSet`1.ReverseRange
    content.vb: Public Function StartWith(item As T) As OrderedHashSet(Of T).ReverseRange
  overload: Common.OrderedHashSet`1.ReverseReader.StartWith*
  nameWithType.vb: OrderedHashSet(Of T).ReverseReader.StartWith(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Common.OrderedHashSet(Of T).ReverseReader.StartWith(T)
- uid: Common.OrderedHashSet`1.ReverseReader.GetEnumerator
  commentId: M:Common.OrderedHashSet`1.ReverseReader.GetEnumerator
  id: GetEnumerator
  parent: Common.OrderedHashSet`1.ReverseReader
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: OrderedHashSet<T>.ReverseReader.GetEnumerator()
  fullName: Common.OrderedHashSet<T>.ReverseReader.GetEnumerator()
  type: Method
  source:
    remote:
      path: source/Common/OrderedHashSet.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: GetEnumerator
    path: ../source/Common/OrderedHashSet.cs
    startLine: 240
  assemblies:
  - Common
  namespace: Common
  syntax:
    content: public OrderedHashSet<T>.ReverseEnumerator GetEnumerator()
    return:
      type: Common.OrderedHashSet`1.ReverseEnumerator
    content.vb: Public Function GetEnumerator As OrderedHashSet(Of T).ReverseEnumerator
  overload: Common.OrderedHashSet`1.ReverseReader.GetEnumerator*
  nameWithType.vb: OrderedHashSet(Of T).ReverseReader.GetEnumerator()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Common.OrderedHashSet(Of T).ReverseReader.GetEnumerator()
- uid: Common.OrderedHashSet`1.ReverseReader.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Common.OrderedHashSet`1.ReverseReader.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Common.OrderedHashSet`1.ReverseReader
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: OrderedHashSet<T>.ReverseReader.IEnumerable.GetEnumerator()
  fullName: Common.OrderedHashSet<T>.ReverseReader.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: source/Common/OrderedHashSet.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: ../source/Common/OrderedHashSet.cs
    startLine: 245
  assemblies:
  - Common
  namespace: Common
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: Common.OrderedHashSet`1.ReverseReader.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: OrderedHashSet(Of T).ReverseReader.System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Common.OrderedHashSet(Of T).ReverseReader.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: Common.OrderedHashSet`1.ReverseReader.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  commentId: M:Common.OrderedHashSet`1.ReverseReader.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{T}#GetEnumerator
  isEii: true
  parent: Common.OrderedHashSet`1.ReverseReader
  langs:
  - csharp
  - vb
  name: IEnumerable<T>.GetEnumerator()
  nameWithType: OrderedHashSet<T>.ReverseReader.IEnumerable<T>.GetEnumerator()
  fullName: Common.OrderedHashSet<T>.ReverseReader.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  type: Method
  source:
    remote:
      path: source/Common/OrderedHashSet.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    path: ../source/Common/OrderedHashSet.cs
    startLine: 250
  assemblies:
  - Common
  namespace: Common
  syntax:
    content: IEnumerator<T> IEnumerable<T>.GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{{T}}
    content.vb: Function System.Collections.Generic.IEnumerable<T>.GetEnumerator As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator
  overload: Common.OrderedHashSet`1.ReverseReader.System#Collections#Generic#IEnumerable{T}#GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  nameWithType.vb: OrderedHashSet(Of T).ReverseReader.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullName.vb: Common.OrderedHashSet(Of T).ReverseReader.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
references:
- uid: Common
  commentId: N:Common
  name: Common
  nameWithType: Common
  fullName: Common
- uid: System.Collections.Generic.IReadOnlyCollection{{T}}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Common.OrderedHashSet`1
  commentId: T:Common.OrderedHashSet`1
  parent: Common
  name: OrderedHashSet<T>
  nameWithType: OrderedHashSet<T>
  fullName: Common.OrderedHashSet<T>
  nameWithType.vb: OrderedHashSet(Of T)
  fullName.vb: Common.OrderedHashSet(Of T)
  name.vb: OrderedHashSet(Of T)
  spec.csharp:
  - uid: Common.OrderedHashSet`1
    name: OrderedHashSet
    nameWithType: OrderedHashSet
    fullName: Common.OrderedHashSet
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Common.OrderedHashSet`1
    name: OrderedHashSet
    nameWithType: OrderedHashSet
    fullName: Common.OrderedHashSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Common.OrderedHashSet`1.ReverseReader.Count*
  commentId: Overload:Common.OrderedHashSet`1.ReverseReader.Count
  name: Count
  nameWithType: OrderedHashSet<T>.ReverseReader.Count
  fullName: Common.OrderedHashSet<T>.ReverseReader.Count
  nameWithType.vb: OrderedHashSet(Of T).ReverseReader.Count
  fullName.vb: Common.OrderedHashSet(Of T).ReverseReader.Count
- uid: System.Collections.Generic.IReadOnlyCollection{{T}}.Count
  commentId: P:System.Collections.Generic.IReadOnlyCollection{`0}.Count
  parent: System.Collections.Generic.IReadOnlyCollection{{T}}
  definition: System.Collections.Generic.IReadOnlyCollection`1.Count
  name: Count
  nameWithType: IReadOnlyCollection<T>.Count
  fullName: System.Collections.Generic.IReadOnlyCollection<T>.Count
  nameWithType.vb: IReadOnlyCollection(Of T).Count
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T).Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IReadOnlyCollection`1.Count
  commentId: P:System.Collections.Generic.IReadOnlyCollection`1.Count
  isExternal: true
  name: Count
  nameWithType: IReadOnlyCollection<T>.Count
  fullName: System.Collections.Generic.IReadOnlyCollection<T>.Count
  nameWithType.vb: IReadOnlyCollection(Of T).Count
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T).Count
- uid: Common.OrderedHashSet`1.ReverseReader.#ctor*
  commentId: Overload:Common.OrderedHashSet`1.ReverseReader.#ctor
  name: ReverseReader
  nameWithType: OrderedHashSet<T>.ReverseReader.ReverseReader
  fullName: Common.OrderedHashSet<T>.ReverseReader.ReverseReader
  nameWithType.vb: OrderedHashSet(Of T).ReverseReader.ReverseReader
  fullName.vb: Common.OrderedHashSet(Of T).ReverseReader.ReverseReader
- uid: Common.OrderedHashSet`1.ReverseReader.Contains*
  commentId: Overload:Common.OrderedHashSet`1.ReverseReader.Contains
  name: Contains
  nameWithType: OrderedHashSet<T>.ReverseReader.Contains
  fullName: Common.OrderedHashSet<T>.ReverseReader.Contains
  nameWithType.vb: OrderedHashSet(Of T).ReverseReader.Contains
  fullName.vb: Common.OrderedHashSet(Of T).ReverseReader.Contains
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Common.OrderedHashSet`1.ReverseReader.StartWith*
  commentId: Overload:Common.OrderedHashSet`1.ReverseReader.StartWith
  name: StartWith
  nameWithType: OrderedHashSet<T>.ReverseReader.StartWith
  fullName: Common.OrderedHashSet<T>.ReverseReader.StartWith
  nameWithType.vb: OrderedHashSet(Of T).ReverseReader.StartWith
  fullName.vb: Common.OrderedHashSet(Of T).ReverseReader.StartWith
- uid: Common.OrderedHashSet`1.ReverseRange
  commentId: T:Common.OrderedHashSet`1.ReverseRange
  parent: Common
  name: OrderedHashSet.ReverseRange<>
  nameWithType: OrderedHashSet.ReverseRange<>
  fullName: Common.OrderedHashSet.ReverseRange<>
  nameWithType.vb: OrderedHashSet.ReverseRange(Of )
  fullName.vb: Common.OrderedHashSet.ReverseRange(Of )
  name.vb: OrderedHashSet.ReverseRange(Of )
  spec.csharp:
  - uid: Common.OrderedHashSet`1.ReverseRange
    name: OrderedHashSet.ReverseRange
    nameWithType: OrderedHashSet.ReverseRange
    fullName: Common.OrderedHashSet.ReverseRange
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Common.OrderedHashSet`1.ReverseRange
    name: OrderedHashSet.ReverseRange
    nameWithType: OrderedHashSet.ReverseRange
    fullName: Common.OrderedHashSet.ReverseRange
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: Common.OrderedHashSet`1.ReverseReader.GetEnumerator*
  commentId: Overload:Common.OrderedHashSet`1.ReverseReader.GetEnumerator
  name: GetEnumerator
  nameWithType: OrderedHashSet<T>.ReverseReader.GetEnumerator
  fullName: Common.OrderedHashSet<T>.ReverseReader.GetEnumerator
  nameWithType.vb: OrderedHashSet(Of T).ReverseReader.GetEnumerator
  fullName.vb: Common.OrderedHashSet(Of T).ReverseReader.GetEnumerator
- uid: Common.OrderedHashSet`1.ReverseEnumerator
  commentId: T:Common.OrderedHashSet`1.ReverseEnumerator
  parent: Common
  name: OrderedHashSet.ReverseEnumerator<>
  nameWithType: OrderedHashSet.ReverseEnumerator<>
  fullName: Common.OrderedHashSet.ReverseEnumerator<>
  nameWithType.vb: OrderedHashSet.ReverseEnumerator(Of )
  fullName.vb: Common.OrderedHashSet.ReverseEnumerator(Of )
  name.vb: OrderedHashSet.ReverseEnumerator(Of )
  spec.csharp:
  - uid: Common.OrderedHashSet`1.ReverseEnumerator
    name: OrderedHashSet.ReverseEnumerator
    nameWithType: OrderedHashSet.ReverseEnumerator
    fullName: Common.OrderedHashSet.ReverseEnumerator
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Common.OrderedHashSet`1.ReverseEnumerator
    name: OrderedHashSet.ReverseEnumerator
    nameWithType: OrderedHashSet.ReverseEnumerator
    fullName: Common.OrderedHashSet.ReverseEnumerator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: Common.OrderedHashSet`1.ReverseReader.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:Common.OrderedHashSet`1.ReverseReader.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator
  nameWithType: OrderedHashSet<T>.ReverseReader.IEnumerable.GetEnumerator
  fullName: Common.OrderedHashSet<T>.ReverseReader.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: OrderedHashSet(Of T).ReverseReader.System.Collections.IEnumerable.GetEnumerator
  fullName.vb: Common.OrderedHashSet(Of T).ReverseReader.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: Common.OrderedHashSet`1.ReverseReader.System#Collections#Generic#IEnumerable{T}#GetEnumerator*
  commentId: Overload:Common.OrderedHashSet`1.ReverseReader.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  name: IEnumerable<T>.GetEnumerator
  nameWithType: OrderedHashSet<T>.ReverseReader.IEnumerable<T>.GetEnumerator
  fullName: Common.OrderedHashSet<T>.ReverseReader.System.Collections.Generic.IEnumerable<T>.GetEnumerator
  nameWithType.vb: OrderedHashSet(Of T).ReverseReader.System.Collections.Generic.IEnumerable<T>.GetEnumerator
  fullName.vb: Common.OrderedHashSet(Of T).ReverseReader.System.Collections.Generic.IEnumerable<T>.GetEnumerator
  name.vb: System.Collections.Generic.IEnumerable<T>.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{`0}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{{T}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{{T}}
  commentId: T:System.Collections.Generic.IEnumerator{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
