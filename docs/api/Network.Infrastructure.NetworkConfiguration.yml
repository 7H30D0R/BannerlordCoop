### YamlMime:ManagedReference
items:
- uid: Network.Infrastructure.NetworkConfiguration
  commentId: T:Network.Infrastructure.NetworkConfiguration
  id: NetworkConfiguration
  parent: Network.Infrastructure
  children:
  - Network.Infrastructure.NetworkConfiguration.DisconnectTimeout
  - Network.Infrastructure.NetworkConfiguration.KeepAliveInterval
  - Network.Infrastructure.NetworkConfiguration.LanAddress
  - Network.Infrastructure.NetworkConfiguration.LanDiscoveryInterval
  - Network.Infrastructure.NetworkConfiguration.LanDiscoveryPort
  - Network.Infrastructure.NetworkConfiguration.LanPort
  - Network.Infrastructure.NetworkConfiguration.ReconnectDelay
  - Network.Infrastructure.NetworkConfiguration.UpdateTime
  - Network.Infrastructure.NetworkConfiguration.WanAddress
  - Network.Infrastructure.NetworkConfiguration.WanPort
  langs:
  - csharp
  - vb
  name: NetworkConfiguration
  nameWithType: NetworkConfiguration
  fullName: Network.Infrastructure.NetworkConfiguration
  type: Class
  source:
    remote:
      path: source/Network/Infrastructure/NetworkConfiguration.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: NetworkConfiguration
    path: ../source/Network/Infrastructure/NetworkConfiguration.cs
    startLine: 9
  assemblies:
  - Network
  namespace: Network.Infrastructure
  syntax:
    content: public class NetworkConfiguration
    content.vb: Public Class NetworkConfiguration
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Network.Infrastructure.NetworkConfiguration.LanAddress
  commentId: P:Network.Infrastructure.NetworkConfiguration.LanAddress
  id: LanAddress
  parent: Network.Infrastructure.NetworkConfiguration
  langs:
  - csharp
  - vb
  name: LanAddress
  nameWithType: NetworkConfiguration.LanAddress
  fullName: Network.Infrastructure.NetworkConfiguration.LanAddress
  type: Property
  source:
    remote:
      path: source/Network/Infrastructure/NetworkConfiguration.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: LanAddress
    path: ../source/Network/Infrastructure/NetworkConfiguration.cs
    startLine: 14
  assemblies:
  - Network
  namespace: Network.Infrastructure
  summary: "\nip address of the server in LAN.\n"
  example: []
  syntax:
    content: public IPAddress LanAddress { get; set; }
    parameters: []
    return:
      type: System.Net.IPAddress
    content.vb: Public Property LanAddress As IPAddress
  overload: Network.Infrastructure.NetworkConfiguration.LanAddress*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Network.Infrastructure.NetworkConfiguration.LanPort
  commentId: P:Network.Infrastructure.NetworkConfiguration.LanPort
  id: LanPort
  parent: Network.Infrastructure.NetworkConfiguration
  langs:
  - csharp
  - vb
  name: LanPort
  nameWithType: NetworkConfiguration.LanPort
  fullName: Network.Infrastructure.NetworkConfiguration.LanPort
  type: Property
  source:
    remote:
      path: source/Network/Infrastructure/NetworkConfiguration.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: LanPort
    path: ../source/Network/Infrastructure/NetworkConfiguration.cs
    startLine: 18
  assemblies:
  - Network
  namespace: Network.Infrastructure
  summary: "\nport of the server in LAN.\n"
  example: []
  syntax:
    content: public int LanPort { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property LanPort As Integer
  overload: Network.Infrastructure.NetworkConfiguration.LanPort*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Network.Infrastructure.NetworkConfiguration.WanAddress
  commentId: P:Network.Infrastructure.NetworkConfiguration.WanAddress
  id: WanAddress
  parent: Network.Infrastructure.NetworkConfiguration
  langs:
  - csharp
  - vb
  name: WanAddress
  nameWithType: NetworkConfiguration.WanAddress
  fullName: Network.Infrastructure.NetworkConfiguration.WanAddress
  type: Property
  source:
    remote:
      path: source/Network/Infrastructure/NetworkConfiguration.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: WanAddress
    path: ../source/Network/Infrastructure/NetworkConfiguration.cs
    startLine: 22
  assemblies:
  - Network
  namespace: Network.Infrastructure
  summary: "\nip address of the server in WAN.\n"
  example: []
  syntax:
    content: public IPAddress WanAddress { get; set; }
    parameters: []
    return:
      type: System.Net.IPAddress
    content.vb: Public Property WanAddress As IPAddress
  overload: Network.Infrastructure.NetworkConfiguration.WanAddress*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Network.Infrastructure.NetworkConfiguration.WanPort
  commentId: P:Network.Infrastructure.NetworkConfiguration.WanPort
  id: WanPort
  parent: Network.Infrastructure.NetworkConfiguration
  langs:
  - csharp
  - vb
  name: WanPort
  nameWithType: NetworkConfiguration.WanPort
  fullName: Network.Infrastructure.NetworkConfiguration.WanPort
  type: Property
  source:
    remote:
      path: source/Network/Infrastructure/NetworkConfiguration.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: WanPort
    path: ../source/Network/Infrastructure/NetworkConfiguration.cs
    startLine: 26
  assemblies:
  - Network
  namespace: Network.Infrastructure
  summary: "\nport of the server in WAN.\n"
  example: []
  syntax:
    content: public int WanPort { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property WanPort As Integer
  overload: Network.Infrastructure.NetworkConfiguration.WanPort*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Network.Infrastructure.NetworkConfiguration.LanDiscoveryInterval
  commentId: P:Network.Infrastructure.NetworkConfiguration.LanDiscoveryInterval
  id: LanDiscoveryInterval
  parent: Network.Infrastructure.NetworkConfiguration
  langs:
  - csharp
  - vb
  name: LanDiscoveryInterval
  nameWithType: NetworkConfiguration.LanDiscoveryInterval
  fullName: Network.Infrastructure.NetworkConfiguration.LanDiscoveryInterval
  type: Property
  source:
    remote:
      path: source/Network/Infrastructure/NetworkConfiguration.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: LanDiscoveryInterval
    path: ../source/Network/Infrastructure/NetworkConfiguration.cs
    startLine: 30
  assemblies:
  - Network
  namespace: Network.Infrastructure
  summary: "\nInterval in which the server will send out LAN discovery messages.\n"
  example: []
  syntax:
    content: public TimeSpan LanDiscoveryInterval { get; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public ReadOnly Property LanDiscoveryInterval As TimeSpan
  overload: Network.Infrastructure.NetworkConfiguration.LanDiscoveryInterval*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Network.Infrastructure.NetworkConfiguration.LanDiscoveryPort
  commentId: P:Network.Infrastructure.NetworkConfiguration.LanDiscoveryPort
  id: LanDiscoveryPort
  parent: Network.Infrastructure.NetworkConfiguration
  langs:
  - csharp
  - vb
  name: LanDiscoveryPort
  nameWithType: NetworkConfiguration.LanDiscoveryPort
  fullName: Network.Infrastructure.NetworkConfiguration.LanDiscoveryPort
  type: Property
  source:
    remote:
      path: source/Network/Infrastructure/NetworkConfiguration.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: LanDiscoveryPort
    path: ../source/Network/Infrastructure/NetworkConfiguration.cs
    startLine: 34
  assemblies:
  - Network
  namespace: Network.Infrastructure
  summary: "\nport the server will broadcast a LAN discovery message.\n"
  example: []
  syntax:
    content: public int LanDiscoveryPort { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property LanDiscoveryPort As Integer
  overload: Network.Infrastructure.NetworkConfiguration.LanDiscoveryPort*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Network.Infrastructure.NetworkConfiguration.KeepAliveInterval
  commentId: P:Network.Infrastructure.NetworkConfiguration.KeepAliveInterval
  id: KeepAliveInterval
  parent: Network.Infrastructure.NetworkConfiguration
  langs:
  - csharp
  - vb
  name: KeepAliveInterval
  nameWithType: NetworkConfiguration.KeepAliveInterval
  fullName: Network.Infrastructure.NetworkConfiguration.KeepAliveInterval
  type: Property
  source:
    remote:
      path: source/Network/Infrastructure/NetworkConfiguration.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: KeepAliveInterval
    path: ../source/Network/Infrastructure/NetworkConfiguration.cs
    startLine: 39
  assemblies:
  - Network
  namespace: Network.Infrastructure
  summary: "\nInterval in which the server will send out <xref href=\"Network.Protocol.EPacket.KeepAlive\" data-throw-if-not-resolved=\"false\"></xref>\npackets.\n"
  example: []
  syntax:
    content: public TimeSpan KeepAliveInterval { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property KeepAliveInterval As TimeSpan
  overload: Network.Infrastructure.NetworkConfiguration.KeepAliveInterval*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Network.Infrastructure.NetworkConfiguration.DisconnectTimeout
  commentId: P:Network.Infrastructure.NetworkConfiguration.DisconnectTimeout
  id: DisconnectTimeout
  parent: Network.Infrastructure.NetworkConfiguration
  langs:
  - csharp
  - vb
  name: DisconnectTimeout
  nameWithType: NetworkConfiguration.DisconnectTimeout
  fullName: Network.Infrastructure.NetworkConfiguration.DisconnectTimeout
  type: Property
  source:
    remote:
      path: source/Network/Infrastructure/NetworkConfiguration.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: DisconnectTimeout
    path: ../source/Network/Infrastructure/NetworkConfiguration.cs
    startLine: 44
  assemblies:
  - Network
  namespace: Network.Infrastructure
  summary: "\nIf a connection is inactive (no requests or response) for longer than this time\nframe, it will be disconnected.\n"
  example: []
  syntax:
    content: public TimeSpan DisconnectTimeout { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property DisconnectTimeout As TimeSpan
  overload: Network.Infrastructure.NetworkConfiguration.DisconnectTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Network.Infrastructure.NetworkConfiguration.ReconnectDelay
  commentId: P:Network.Infrastructure.NetworkConfiguration.ReconnectDelay
  id: ReconnectDelay
  parent: Network.Infrastructure.NetworkConfiguration
  langs:
  - csharp
  - vb
  name: ReconnectDelay
  nameWithType: NetworkConfiguration.ReconnectDelay
  fullName: Network.Infrastructure.NetworkConfiguration.ReconnectDelay
  type: Property
  source:
    remote:
      path: source/Network/Infrastructure/NetworkConfiguration.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ReconnectDelay
    path: ../source/Network/Infrastructure/NetworkConfiguration.cs
    startLine: 48
  assemblies:
  - Network
  namespace: Network.Infrastructure
  summary: "\nDelay after a failed connection attempt until it is tried again.\n"
  example: []
  syntax:
    content: public TimeSpan ReconnectDelay { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property ReconnectDelay As TimeSpan
  overload: Network.Infrastructure.NetworkConfiguration.ReconnectDelay*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Network.Infrastructure.NetworkConfiguration.UpdateTime
  commentId: P:Network.Infrastructure.NetworkConfiguration.UpdateTime
  id: UpdateTime
  parent: Network.Infrastructure.NetworkConfiguration
  langs:
  - csharp
  - vb
  name: UpdateTime
  nameWithType: NetworkConfiguration.UpdateTime
  fullName: Network.Infrastructure.NetworkConfiguration.UpdateTime
  type: Property
  source:
    remote:
      path: source/Network/Infrastructure/NetworkConfiguration.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: UpdateTime
    path: ../source/Network/Infrastructure/NetworkConfiguration.cs
    startLine: 52
  assemblies:
  - Network
  namespace: Network.Infrastructure
  summary: "\nUpdate cycle time for the network receiver.\n"
  example: []
  syntax:
    content: public TimeSpan UpdateTime { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property UpdateTime As TimeSpan
  overload: Network.Infrastructure.NetworkConfiguration.UpdateTime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Network.Infrastructure
  commentId: N:Network.Infrastructure
  name: Network.Infrastructure
  nameWithType: Network.Infrastructure
  fullName: Network.Infrastructure
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Network.Infrastructure.NetworkConfiguration.LanAddress*
  commentId: Overload:Network.Infrastructure.NetworkConfiguration.LanAddress
  name: LanAddress
  nameWithType: NetworkConfiguration.LanAddress
  fullName: Network.Infrastructure.NetworkConfiguration.LanAddress
- uid: System.Net.IPAddress
  commentId: T:System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: Network.Infrastructure.NetworkConfiguration.LanPort*
  commentId: Overload:Network.Infrastructure.NetworkConfiguration.LanPort
  name: LanPort
  nameWithType: NetworkConfiguration.LanPort
  fullName: Network.Infrastructure.NetworkConfiguration.LanPort
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Network.Infrastructure.NetworkConfiguration.WanAddress*
  commentId: Overload:Network.Infrastructure.NetworkConfiguration.WanAddress
  name: WanAddress
  nameWithType: NetworkConfiguration.WanAddress
  fullName: Network.Infrastructure.NetworkConfiguration.WanAddress
- uid: Network.Infrastructure.NetworkConfiguration.WanPort*
  commentId: Overload:Network.Infrastructure.NetworkConfiguration.WanPort
  name: WanPort
  nameWithType: NetworkConfiguration.WanPort
  fullName: Network.Infrastructure.NetworkConfiguration.WanPort
- uid: Network.Infrastructure.NetworkConfiguration.LanDiscoveryInterval*
  commentId: Overload:Network.Infrastructure.NetworkConfiguration.LanDiscoveryInterval
  name: LanDiscoveryInterval
  nameWithType: NetworkConfiguration.LanDiscoveryInterval
  fullName: Network.Infrastructure.NetworkConfiguration.LanDiscoveryInterval
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Network.Infrastructure.NetworkConfiguration.LanDiscoveryPort*
  commentId: Overload:Network.Infrastructure.NetworkConfiguration.LanDiscoveryPort
  name: LanDiscoveryPort
  nameWithType: NetworkConfiguration.LanDiscoveryPort
  fullName: Network.Infrastructure.NetworkConfiguration.LanDiscoveryPort
- uid: Network.Protocol.EPacket.KeepAlive
  commentId: F:Network.Protocol.EPacket.KeepAlive
  isExternal: true
- uid: Network.Infrastructure.NetworkConfiguration.KeepAliveInterval*
  commentId: Overload:Network.Infrastructure.NetworkConfiguration.KeepAliveInterval
  name: KeepAliveInterval
  nameWithType: NetworkConfiguration.KeepAliveInterval
  fullName: Network.Infrastructure.NetworkConfiguration.KeepAliveInterval
- uid: Network.Infrastructure.NetworkConfiguration.DisconnectTimeout*
  commentId: Overload:Network.Infrastructure.NetworkConfiguration.DisconnectTimeout
  name: DisconnectTimeout
  nameWithType: NetworkConfiguration.DisconnectTimeout
  fullName: Network.Infrastructure.NetworkConfiguration.DisconnectTimeout
- uid: Network.Infrastructure.NetworkConfiguration.ReconnectDelay*
  commentId: Overload:Network.Infrastructure.NetworkConfiguration.ReconnectDelay
  name: ReconnectDelay
  nameWithType: NetworkConfiguration.ReconnectDelay
  fullName: Network.Infrastructure.NetworkConfiguration.ReconnectDelay
- uid: Network.Infrastructure.NetworkConfiguration.UpdateTime*
  commentId: Overload:Network.Infrastructure.NetworkConfiguration.UpdateTime
  name: UpdateTime
  nameWithType: NetworkConfiguration.UpdateTime
  fullName: Network.Infrastructure.NetworkConfiguration.UpdateTime
