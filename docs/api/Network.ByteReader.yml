### YamlMime:ManagedReference
items:
- uid: Network.ByteReader
  commentId: T:Network.ByteReader
  id: ByteReader
  parent: Network
  children:
  - Network.ByteReader.#ctor(System.ArraySegment{System.Byte})
  - Network.ByteReader.#ctor(System.IO.MemoryStream)
  - Network.ByteReader.Binary
  - Network.ByteReader.m_Stream
  - Network.ByteReader.PeekByte
  - Network.ByteReader.PeekInt32
  - Network.ByteReader.Position
  - Network.ByteReader.RemainingBytes
  - Network.ByteReader.ToArray
  langs:
  - csharp
  - vb
  name: ByteReader
  nameWithType: ByteReader
  fullName: Network.ByteReader
  type: Class
  source:
    remote:
      path: source/Network/ByteReader.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ByteReader
    path: ../source/Network/ByteReader.cs
    startLine: 5
  assemblies:
  - Network
  namespace: Network
  syntax:
    content: public class ByteReader
    content.vb: Public Class ByteReader
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Network.ByteReader.Binary
  commentId: F:Network.ByteReader.Binary
  id: Binary
  parent: Network.ByteReader
  langs:
  - csharp
  - vb
  name: Binary
  nameWithType: ByteReader.Binary
  fullName: Network.ByteReader.Binary
  type: Field
  source:
    remote:
      path: source/Network/ByteReader.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Binary
    path: ../source/Network/ByteReader.cs
    startLine: 7
  assemblies:
  - Network
  namespace: Network
  syntax:
    content: public readonly BinaryReader Binary
    return:
      type: System.IO.BinaryReader
    content.vb: Public ReadOnly Binary As BinaryReader
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Network.ByteReader.m_Stream
  commentId: F:Network.ByteReader.m_Stream
  id: m_Stream
  parent: Network.ByteReader
  langs:
  - csharp
  - vb
  name: m_Stream
  nameWithType: ByteReader.m_Stream
  fullName: Network.ByteReader.m_Stream
  type: Field
  source:
    remote:
      path: source/Network/ByteReader.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_Stream
    path: ../source/Network/ByteReader.cs
    startLine: 8
  assemblies:
  - Network
  namespace: Network
  syntax:
    content: readonly MemoryStream m_Stream
    return:
      type: System.IO.MemoryStream
    content.vb: ReadOnly m_Stream As MemoryStream
  modifiers.csharp:
  - readonly
  modifiers.vb:
  - ReadOnly
- uid: Network.ByteReader.#ctor(System.ArraySegment{System.Byte})
  commentId: M:Network.ByteReader.#ctor(System.ArraySegment{System.Byte})
  id: '#ctor(System.ArraySegment{System.Byte})'
  parent: Network.ByteReader
  langs:
  - csharp
  - vb
  name: ByteReader(ArraySegment<Byte>)
  nameWithType: ByteReader.ByteReader(ArraySegment<Byte>)
  fullName: Network.ByteReader.ByteReader(System.ArraySegment<System.Byte>)
  type: Constructor
  source:
    remote:
      path: source/Network/ByteReader.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: .ctor
    path: ../source/Network/ByteReader.cs
    startLine: 10
  assemblies:
  - Network
  namespace: Network
  syntax:
    content: public ByteReader(ArraySegment<byte> buffer)
    parameters:
    - id: buffer
      type: System.ArraySegment{System.Byte}
    content.vb: Public Sub New(buffer As ArraySegment(Of Byte))
  overload: Network.ByteReader.#ctor*
  nameWithType.vb: ByteReader.ByteReader(ArraySegment(Of Byte))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Network.ByteReader.ByteReader(System.ArraySegment(Of System.Byte))
  name.vb: ByteReader(ArraySegment(Of Byte))
- uid: Network.ByteReader.#ctor(System.IO.MemoryStream)
  commentId: M:Network.ByteReader.#ctor(System.IO.MemoryStream)
  id: '#ctor(System.IO.MemoryStream)'
  parent: Network.ByteReader
  langs:
  - csharp
  - vb
  name: ByteReader(MemoryStream)
  nameWithType: ByteReader.ByteReader(MemoryStream)
  fullName: Network.ByteReader.ByteReader(System.IO.MemoryStream)
  type: Constructor
  source:
    remote:
      path: source/Network/ByteReader.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: .ctor
    path: ../source/Network/ByteReader.cs
    startLine: 16
  assemblies:
  - Network
  namespace: Network
  syntax:
    content: public ByteReader(MemoryStream stream)
    parameters:
    - id: stream
      type: System.IO.MemoryStream
    content.vb: Public Sub New(stream As MemoryStream)
  overload: Network.ByteReader.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Network.ByteReader.RemainingBytes
  commentId: P:Network.ByteReader.RemainingBytes
  id: RemainingBytes
  parent: Network.ByteReader
  langs:
  - csharp
  - vb
  name: RemainingBytes
  nameWithType: ByteReader.RemainingBytes
  fullName: Network.ByteReader.RemainingBytes
  type: Property
  source:
    remote:
      path: source/Network/ByteReader.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: RemainingBytes
    path: ../source/Network/ByteReader.cs
    startLine: 22
  assemblies:
  - Network
  namespace: Network
  syntax:
    content: public long RemainingBytes { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property RemainingBytes As Long
  overload: Network.ByteReader.RemainingBytes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Network.ByteReader.Position
  commentId: P:Network.ByteReader.Position
  id: Position
  parent: Network.ByteReader
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: ByteReader.Position
  fullName: Network.ByteReader.Position
  type: Property
  source:
    remote:
      path: source/Network/ByteReader.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Position
    path: ../source/Network/ByteReader.cs
    startLine: 23
  assemblies:
  - Network
  namespace: Network
  syntax:
    content: public long Position { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property Position As Long
  overload: Network.ByteReader.Position*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Network.ByteReader.ToArray
  commentId: M:Network.ByteReader.ToArray
  id: ToArray
  parent: Network.ByteReader
  langs:
  - csharp
  - vb
  name: ToArray()
  nameWithType: ByteReader.ToArray()
  fullName: Network.ByteReader.ToArray()
  type: Method
  source:
    remote:
      path: source/Network/ByteReader.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ToArray
    path: ../source/Network/ByteReader.cs
    startLine: 25
  assemblies:
  - Network
  namespace: Network
  syntax:
    content: public byte[] ToArray()
    return:
      type: System.Byte[]
    content.vb: Public Function ToArray As Byte()
  overload: Network.ByteReader.ToArray*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Network.ByteReader.PeekByte
  commentId: M:Network.ByteReader.PeekByte
  id: PeekByte
  parent: Network.ByteReader
  langs:
  - csharp
  - vb
  name: PeekByte()
  nameWithType: ByteReader.PeekByte()
  fullName: Network.ByteReader.PeekByte()
  type: Method
  source:
    remote:
      path: source/Network/ByteReader.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: PeekByte
    path: ../source/Network/ByteReader.cs
    startLine: 30
  assemblies:
  - Network
  namespace: Network
  syntax:
    content: public byte PeekByte()
    return:
      type: System.Byte
    content.vb: Public Function PeekByte As Byte
  overload: Network.ByteReader.PeekByte*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Network.ByteReader.PeekInt32
  commentId: M:Network.ByteReader.PeekInt32
  id: PeekInt32
  parent: Network.ByteReader
  langs:
  - csharp
  - vb
  name: PeekInt32()
  nameWithType: ByteReader.PeekInt32()
  fullName: Network.ByteReader.PeekInt32()
  type: Method
  source:
    remote:
      path: source/Network/ByteReader.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: PeekInt32
    path: ../source/Network/ByteReader.cs
    startLine: 37
  assemblies:
  - Network
  namespace: Network
  syntax:
    content: public int PeekInt32()
    return:
      type: System.Int32
    content.vb: Public Function PeekInt32 As Integer
  overload: Network.ByteReader.PeekInt32*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Network
  commentId: N:Network
  name: Network
  nameWithType: Network
  fullName: Network
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.IO.BinaryReader
  commentId: T:System.IO.BinaryReader
  parent: System.IO
  isExternal: true
  name: BinaryReader
  nameWithType: BinaryReader
  fullName: System.IO.BinaryReader
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.IO.MemoryStream
  commentId: T:System.IO.MemoryStream
  parent: System.IO
  isExternal: true
  name: MemoryStream
  nameWithType: MemoryStream
  fullName: System.IO.MemoryStream
- uid: Network.ByteReader.#ctor*
  commentId: Overload:Network.ByteReader.#ctor
  name: ByteReader
  nameWithType: ByteReader.ByteReader
  fullName: Network.ByteReader.ByteReader
- uid: System.ArraySegment{System.Byte}
  commentId: T:System.ArraySegment{System.Byte}
  parent: System
  definition: System.ArraySegment`1
  name: ArraySegment<Byte>
  nameWithType: ArraySegment<Byte>
  fullName: System.ArraySegment<System.Byte>
  nameWithType.vb: ArraySegment(Of Byte)
  fullName.vb: System.ArraySegment(Of System.Byte)
  name.vb: ArraySegment(Of Byte)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ArraySegment`1
  commentId: T:System.ArraySegment`1
  isExternal: true
  name: ArraySegment<T>
  nameWithType: ArraySegment<T>
  fullName: System.ArraySegment<T>
  nameWithType.vb: ArraySegment(Of T)
  fullName.vb: System.ArraySegment(Of T)
  name.vb: ArraySegment(Of T)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Network.ByteReader.RemainingBytes*
  commentId: Overload:Network.ByteReader.RemainingBytes
  name: RemainingBytes
  nameWithType: ByteReader.RemainingBytes
  fullName: Network.ByteReader.RemainingBytes
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Network.ByteReader.Position*
  commentId: Overload:Network.ByteReader.Position
  name: Position
  nameWithType: ByteReader.Position
  fullName: Network.ByteReader.Position
- uid: Network.ByteReader.ToArray*
  commentId: Overload:Network.ByteReader.ToArray
  name: ToArray
  nameWithType: ByteReader.ToArray
  fullName: Network.ByteReader.ToArray
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Network.ByteReader.PeekByte*
  commentId: Overload:Network.ByteReader.PeekByte
  name: PeekByte
  nameWithType: ByteReader.PeekByte
  fullName: Network.ByteReader.PeekByte
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: Network.ByteReader.PeekInt32*
  commentId: Overload:Network.ByteReader.PeekInt32
  name: PeekInt32
  nameWithType: ByteReader.PeekInt32
  fullName: Network.ByteReader.PeekInt32
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
