### YamlMime:ManagedReference
items:
- uid: Coop.Mod.CoopClientSM
  commentId: T:Coop.Mod.CoopClientSM
  id: CoopClientSM
  parent: Coop.Mod
  children:
  - Coop.Mod.CoopClientSM.#ctor
  - Coop.Mod.CoopClientSM.CharacterCreationState
  - Coop.Mod.CoopClientSM.LoadingState
  - Coop.Mod.CoopClientSM.MainMenuState
  - Coop.Mod.CoopClientSM.PlayingState
  - Coop.Mod.CoopClientSM.ReceivingWorldDataState
  langs:
  - csharp
  - vb
  name: CoopClientSM
  nameWithType: CoopClientSM
  fullName: Coop.Mod.CoopClientSM
  type: Class
  source:
    remote:
      path: source/Coop/Mod/CoopClientSM.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: CoopClientSM
    path: ../source/Coop/Mod/CoopClientSM.cs
    startLine: 69
  assemblies:
  - Coop
  namespace: Coop.Mod
  summary: "\nDefines state machine used by CoopClient\n"
  example: []
  syntax:
    content: 'class CoopClientSM : CoopStateMachine<ECoopClientState, ECoopClientTrigger>'
    content.vb: >-
      Class CoopClientSM
          Inherits CoopStateMachine(Of ECoopClientState, ECoopClientTrigger)
  inheritance:
  - System.Object
  - Common.CoopStateMachine
  - Common.CoopStateMachine{Coop.Mod.ECoopClientState,Coop.Mod.ECoopClientTrigger}
  inheritedMembers:
  - Common.CoopStateMachine{Coop.Mod.ECoopClientState,Coop.Mod.ECoopClientTrigger}.Logger
  - Common.CoopStateMachine{Coop.Mod.ECoopClientState,Coop.Mod.ECoopClientTrigger}.StateMachine
  - Common.CoopStateMachine.State
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - class
  modifiers.vb:
  - Class
- uid: Coop.Mod.CoopClientSM.MainMenuState
  commentId: F:Coop.Mod.CoopClientSM.MainMenuState
  id: MainMenuState
  parent: Coop.Mod.CoopClientSM
  langs:
  - csharp
  - vb
  name: MainMenuState
  nameWithType: CoopClientSM.MainMenuState
  fullName: Coop.Mod.CoopClientSM.MainMenuState
  type: Field
  source:
    remote:
      path: source/Coop/Mod/CoopClientSM.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: MainMenuState
    path: ../source/Coop/Mod/CoopClientSM.cs
    startLine: 71
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public readonly StateMachine<ECoopClientState, ECoopClientTrigger>.StateConfiguration MainMenuState
    return:
      type: Stateless.StateMachine{Coop.Mod.ECoopClientState,Coop.Mod.ECoopClientTrigger}.StateConfiguration
    content.vb: Public ReadOnly MainMenuState As StateMachine(Of ECoopClientState, ECoopClientTrigger).StateConfiguration
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Coop.Mod.CoopClientSM.CharacterCreationState
  commentId: F:Coop.Mod.CoopClientSM.CharacterCreationState
  id: CharacterCreationState
  parent: Coop.Mod.CoopClientSM
  langs:
  - csharp
  - vb
  name: CharacterCreationState
  nameWithType: CoopClientSM.CharacterCreationState
  fullName: Coop.Mod.CoopClientSM.CharacterCreationState
  type: Field
  source:
    remote:
      path: source/Coop/Mod/CoopClientSM.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: CharacterCreationState
    path: ../source/Coop/Mod/CoopClientSM.cs
    startLine: 72
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public readonly StateMachine<ECoopClientState, ECoopClientTrigger>.StateConfiguration CharacterCreationState
    return:
      type: Stateless.StateMachine{Coop.Mod.ECoopClientState,Coop.Mod.ECoopClientTrigger}.StateConfiguration
    content.vb: Public ReadOnly CharacterCreationState As StateMachine(Of ECoopClientState, ECoopClientTrigger).StateConfiguration
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Coop.Mod.CoopClientSM.ReceivingWorldDataState
  commentId: F:Coop.Mod.CoopClientSM.ReceivingWorldDataState
  id: ReceivingWorldDataState
  parent: Coop.Mod.CoopClientSM
  langs:
  - csharp
  - vb
  name: ReceivingWorldDataState
  nameWithType: CoopClientSM.ReceivingWorldDataState
  fullName: Coop.Mod.CoopClientSM.ReceivingWorldDataState
  type: Field
  source:
    remote:
      path: source/Coop/Mod/CoopClientSM.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: ReceivingWorldDataState
    path: ../source/Coop/Mod/CoopClientSM.cs
    startLine: 73
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public readonly StateMachine<ECoopClientState, ECoopClientTrigger>.StateConfiguration ReceivingWorldDataState
    return:
      type: Stateless.StateMachine{Coop.Mod.ECoopClientState,Coop.Mod.ECoopClientTrigger}.StateConfiguration
    content.vb: Public ReadOnly ReceivingWorldDataState As StateMachine(Of ECoopClientState, ECoopClientTrigger).StateConfiguration
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Coop.Mod.CoopClientSM.LoadingState
  commentId: F:Coop.Mod.CoopClientSM.LoadingState
  id: LoadingState
  parent: Coop.Mod.CoopClientSM
  langs:
  - csharp
  - vb
  name: LoadingState
  nameWithType: CoopClientSM.LoadingState
  fullName: Coop.Mod.CoopClientSM.LoadingState
  type: Field
  source:
    remote:
      path: source/Coop/Mod/CoopClientSM.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: LoadingState
    path: ../source/Coop/Mod/CoopClientSM.cs
    startLine: 74
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public readonly StateMachine<ECoopClientState, ECoopClientTrigger>.StateConfiguration LoadingState
    return:
      type: Stateless.StateMachine{Coop.Mod.ECoopClientState,Coop.Mod.ECoopClientTrigger}.StateConfiguration
    content.vb: Public ReadOnly LoadingState As StateMachine(Of ECoopClientState, ECoopClientTrigger).StateConfiguration
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Coop.Mod.CoopClientSM.PlayingState
  commentId: F:Coop.Mod.CoopClientSM.PlayingState
  id: PlayingState
  parent: Coop.Mod.CoopClientSM
  langs:
  - csharp
  - vb
  name: PlayingState
  nameWithType: CoopClientSM.PlayingState
  fullName: Coop.Mod.CoopClientSM.PlayingState
  type: Field
  source:
    remote:
      path: source/Coop/Mod/CoopClientSM.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: PlayingState
    path: ../source/Coop/Mod/CoopClientSM.cs
    startLine: 75
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public readonly StateMachine<ECoopClientState, ECoopClientTrigger>.StateConfiguration PlayingState
    return:
      type: Stateless.StateMachine{Coop.Mod.ECoopClientState,Coop.Mod.ECoopClientTrigger}.StateConfiguration
    content.vb: Public ReadOnly PlayingState As StateMachine(Of ECoopClientState, ECoopClientTrigger).StateConfiguration
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Coop.Mod.CoopClientSM.#ctor
  commentId: M:Coop.Mod.CoopClientSM.#ctor
  id: '#ctor'
  parent: Coop.Mod.CoopClientSM
  langs:
  - csharp
  - vb
  name: CoopClientSM()
  nameWithType: CoopClientSM.CoopClientSM()
  fullName: Coop.Mod.CoopClientSM.CoopClientSM()
  type: Constructor
  source:
    remote:
      path: source/Coop/Mod/CoopClientSM.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: .ctor
    path: ../source/Coop/Mod/CoopClientSM.cs
    startLine: 76
  assemblies:
  - Coop
  namespace: Coop.Mod
  syntax:
    content: public CoopClientSM()
    content.vb: Public Sub New
  overload: Coop.Mod.CoopClientSM.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Coop.Mod
  commentId: N:Coop.Mod
  name: Coop.Mod
  nameWithType: Coop.Mod
  fullName: Coop.Mod
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Common.CoopStateMachine
  commentId: T:Common.CoopStateMachine
  parent: Common
  name: CoopStateMachine
  nameWithType: CoopStateMachine
  fullName: Common.CoopStateMachine
- uid: Common.CoopStateMachine{Coop.Mod.ECoopClientState,Coop.Mod.ECoopClientTrigger}
  commentId: T:Common.CoopStateMachine{Coop.Mod.ECoopClientState,Coop.Mod.ECoopClientTrigger}
  parent: Common
  definition: Common.CoopStateMachine`2
  name: CoopStateMachine<ECoopClientState, ECoopClientTrigger>
  nameWithType: CoopStateMachine<ECoopClientState, ECoopClientTrigger>
  fullName: Common.CoopStateMachine<Coop.Mod.ECoopClientState, Coop.Mod.ECoopClientTrigger>
  nameWithType.vb: CoopStateMachine(Of ECoopClientState, ECoopClientTrigger)
  fullName.vb: Common.CoopStateMachine(Of Coop.Mod.ECoopClientState, Coop.Mod.ECoopClientTrigger)
  name.vb: CoopStateMachine(Of ECoopClientState, ECoopClientTrigger)
  spec.csharp:
  - uid: Common.CoopStateMachine`2
    name: CoopStateMachine
    nameWithType: CoopStateMachine
    fullName: Common.CoopStateMachine
  - name: <
    nameWithType: <
    fullName: <
  - uid: Coop.Mod.ECoopClientState
    name: ECoopClientState
    nameWithType: ECoopClientState
    fullName: Coop.Mod.ECoopClientState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Coop.Mod.ECoopClientTrigger
    name: ECoopClientTrigger
    nameWithType: ECoopClientTrigger
    fullName: Coop.Mod.ECoopClientTrigger
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Common.CoopStateMachine`2
    name: CoopStateMachine
    nameWithType: CoopStateMachine
    fullName: Common.CoopStateMachine
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Coop.Mod.ECoopClientState
    name: ECoopClientState
    nameWithType: ECoopClientState
    fullName: Coop.Mod.ECoopClientState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Coop.Mod.ECoopClientTrigger
    name: ECoopClientTrigger
    nameWithType: ECoopClientTrigger
    fullName: Coop.Mod.ECoopClientTrigger
  - name: )
    nameWithType: )
    fullName: )
- uid: Common.CoopStateMachine{Coop.Mod.ECoopClientState,Coop.Mod.ECoopClientTrigger}.Logger
  commentId: F:Common.CoopStateMachine{Coop.Mod.ECoopClientState,Coop.Mod.ECoopClientTrigger}.Logger
  parent: Common.CoopStateMachine{Coop.Mod.ECoopClientState,Coop.Mod.ECoopClientTrigger}
  definition: Common.CoopStateMachine`2.Logger
  name: Logger
  nameWithType: CoopStateMachine<ECoopClientState, ECoopClientTrigger>.Logger
  fullName: Common.CoopStateMachine<Coop.Mod.ECoopClientState, Coop.Mod.ECoopClientTrigger>.Logger
  nameWithType.vb: CoopStateMachine(Of ECoopClientState, ECoopClientTrigger).Logger
  fullName.vb: Common.CoopStateMachine(Of Coop.Mod.ECoopClientState, Coop.Mod.ECoopClientTrigger).Logger
- uid: Common.CoopStateMachine{Coop.Mod.ECoopClientState,Coop.Mod.ECoopClientTrigger}.StateMachine
  commentId: F:Common.CoopStateMachine{Coop.Mod.ECoopClientState,Coop.Mod.ECoopClientTrigger}.StateMachine
  parent: Common.CoopStateMachine{Coop.Mod.ECoopClientState,Coop.Mod.ECoopClientTrigger}
  definition: Common.CoopStateMachine`2.StateMachine
  name: StateMachine
  nameWithType: CoopStateMachine<ECoopClientState, ECoopClientTrigger>.StateMachine
  fullName: Common.CoopStateMachine<Coop.Mod.ECoopClientState, Coop.Mod.ECoopClientTrigger>.StateMachine
  nameWithType.vb: CoopStateMachine(Of ECoopClientState, ECoopClientTrigger).StateMachine
  fullName.vb: Common.CoopStateMachine(Of Coop.Mod.ECoopClientState, Coop.Mod.ECoopClientTrigger).StateMachine
- uid: Common.CoopStateMachine.State
  commentId: P:Common.CoopStateMachine.State
  parent: Common.CoopStateMachine
  name: State
  nameWithType: CoopStateMachine.State
  fullName: Common.CoopStateMachine.State
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Common
  commentId: N:Common
  name: Common
  nameWithType: Common
  fullName: Common
- uid: Common.CoopStateMachine`2
  commentId: T:Common.CoopStateMachine`2
  name: CoopStateMachine<T, U>
  nameWithType: CoopStateMachine<T, U>
  fullName: Common.CoopStateMachine<T, U>
  nameWithType.vb: CoopStateMachine(Of T, U)
  fullName.vb: Common.CoopStateMachine(Of T, U)
  name.vb: CoopStateMachine(Of T, U)
  spec.csharp:
  - uid: Common.CoopStateMachine`2
    name: CoopStateMachine
    nameWithType: CoopStateMachine
    fullName: Common.CoopStateMachine
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: U
    nameWithType: U
    fullName: U
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Common.CoopStateMachine`2
    name: CoopStateMachine
    nameWithType: CoopStateMachine
    fullName: Common.CoopStateMachine
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: U
    nameWithType: U
    fullName: U
  - name: )
    nameWithType: )
    fullName: )
- uid: Common.CoopStateMachine`2.Logger
  commentId: F:Common.CoopStateMachine`2.Logger
  name: Logger
  nameWithType: CoopStateMachine<T, U>.Logger
  fullName: Common.CoopStateMachine<T, U>.Logger
  nameWithType.vb: CoopStateMachine(Of T, U).Logger
  fullName.vb: Common.CoopStateMachine(Of T, U).Logger
- uid: Common.CoopStateMachine`2.StateMachine
  commentId: F:Common.CoopStateMachine`2.StateMachine
  name: StateMachine
  nameWithType: CoopStateMachine<T, U>.StateMachine
  fullName: Common.CoopStateMachine<T, U>.StateMachine
  nameWithType.vb: CoopStateMachine(Of T, U).StateMachine
  fullName.vb: Common.CoopStateMachine(Of T, U).StateMachine
- uid: Stateless.StateMachine{Coop.Mod.ECoopClientState,Coop.Mod.ECoopClientTrigger}.StateConfiguration
  commentId: T:Stateless.StateMachine{Coop.Mod.ECoopClientState,Coop.Mod.ECoopClientTrigger}.StateConfiguration
  parent: Stateless
  definition: Stateless.StateMachine`2.StateConfiguration
  name: StateMachine.StateConfiguration<>
  nameWithType: StateMachine.StateConfiguration<>
  fullName: Stateless.StateMachine.StateConfiguration<>
  nameWithType.vb: StateMachine.StateConfiguration(Of )
  fullName.vb: Stateless.StateMachine.StateConfiguration(Of )
  name.vb: StateMachine.StateConfiguration(Of )
  spec.csharp:
  - uid: Stateless.StateMachine`2.StateConfiguration
    name: StateMachine.StateConfiguration
    nameWithType: StateMachine.StateConfiguration
    fullName: Stateless.StateMachine.StateConfiguration
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Stateless.StateMachine`2.StateConfiguration
    name: StateMachine.StateConfiguration
    nameWithType: StateMachine.StateConfiguration
    fullName: Stateless.StateMachine.StateConfiguration
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: Stateless.StateMachine`2.StateConfiguration
  commentId: T:Stateless.StateMachine`2.StateConfiguration
  isExternal: true
  name: StateMachine.StateConfiguration<>
  nameWithType: StateMachine.StateConfiguration<>
  fullName: Stateless.StateMachine.StateConfiguration<>
  nameWithType.vb: StateMachine.StateConfiguration(Of )
  fullName.vb: Stateless.StateMachine.StateConfiguration(Of )
  name.vb: StateMachine.StateConfiguration(Of )
  spec.csharp:
  - uid: Stateless.StateMachine`2.StateConfiguration
    name: StateMachine.StateConfiguration
    nameWithType: StateMachine.StateConfiguration
    fullName: Stateless.StateMachine.StateConfiguration
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Stateless.StateMachine`2.StateConfiguration
    name: StateMachine.StateConfiguration
    nameWithType: StateMachine.StateConfiguration
    fullName: Stateless.StateMachine.StateConfiguration
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: Stateless
  commentId: N:Stateless
  isExternal: true
  name: Stateless
  nameWithType: Stateless
  fullName: Stateless
- uid: Coop.Mod.CoopClientSM.#ctor*
  commentId: Overload:Coop.Mod.CoopClientSM.#ctor
  name: CoopClientSM
  nameWithType: CoopClientSM.CoopClientSM
  fullName: Coop.Mod.CoopClientSM.CoopClientSM
