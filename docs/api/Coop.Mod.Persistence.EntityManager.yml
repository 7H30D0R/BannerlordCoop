### YamlMime:ManagedReference
items:
- uid: Coop.Mod.Persistence.EntityManager
  commentId: T:Coop.Mod.Persistence.EntityManager
  id: EntityManager
  parent: Coop.Mod.Persistence
  children:
  - Coop.Mod.Persistence.EntityManager.#ctor(RailServer)
  - Coop.Mod.Persistence.EntityManager.AddParty(TaleWorlds.CampaignSystem.MobileParty)
  - Coop.Mod.Persistence.EntityManager.AddPendingParties(Tick)
  - Coop.Mod.Persistence.EntityManager.GetPlayerParty(RailServerPeer)
  - Coop.Mod.Persistence.EntityManager.GrantPartyControl(TaleWorlds.CampaignSystem.MobileParty,RailServerPeer)
  - Coop.Mod.Persistence.EntityManager.InitRoom(RailServerRoom)
  - Coop.Mod.Persistence.EntityManager.IsArbiter(RailServerPeer)
  - Coop.Mod.Persistence.EntityManager.Logger
  - Coop.Mod.Persistence.EntityManager.m_Lock
  - Coop.Mod.Persistence.EntityManager.m_Parties
  - Coop.Mod.Persistence.EntityManager.m_PartiesToAdd
  - Coop.Mod.Persistence.EntityManager.m_Room
  - Coop.Mod.Persistence.EntityManager.m_Server
  - Coop.Mod.Persistence.EntityManager.OnClientAdded(RailServerPeer)
  - Coop.Mod.Persistence.EntityManager.OnClientRemoved(RailServerPeer)
  - Coop.Mod.Persistence.EntityManager.OnPartyAdded(TaleWorlds.CampaignSystem.MobileParty)
  - Coop.Mod.Persistence.EntityManager.OnPartyRemoved(TaleWorlds.CampaignSystem.MobileParty)
  - Coop.Mod.Persistence.EntityManager.OnPartyRemoved(TaleWorlds.CampaignSystem.PartyBase)
  - Coop.Mod.Persistence.EntityManager.OnPlayerControlledEntityOrphaned
  - Coop.Mod.Persistence.EntityManager.Parties
  - Coop.Mod.Persistence.EntityManager.PlayerControllerParties
  - Coop.Mod.Persistence.EntityManager.SuppressInconsistentStateWarnings
  - Coop.Mod.Persistence.EntityManager.WorldEntityServer
  langs:
  - csharp
  - vb
  name: EntityManager
  nameWithType: EntityManager
  fullName: Coop.Mod.Persistence.EntityManager
  type: Class
  source:
    remote:
      path: source/Coop/Mod/Persistence/EntityManager.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: EntityManager
    path: ../source/Coop/Mod/Persistence/EntityManager.cs
    startLine: 19
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence
  summary: "\nMakes sure that each game entity that requires synchronization has a corresponding\nentity in the persistence framework.\n"
  example: []
  syntax:
    content: public class EntityManager
    content.vb: Public Class EntityManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Coop.Mod.Persistence.EntityManager.Logger
  commentId: F:Coop.Mod.Persistence.EntityManager.Logger
  id: Logger
  parent: Coop.Mod.Persistence.EntityManager
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: EntityManager.Logger
  fullName: Coop.Mod.Persistence.EntityManager.Logger
  type: Field
  source:
    remote:
      path: source/Coop/Mod/Persistence/EntityManager.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Logger
    path: ../source/Coop/Mod/Persistence/EntityManager.cs
    startLine: 21
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence
  syntax:
    content: static readonly Logger Logger
    return:
      type: NLog.Logger
    content.vb: Shared ReadOnly Logger As Logger
  modifiers.csharp:
  - static
  - readonly
  modifiers.vb:
  - Shared
  - ReadOnly
- uid: Coop.Mod.Persistence.EntityManager.m_Lock
  commentId: F:Coop.Mod.Persistence.EntityManager.m_Lock
  id: m_Lock
  parent: Coop.Mod.Persistence.EntityManager
  langs:
  - csharp
  - vb
  name: m_Lock
  nameWithType: EntityManager.m_Lock
  fullName: Coop.Mod.Persistence.EntityManager.m_Lock
  type: Field
  source:
    remote:
      path: source/Coop/Mod/Persistence/EntityManager.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_Lock
    path: ../source/Coop/Mod/Persistence/EntityManager.cs
    startLine: 23
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence
  syntax:
    content: readonly object m_Lock
    return:
      type: System.Object
    content.vb: ReadOnly m_Lock As Object
  modifiers.csharp:
  - readonly
  modifiers.vb:
  - ReadOnly
- uid: Coop.Mod.Persistence.EntityManager.m_Parties
  commentId: F:Coop.Mod.Persistence.EntityManager.m_Parties
  id: m_Parties
  parent: Coop.Mod.Persistence.EntityManager
  langs:
  - csharp
  - vb
  name: m_Parties
  nameWithType: EntityManager.m_Parties
  fullName: Coop.Mod.Persistence.EntityManager.m_Parties
  type: Field
  source:
    remote:
      path: source/Coop/Mod/Persistence/EntityManager.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_Parties
    path: ../source/Coop/Mod/Persistence/EntityManager.cs
    startLine: 25
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence
  syntax:
    content: readonly Dictionary<MobileParty, RailEntityServer> m_Parties
    return:
      type: System.Collections.Generic.Dictionary{TaleWorlds.CampaignSystem.MobileParty,RailEntityServer}
    content.vb: ReadOnly m_Parties As Dictionary(Of MobileParty, RailEntityServer)
  modifiers.csharp:
  - readonly
  modifiers.vb:
  - ReadOnly
- uid: Coop.Mod.Persistence.EntityManager.m_PartiesToAdd
  commentId: F:Coop.Mod.Persistence.EntityManager.m_PartiesToAdd
  id: m_PartiesToAdd
  parent: Coop.Mod.Persistence.EntityManager
  langs:
  - csharp
  - vb
  name: m_PartiesToAdd
  nameWithType: EntityManager.m_PartiesToAdd
  fullName: Coop.Mod.Persistence.EntityManager.m_PartiesToAdd
  type: Field
  source:
    remote:
      path: source/Coop/Mod/Persistence/EntityManager.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_PartiesToAdd
    path: ../source/Coop/Mod/Persistence/EntityManager.cs
    startLine: 28
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence
  syntax:
    content: readonly List<MobileParty> m_PartiesToAdd
    return:
      type: System.Collections.Generic.List{TaleWorlds.CampaignSystem.MobileParty}
    content.vb: ReadOnly m_PartiesToAdd As List(Of MobileParty)
  modifiers.csharp:
  - readonly
  modifiers.vb:
  - ReadOnly
- uid: Coop.Mod.Persistence.EntityManager.m_Room
  commentId: F:Coop.Mod.Persistence.EntityManager.m_Room
  id: m_Room
  parent: Coop.Mod.Persistence.EntityManager
  langs:
  - csharp
  - vb
  name: m_Room
  nameWithType: EntityManager.m_Room
  fullName: Coop.Mod.Persistence.EntityManager.m_Room
  type: Field
  source:
    remote:
      path: source/Coop/Mod/Persistence/EntityManager.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_Room
    path: ../source/Coop/Mod/Persistence/EntityManager.cs
    startLine: 29
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence
  syntax:
    content: readonly RailServerRoom m_Room
    return:
      type: RailServerRoom
    content.vb: ReadOnly m_Room As RailServerRoom
  modifiers.csharp:
  - readonly
  modifiers.vb:
  - ReadOnly
- uid: Coop.Mod.Persistence.EntityManager.m_Server
  commentId: F:Coop.Mod.Persistence.EntityManager.m_Server
  id: m_Server
  parent: Coop.Mod.Persistence.EntityManager
  langs:
  - csharp
  - vb
  name: m_Server
  nameWithType: EntityManager.m_Server
  fullName: Coop.Mod.Persistence.EntityManager.m_Server
  type: Field
  source:
    remote:
      path: source/Coop/Mod/Persistence/EntityManager.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: m_Server
    path: ../source/Coop/Mod/Persistence/EntityManager.cs
    startLine: 30
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence
  syntax:
    content: readonly RailServer m_Server
    return:
      type: RailServer
    content.vb: ReadOnly m_Server As RailServer
  modifiers.csharp:
  - readonly
  modifiers.vb:
  - ReadOnly
- uid: Coop.Mod.Persistence.EntityManager.#ctor(RailServer)
  commentId: M:Coop.Mod.Persistence.EntityManager.#ctor(RailServer)
  id: '#ctor(RailServer)'
  parent: Coop.Mod.Persistence.EntityManager
  langs:
  - csharp
  - vb
  name: EntityManager(RailServer)
  nameWithType: EntityManager.EntityManager(RailServer)
  fullName: Coop.Mod.Persistence.EntityManager.EntityManager(RailServer)
  type: Constructor
  source:
    remote:
      path: source/Coop/Mod/Persistence/EntityManager.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: .ctor
    path: ../source/Coop/Mod/Persistence/EntityManager.cs
    startLine: 32
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence
  syntax:
    content: public EntityManager(RailServer server)
    parameters:
    - id: server
      type: RailServer
    content.vb: Public Sub New(server As RailServer)
  overload: Coop.Mod.Persistence.EntityManager.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Coop.Mod.Persistence.EntityManager.PlayerControllerParties
  commentId: P:Coop.Mod.Persistence.EntityManager.PlayerControllerParties
  id: PlayerControllerParties
  parent: Coop.Mod.Persistence.EntityManager
  langs:
  - csharp
  - vb
  name: PlayerControllerParties
  nameWithType: EntityManager.PlayerControllerParties
  fullName: Coop.Mod.Persistence.EntityManager.PlayerControllerParties
  type: Property
  source:
    remote:
      path: source/Coop/Mod/Persistence/EntityManager.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: PlayerControllerParties
    path: ../source/Coop/Mod/Persistence/EntityManager.cs
    startLine: 44
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence
  syntax:
    content: public Dictionary<RailServerPeer, MobileParty> PlayerControllerParties { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{RailServerPeer,TaleWorlds.CampaignSystem.MobileParty}
    content.vb: Public ReadOnly Property PlayerControllerParties As Dictionary(Of RailServerPeer, MobileParty)
  overload: Coop.Mod.Persistence.EntityManager.PlayerControllerParties*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Coop.Mod.Persistence.EntityManager.WorldEntityServer
  commentId: P:Coop.Mod.Persistence.EntityManager.WorldEntityServer
  id: WorldEntityServer
  parent: Coop.Mod.Persistence.EntityManager
  langs:
  - csharp
  - vb
  name: WorldEntityServer
  nameWithType: EntityManager.WorldEntityServer
  fullName: Coop.Mod.Persistence.EntityManager.WorldEntityServer
  type: Property
  source:
    remote:
      path: source/Coop/Mod/Persistence/EntityManager.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: WorldEntityServer
    path: ../source/Coop/Mod/Persistence/EntityManager.cs
    startLine: 47
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence
  syntax:
    content: public WorldEntityServer WorldEntityServer { get; }
    parameters: []
    return:
      type: Coop.Mod.Persistence.World.WorldEntityServer
    content.vb: Public ReadOnly Property WorldEntityServer As WorldEntityServer
  overload: Coop.Mod.Persistence.EntityManager.WorldEntityServer*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Coop.Mod.Persistence.EntityManager.SuppressInconsistentStateWarnings
  commentId: P:Coop.Mod.Persistence.EntityManager.SuppressInconsistentStateWarnings
  id: SuppressInconsistentStateWarnings
  parent: Coop.Mod.Persistence.EntityManager
  langs:
  - csharp
  - vb
  name: SuppressInconsistentStateWarnings
  nameWithType: EntityManager.SuppressInconsistentStateWarnings
  fullName: Coop.Mod.Persistence.EntityManager.SuppressInconsistentStateWarnings
  type: Property
  source:
    remote:
      path: source/Coop/Mod/Persistence/EntityManager.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: SuppressInconsistentStateWarnings
    path: ../source/Coop/Mod/Persistence/EntityManager.cs
    startLine: 48
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence
  syntax:
    content: public bool SuppressInconsistentStateWarnings { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property SuppressInconsistentStateWarnings As Boolean
  overload: Coop.Mod.Persistence.EntityManager.SuppressInconsistentStateWarnings*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Coop.Mod.Persistence.EntityManager.Parties
  commentId: P:Coop.Mod.Persistence.EntityManager.Parties
  id: Parties
  parent: Coop.Mod.Persistence.EntityManager
  langs:
  - csharp
  - vb
  name: Parties
  nameWithType: EntityManager.Parties
  fullName: Coop.Mod.Persistence.EntityManager.Parties
  type: Property
  source:
    remote:
      path: source/Coop/Mod/Persistence/EntityManager.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Parties
    path: ../source/Coop/Mod/Persistence/EntityManager.cs
    startLine: 50
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence
  syntax:
    content: public IReadOnlyCollection<RailEntityServer> Parties { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyCollection{RailEntityServer}
    content.vb: Public ReadOnly Property Parties As IReadOnlyCollection(Of RailEntityServer)
  overload: Coop.Mod.Persistence.EntityManager.Parties*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Coop.Mod.Persistence.EntityManager.AddPendingParties(Tick)
  commentId: M:Coop.Mod.Persistence.EntityManager.AddPendingParties(Tick)
  id: AddPendingParties(Tick)
  parent: Coop.Mod.Persistence.EntityManager
  langs:
  - csharp
  - vb
  name: AddPendingParties(Tick)
  nameWithType: EntityManager.AddPendingParties(Tick)
  fullName: Coop.Mod.Persistence.EntityManager.AddPendingParties(Tick)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/Persistence/EntityManager.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: AddPendingParties
    path: ../source/Coop/Mod/Persistence/EntityManager.cs
    startLine: 52
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence
  syntax:
    content: void AddPendingParties(Tick tick)
    parameters:
    - id: tick
      type: Tick
    content.vb: Sub AddPendingParties(tick As Tick)
  overload: Coop.Mod.Persistence.EntityManager.AddPendingParties*
- uid: Coop.Mod.Persistence.EntityManager.OnPlayerControlledEntityOrphaned
  commentId: E:Coop.Mod.Persistence.EntityManager.OnPlayerControlledEntityOrphaned
  id: OnPlayerControlledEntityOrphaned
  parent: Coop.Mod.Persistence.EntityManager
  langs:
  - csharp
  - vb
  name: OnPlayerControlledEntityOrphaned
  nameWithType: EntityManager.OnPlayerControlledEntityOrphaned
  fullName: Coop.Mod.Persistence.EntityManager.OnPlayerControlledEntityOrphaned
  type: Event
  source:
    remote:
      path: source/Coop/Mod/Persistence/EntityManager.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: OnPlayerControlledEntityOrphaned
    path: ../source/Coop/Mod/Persistence/EntityManager.cs
    startLine: 80
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence
  summary: "\nCalled for each player controlled entity when the controlling player leaves the game.\nThe entity control has already been revoked from the player. This callback is expected\nto handle any necessary clean up in the game entity system.\n"
  example: []
  syntax:
    content: public event Action<RailServerPeer, RailEntityServer> OnPlayerControlledEntityOrphaned
    return:
      type: System.Action{RailServerPeer,RailEntityServer}
    content.vb: Public Event OnPlayerControlledEntityOrphaned As Action(Of RailServerPeer, RailEntityServer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Coop.Mod.Persistence.EntityManager.InitRoom(RailServerRoom)
  commentId: M:Coop.Mod.Persistence.EntityManager.InitRoom(RailServerRoom)
  id: InitRoom(RailServerRoom)
  parent: Coop.Mod.Persistence.EntityManager
  langs:
  - csharp
  - vb
  name: InitRoom(RailServerRoom)
  nameWithType: EntityManager.InitRoom(RailServerRoom)
  fullName: Coop.Mod.Persistence.EntityManager.InitRoom(RailServerRoom)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/Persistence/EntityManager.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: InitRoom
    path: ../source/Coop/Mod/Persistence/EntityManager.cs
    startLine: 82
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence
  syntax:
    content: void InitRoom(RailServerRoom room)
    parameters:
    - id: room
      type: RailServerRoom
    content.vb: Sub InitRoom(room As RailServerRoom)
  overload: Coop.Mod.Persistence.EntityManager.InitRoom*
- uid: Coop.Mod.Persistence.EntityManager.OnPartyRemoved(TaleWorlds.CampaignSystem.PartyBase)
  commentId: M:Coop.Mod.Persistence.EntityManager.OnPartyRemoved(TaleWorlds.CampaignSystem.PartyBase)
  id: OnPartyRemoved(TaleWorlds.CampaignSystem.PartyBase)
  parent: Coop.Mod.Persistence.EntityManager
  langs:
  - csharp
  - vb
  name: OnPartyRemoved(PartyBase)
  nameWithType: EntityManager.OnPartyRemoved(PartyBase)
  fullName: Coop.Mod.Persistence.EntityManager.OnPartyRemoved(TaleWorlds.CampaignSystem.PartyBase)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/Persistence/EntityManager.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: OnPartyRemoved
    path: ../source/Coop/Mod/Persistence/EntityManager.cs
    startLine: 113
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence
  syntax:
    content: void OnPartyRemoved(PartyBase partyBase)
    parameters:
    - id: partyBase
      type: TaleWorlds.CampaignSystem.PartyBase
    content.vb: Sub OnPartyRemoved(partyBase As PartyBase)
  overload: Coop.Mod.Persistence.EntityManager.OnPartyRemoved*
- uid: Coop.Mod.Persistence.EntityManager.OnPartyRemoved(TaleWorlds.CampaignSystem.MobileParty)
  commentId: M:Coop.Mod.Persistence.EntityManager.OnPartyRemoved(TaleWorlds.CampaignSystem.MobileParty)
  id: OnPartyRemoved(TaleWorlds.CampaignSystem.MobileParty)
  parent: Coop.Mod.Persistence.EntityManager
  langs:
  - csharp
  - vb
  name: OnPartyRemoved(MobileParty)
  nameWithType: EntityManager.OnPartyRemoved(MobileParty)
  fullName: Coop.Mod.Persistence.EntityManager.OnPartyRemoved(TaleWorlds.CampaignSystem.MobileParty)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/Persistence/EntityManager.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: OnPartyRemoved
    path: ../source/Coop/Mod/Persistence/EntityManager.cs
    startLine: 118
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence
  syntax:
    content: void OnPartyRemoved(MobileParty party)
    parameters:
    - id: party
      type: TaleWorlds.CampaignSystem.MobileParty
    content.vb: Sub OnPartyRemoved(party As MobileParty)
  overload: Coop.Mod.Persistence.EntityManager.OnPartyRemoved*
- uid: Coop.Mod.Persistence.EntityManager.OnPartyAdded(TaleWorlds.CampaignSystem.MobileParty)
  commentId: M:Coop.Mod.Persistence.EntityManager.OnPartyAdded(TaleWorlds.CampaignSystem.MobileParty)
  id: OnPartyAdded(TaleWorlds.CampaignSystem.MobileParty)
  parent: Coop.Mod.Persistence.EntityManager
  langs:
  - csharp
  - vb
  name: OnPartyAdded(MobileParty)
  nameWithType: EntityManager.OnPartyAdded(MobileParty)
  fullName: Coop.Mod.Persistence.EntityManager.OnPartyAdded(TaleWorlds.CampaignSystem.MobileParty)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/Persistence/EntityManager.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: OnPartyAdded
    path: ../source/Coop/Mod/Persistence/EntityManager.cs
    startLine: 143
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence
  syntax:
    content: void OnPartyAdded(MobileParty party)
    parameters:
    - id: party
      type: TaleWorlds.CampaignSystem.MobileParty
    content.vb: Sub OnPartyAdded(party As MobileParty)
  overload: Coop.Mod.Persistence.EntityManager.OnPartyAdded*
- uid: Coop.Mod.Persistence.EntityManager.AddParty(TaleWorlds.CampaignSystem.MobileParty)
  commentId: M:Coop.Mod.Persistence.EntityManager.AddParty(TaleWorlds.CampaignSystem.MobileParty)
  id: AddParty(TaleWorlds.CampaignSystem.MobileParty)
  parent: Coop.Mod.Persistence.EntityManager
  langs:
  - csharp
  - vb
  name: AddParty(MobileParty)
  nameWithType: EntityManager.AddParty(MobileParty)
  fullName: Coop.Mod.Persistence.EntityManager.AddParty(TaleWorlds.CampaignSystem.MobileParty)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/Persistence/EntityManager.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: AddParty
    path: ../source/Coop/Mod/Persistence/EntityManager.cs
    startLine: 168
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence
  syntax:
    content: public void AddParty(MobileParty party)
    parameters:
    - id: party
      type: TaleWorlds.CampaignSystem.MobileParty
    content.vb: Public Sub AddParty(party As MobileParty)
  overload: Coop.Mod.Persistence.EntityManager.AddParty*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Coop.Mod.Persistence.EntityManager.GrantPartyControl(TaleWorlds.CampaignSystem.MobileParty,RailServerPeer)
  commentId: M:Coop.Mod.Persistence.EntityManager.GrantPartyControl(TaleWorlds.CampaignSystem.MobileParty,RailServerPeer)
  id: GrantPartyControl(TaleWorlds.CampaignSystem.MobileParty,RailServerPeer)
  parent: Coop.Mod.Persistence.EntityManager
  langs:
  - csharp
  - vb
  name: GrantPartyControl(MobileParty, RailServerPeer)
  nameWithType: EntityManager.GrantPartyControl(MobileParty, RailServerPeer)
  fullName: Coop.Mod.Persistence.EntityManager.GrantPartyControl(TaleWorlds.CampaignSystem.MobileParty, RailServerPeer)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/Persistence/EntityManager.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: GrantPartyControl
    path: ../source/Coop/Mod/Persistence/EntityManager.cs
    startLine: 181
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence
  syntax:
    content: public void GrantPartyControl(MobileParty party, RailServerPeer peer)
    parameters:
    - id: party
      type: TaleWorlds.CampaignSystem.MobileParty
    - id: peer
      type: RailServerPeer
    content.vb: Public Sub GrantPartyControl(party As MobileParty, peer As RailServerPeer)
  overload: Coop.Mod.Persistence.EntityManager.GrantPartyControl*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Coop.Mod.Persistence.EntityManager.OnClientAdded(RailServerPeer)
  commentId: M:Coop.Mod.Persistence.EntityManager.OnClientAdded(RailServerPeer)
  id: OnClientAdded(RailServerPeer)
  parent: Coop.Mod.Persistence.EntityManager
  langs:
  - csharp
  - vb
  name: OnClientAdded(RailServerPeer)
  nameWithType: EntityManager.OnClientAdded(RailServerPeer)
  fullName: Coop.Mod.Persistence.EntityManager.OnClientAdded(RailServerPeer)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/Persistence/EntityManager.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: OnClientAdded
    path: ../source/Coop/Mod/Persistence/EntityManager.cs
    startLine: 187
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence
  syntax:
    content: void OnClientAdded(RailServerPeer peer)
    parameters:
    - id: peer
      type: RailServerPeer
    content.vb: Sub OnClientAdded(peer As RailServerPeer)
  overload: Coop.Mod.Persistence.EntityManager.OnClientAdded*
- uid: Coop.Mod.Persistence.EntityManager.OnClientRemoved(RailServerPeer)
  commentId: M:Coop.Mod.Persistence.EntityManager.OnClientRemoved(RailServerPeer)
  id: OnClientRemoved(RailServerPeer)
  parent: Coop.Mod.Persistence.EntityManager
  langs:
  - csharp
  - vb
  name: OnClientRemoved(RailServerPeer)
  nameWithType: EntityManager.OnClientRemoved(RailServerPeer)
  fullName: Coop.Mod.Persistence.EntityManager.OnClientRemoved(RailServerPeer)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/Persistence/EntityManager.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: OnClientRemoved
    path: ../source/Coop/Mod/Persistence/EntityManager.cs
    startLine: 209
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence
  syntax:
    content: void OnClientRemoved(RailServerPeer peer)
    parameters:
    - id: peer
      type: RailServerPeer
    content.vb: Sub OnClientRemoved(peer As RailServerPeer)
  overload: Coop.Mod.Persistence.EntityManager.OnClientRemoved*
- uid: Coop.Mod.Persistence.EntityManager.GetPlayerParty(RailServerPeer)
  commentId: M:Coop.Mod.Persistence.EntityManager.GetPlayerParty(RailServerPeer)
  id: GetPlayerParty(RailServerPeer)
  parent: Coop.Mod.Persistence.EntityManager
  langs:
  - csharp
  - vb
  name: GetPlayerParty(RailServerPeer)
  nameWithType: EntityManager.GetPlayerParty(RailServerPeer)
  fullName: Coop.Mod.Persistence.EntityManager.GetPlayerParty(RailServerPeer)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/Persistence/EntityManager.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: GetPlayerParty
    path: ../source/Coop/Mod/Persistence/EntityManager.cs
    startLine: 224
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence
  syntax:
    content: MobileParty GetPlayerParty(RailServerPeer peer)
    parameters:
    - id: peer
      type: RailServerPeer
    return:
      type: TaleWorlds.CampaignSystem.MobileParty
    content.vb: Function GetPlayerParty(peer As RailServerPeer) As MobileParty
  overload: Coop.Mod.Persistence.EntityManager.GetPlayerParty*
- uid: Coop.Mod.Persistence.EntityManager.IsArbiter(RailServerPeer)
  commentId: M:Coop.Mod.Persistence.EntityManager.IsArbiter(RailServerPeer)
  id: IsArbiter(RailServerPeer)
  parent: Coop.Mod.Persistence.EntityManager
  langs:
  - csharp
  - vb
  name: IsArbiter(RailServerPeer)
  nameWithType: EntityManager.IsArbiter(RailServerPeer)
  fullName: Coop.Mod.Persistence.EntityManager.IsArbiter(RailServerPeer)
  type: Method
  source:
    remote:
      path: source/Coop/Mod/Persistence/EntityManager.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: IsArbiter
    path: ../source/Coop/Mod/Persistence/EntityManager.cs
    startLine: 234
  assemblies:
  - Coop
  namespace: Coop.Mod.Persistence
  syntax:
    content: bool IsArbiter(RailServerPeer peer)
    parameters:
    - id: peer
      type: RailServerPeer
    return:
      type: System.Boolean
    content.vb: Function IsArbiter(peer As RailServerPeer) As Boolean
  overload: Coop.Mod.Persistence.EntityManager.IsArbiter*
references:
- uid: Coop.Mod.Persistence
  commentId: N:Coop.Mod.Persistence
  name: Coop.Mod.Persistence
  nameWithType: Coop.Mod.Persistence
  fullName: Coop.Mod.Persistence
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NLog.Logger
  commentId: T:NLog.Logger
  parent: NLog
  isExternal: true
  name: Logger
  nameWithType: Logger
  fullName: NLog.Logger
- uid: NLog
  commentId: N:NLog
  isExternal: true
  name: NLog
  nameWithType: NLog
  fullName: NLog
- uid: System.Collections.Generic.Dictionary{TaleWorlds.CampaignSystem.MobileParty,RailEntityServer}
  commentId: T:System.Collections.Generic.Dictionary{TaleWorlds.CampaignSystem.MobileParty,RailEntityServer}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<MobileParty, RailEntityServer>
  nameWithType: Dictionary<MobileParty, RailEntityServer>
  fullName: System.Collections.Generic.Dictionary<TaleWorlds.CampaignSystem.MobileParty, RailEntityServer>
  nameWithType.vb: Dictionary(Of MobileParty, RailEntityServer)
  fullName.vb: System.Collections.Generic.Dictionary(Of TaleWorlds.CampaignSystem.MobileParty, RailEntityServer)
  name.vb: Dictionary(Of MobileParty, RailEntityServer)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TaleWorlds.CampaignSystem.MobileParty
    name: MobileParty
    nameWithType: MobileParty
    fullName: TaleWorlds.CampaignSystem.MobileParty
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RailEntityServer
    name: RailEntityServer
    nameWithType: RailEntityServer
    fullName: RailEntityServer
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TaleWorlds.CampaignSystem.MobileParty
    name: MobileParty
    nameWithType: MobileParty
    fullName: TaleWorlds.CampaignSystem.MobileParty
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RailEntityServer
    name: RailEntityServer
    nameWithType: RailEntityServer
    fullName: RailEntityServer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.List{TaleWorlds.CampaignSystem.MobileParty}
  commentId: T:System.Collections.Generic.List{TaleWorlds.CampaignSystem.MobileParty}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<MobileParty>
  nameWithType: List<MobileParty>
  fullName: System.Collections.Generic.List<TaleWorlds.CampaignSystem.MobileParty>
  nameWithType.vb: List(Of MobileParty)
  fullName.vb: System.Collections.Generic.List(Of TaleWorlds.CampaignSystem.MobileParty)
  name.vb: List(Of MobileParty)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TaleWorlds.CampaignSystem.MobileParty
    name: MobileParty
    nameWithType: MobileParty
    fullName: TaleWorlds.CampaignSystem.MobileParty
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TaleWorlds.CampaignSystem.MobileParty
    name: MobileParty
    nameWithType: MobileParty
    fullName: TaleWorlds.CampaignSystem.MobileParty
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: RailServerRoom
  isExternal: true
  name: RailServerRoom
  nameWithType: RailServerRoom
  fullName: RailServerRoom
- uid: RailServer
  isExternal: true
  name: RailServer
  nameWithType: RailServer
  fullName: RailServer
- uid: Coop.Mod.Persistence.EntityManager.#ctor*
  commentId: Overload:Coop.Mod.Persistence.EntityManager.#ctor
  name: EntityManager
  nameWithType: EntityManager.EntityManager
  fullName: Coop.Mod.Persistence.EntityManager.EntityManager
- uid: Coop.Mod.Persistence.EntityManager.PlayerControllerParties*
  commentId: Overload:Coop.Mod.Persistence.EntityManager.PlayerControllerParties
  name: PlayerControllerParties
  nameWithType: EntityManager.PlayerControllerParties
  fullName: Coop.Mod.Persistence.EntityManager.PlayerControllerParties
- uid: System.Collections.Generic.Dictionary{RailServerPeer,TaleWorlds.CampaignSystem.MobileParty}
  commentId: T:System.Collections.Generic.Dictionary{RailServerPeer,TaleWorlds.CampaignSystem.MobileParty}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<RailServerPeer, MobileParty>
  nameWithType: Dictionary<RailServerPeer, MobileParty>
  fullName: System.Collections.Generic.Dictionary<RailServerPeer, TaleWorlds.CampaignSystem.MobileParty>
  nameWithType.vb: Dictionary(Of RailServerPeer, MobileParty)
  fullName.vb: System.Collections.Generic.Dictionary(Of RailServerPeer, TaleWorlds.CampaignSystem.MobileParty)
  name.vb: Dictionary(Of RailServerPeer, MobileParty)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RailServerPeer
    name: RailServerPeer
    nameWithType: RailServerPeer
    fullName: RailServerPeer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TaleWorlds.CampaignSystem.MobileParty
    name: MobileParty
    nameWithType: MobileParty
    fullName: TaleWorlds.CampaignSystem.MobileParty
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RailServerPeer
    name: RailServerPeer
    nameWithType: RailServerPeer
    fullName: RailServerPeer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TaleWorlds.CampaignSystem.MobileParty
    name: MobileParty
    nameWithType: MobileParty
    fullName: TaleWorlds.CampaignSystem.MobileParty
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Coop.Mod.Persistence.EntityManager.WorldEntityServer*
  commentId: Overload:Coop.Mod.Persistence.EntityManager.WorldEntityServer
  name: WorldEntityServer
  nameWithType: EntityManager.WorldEntityServer
  fullName: Coop.Mod.Persistence.EntityManager.WorldEntityServer
- uid: Coop.Mod.Persistence.World.WorldEntityServer
  commentId: T:Coop.Mod.Persistence.World.WorldEntityServer
  parent: Coop.Mod.Persistence.World
  name: WorldEntityServer
  nameWithType: WorldEntityServer
  fullName: Coop.Mod.Persistence.World.WorldEntityServer
- uid: Coop.Mod.Persistence.World
  commentId: N:Coop.Mod.Persistence.World
  name: Coop.Mod.Persistence.World
  nameWithType: Coop.Mod.Persistence.World
  fullName: Coop.Mod.Persistence.World
- uid: Coop.Mod.Persistence.EntityManager.SuppressInconsistentStateWarnings*
  commentId: Overload:Coop.Mod.Persistence.EntityManager.SuppressInconsistentStateWarnings
  name: SuppressInconsistentStateWarnings
  nameWithType: EntityManager.SuppressInconsistentStateWarnings
  fullName: Coop.Mod.Persistence.EntityManager.SuppressInconsistentStateWarnings
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Coop.Mod.Persistence.EntityManager.Parties*
  commentId: Overload:Coop.Mod.Persistence.EntityManager.Parties
  name: Parties
  nameWithType: EntityManager.Parties
  fullName: Coop.Mod.Persistence.EntityManager.Parties
- uid: System.Collections.Generic.IReadOnlyCollection{RailEntityServer}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{RailEntityServer}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<RailEntityServer>
  nameWithType: IReadOnlyCollection<RailEntityServer>
  fullName: System.Collections.Generic.IReadOnlyCollection<RailEntityServer>
  nameWithType.vb: IReadOnlyCollection(Of RailEntityServer)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of RailEntityServer)
  name.vb: IReadOnlyCollection(Of RailEntityServer)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RailEntityServer
    name: RailEntityServer
    nameWithType: RailEntityServer
    fullName: RailEntityServer
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RailEntityServer
    name: RailEntityServer
    nameWithType: RailEntityServer
    fullName: RailEntityServer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Coop.Mod.Persistence.EntityManager.AddPendingParties*
  commentId: Overload:Coop.Mod.Persistence.EntityManager.AddPendingParties
  name: AddPendingParties
  nameWithType: EntityManager.AddPendingParties
  fullName: Coop.Mod.Persistence.EntityManager.AddPendingParties
- uid: Tick
  isExternal: true
  name: Tick
  nameWithType: Tick
  fullName: Tick
- uid: System.Action{RailServerPeer,RailEntityServer}
  commentId: T:System.Action{RailServerPeer,RailEntityServer}
  parent: System
  definition: System.Action`2
  name: Action<RailServerPeer, RailEntityServer>
  nameWithType: Action<RailServerPeer, RailEntityServer>
  fullName: System.Action<RailServerPeer, RailEntityServer>
  nameWithType.vb: Action(Of RailServerPeer, RailEntityServer)
  fullName.vb: System.Action(Of RailServerPeer, RailEntityServer)
  name.vb: Action(Of RailServerPeer, RailEntityServer)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RailServerPeer
    name: RailServerPeer
    nameWithType: RailServerPeer
    fullName: RailServerPeer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RailEntityServer
    name: RailEntityServer
    nameWithType: RailEntityServer
    fullName: RailEntityServer
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RailServerPeer
    name: RailServerPeer
    nameWithType: RailServerPeer
    fullName: RailServerPeer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RailEntityServer
    name: RailEntityServer
    nameWithType: RailEntityServer
    fullName: RailEntityServer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: Coop.Mod.Persistence.EntityManager.InitRoom*
  commentId: Overload:Coop.Mod.Persistence.EntityManager.InitRoom
  name: InitRoom
  nameWithType: EntityManager.InitRoom
  fullName: Coop.Mod.Persistence.EntityManager.InitRoom
- uid: Coop.Mod.Persistence.EntityManager.OnPartyRemoved*
  commentId: Overload:Coop.Mod.Persistence.EntityManager.OnPartyRemoved
  name: OnPartyRemoved
  nameWithType: EntityManager.OnPartyRemoved
  fullName: Coop.Mod.Persistence.EntityManager.OnPartyRemoved
- uid: TaleWorlds.CampaignSystem.PartyBase
  commentId: T:TaleWorlds.CampaignSystem.PartyBase
  parent: TaleWorlds.CampaignSystem
  isExternal: true
  name: PartyBase
  nameWithType: PartyBase
  fullName: TaleWorlds.CampaignSystem.PartyBase
- uid: TaleWorlds.CampaignSystem
  commentId: N:TaleWorlds.CampaignSystem
  isExternal: true
  name: TaleWorlds.CampaignSystem
  nameWithType: TaleWorlds.CampaignSystem
  fullName: TaleWorlds.CampaignSystem
- uid: TaleWorlds.CampaignSystem.MobileParty
  commentId: T:TaleWorlds.CampaignSystem.MobileParty
  parent: TaleWorlds.CampaignSystem
  isExternal: true
  name: MobileParty
  nameWithType: MobileParty
  fullName: TaleWorlds.CampaignSystem.MobileParty
- uid: Coop.Mod.Persistence.EntityManager.OnPartyAdded*
  commentId: Overload:Coop.Mod.Persistence.EntityManager.OnPartyAdded
  name: OnPartyAdded
  nameWithType: EntityManager.OnPartyAdded
  fullName: Coop.Mod.Persistence.EntityManager.OnPartyAdded
- uid: Coop.Mod.Persistence.EntityManager.AddParty*
  commentId: Overload:Coop.Mod.Persistence.EntityManager.AddParty
  name: AddParty
  nameWithType: EntityManager.AddParty
  fullName: Coop.Mod.Persistence.EntityManager.AddParty
- uid: Coop.Mod.Persistence.EntityManager.GrantPartyControl*
  commentId: Overload:Coop.Mod.Persistence.EntityManager.GrantPartyControl
  name: GrantPartyControl
  nameWithType: EntityManager.GrantPartyControl
  fullName: Coop.Mod.Persistence.EntityManager.GrantPartyControl
- uid: RailServerPeer
  isExternal: true
  name: RailServerPeer
  nameWithType: RailServerPeer
  fullName: RailServerPeer
- uid: Coop.Mod.Persistence.EntityManager.OnClientAdded*
  commentId: Overload:Coop.Mod.Persistence.EntityManager.OnClientAdded
  name: OnClientAdded
  nameWithType: EntityManager.OnClientAdded
  fullName: Coop.Mod.Persistence.EntityManager.OnClientAdded
- uid: Coop.Mod.Persistence.EntityManager.OnClientRemoved*
  commentId: Overload:Coop.Mod.Persistence.EntityManager.OnClientRemoved
  name: OnClientRemoved
  nameWithType: EntityManager.OnClientRemoved
  fullName: Coop.Mod.Persistence.EntityManager.OnClientRemoved
- uid: Coop.Mod.Persistence.EntityManager.GetPlayerParty*
  commentId: Overload:Coop.Mod.Persistence.EntityManager.GetPlayerParty
  name: GetPlayerParty
  nameWithType: EntityManager.GetPlayerParty
  fullName: Coop.Mod.Persistence.EntityManager.GetPlayerParty
- uid: Coop.Mod.Persistence.EntityManager.IsArbiter*
  commentId: Overload:Coop.Mod.Persistence.EntityManager.IsArbiter
  name: IsArbiter
  nameWithType: EntityManager.IsArbiter
  fullName: Coop.Mod.Persistence.EntityManager.IsArbiter
