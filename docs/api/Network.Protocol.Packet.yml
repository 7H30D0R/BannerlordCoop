### YamlMime:ManagedReference
items:
- uid: Network.Protocol.Packet
  commentId: T:Network.Protocol.Packet
  id: Packet
  parent: Network.Protocol
  children:
  - Network.Protocol.Packet.#ctor(Network.Protocol.EPacket,System.ArraySegment{System.Byte})
  - Network.Protocol.Packet.#ctor(Network.Protocol.EPacket,System.Byte[])
  - Network.Protocol.Packet.#ctor(Network.Protocol.EPacket,System.IO.MemoryStream)
  - Network.Protocol.Packet.BitMaskFragment_End
  - Network.Protocol.Packet.BitMaskFragment_More
  - Network.Protocol.Packet.BitMaskFragment_None
  - Network.Protocol.Packet.BitMaskType
  - Network.Protocol.Packet.Length
  - Network.Protocol.Packet.MetaDataLength
  - Network.Protocol.Packet.Payload
  - Network.Protocol.Packet.Type
  langs:
  - csharp
  - vb
  name: Packet
  nameWithType: Packet
  fullName: Network.Protocol.Packet
  type: Class
  source:
    remote:
      path: source/Network/Protocol/Packet.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Packet
    path: ../source/Network/Protocol/Packet.cs
    startLine: 6
  assemblies:
  - Network
  namespace: Network.Protocol
  syntax:
    content: public class Packet
    content.vb: Public Class Packet
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Network.Protocol.Packet.MetaDataLength
  commentId: F:Network.Protocol.Packet.MetaDataLength
  id: MetaDataLength
  parent: Network.Protocol.Packet
  langs:
  - csharp
  - vb
  name: MetaDataLength
  nameWithType: Packet.MetaDataLength
  fullName: Network.Protocol.Packet.MetaDataLength
  type: Field
  source:
    remote:
      path: source/Network/Protocol/Packet.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: MetaDataLength
    path: ../source/Network/Protocol/Packet.cs
    startLine: 9
  assemblies:
  - Network
  namespace: Network.Protocol
  syntax:
    content: public const int MetaDataLength = 5
    return:
      type: System.Int32
    content.vb: Public Const MetaDataLength As Integer = 5
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Network.Protocol.Packet.BitMaskType
  commentId: F:Network.Protocol.Packet.BitMaskType
  id: BitMaskType
  parent: Network.Protocol.Packet
  langs:
  - csharp
  - vb
  name: BitMaskType
  nameWithType: Packet.BitMaskType
  fullName: Network.Protocol.Packet.BitMaskType
  type: Field
  source:
    remote:
      path: source/Network/Protocol/Packet.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: BitMaskType
    path: ../source/Network/Protocol/Packet.cs
    startLine: 11
  assemblies:
  - Network
  namespace: Network.Protocol
  syntax:
    content: public const byte BitMaskType = 63
    return:
      type: System.Byte
    content.vb: Public Const BitMaskType As Byte = 63
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Network.Protocol.Packet.BitMaskFragment_None
  commentId: F:Network.Protocol.Packet.BitMaskFragment_None
  id: BitMaskFragment_None
  parent: Network.Protocol.Packet
  langs:
  - csharp
  - vb
  name: BitMaskFragment_None
  nameWithType: Packet.BitMaskFragment_None
  fullName: Network.Protocol.Packet.BitMaskFragment_None
  type: Field
  source:
    remote:
      path: source/Network/Protocol/Packet.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: BitMaskFragment_None
    path: ../source/Network/Protocol/Packet.cs
    startLine: 12
  assemblies:
  - Network
  namespace: Network.Protocol
  syntax:
    content: public const byte BitMaskFragment_None = 0
    return:
      type: System.Byte
    content.vb: Public Const BitMaskFragment_None As Byte = 0
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Network.Protocol.Packet.BitMaskFragment_More
  commentId: F:Network.Protocol.Packet.BitMaskFragment_More
  id: BitMaskFragment_More
  parent: Network.Protocol.Packet
  langs:
  - csharp
  - vb
  name: BitMaskFragment_More
  nameWithType: Packet.BitMaskFragment_More
  fullName: Network.Protocol.Packet.BitMaskFragment_More
  type: Field
  source:
    remote:
      path: source/Network/Protocol/Packet.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: BitMaskFragment_More
    path: ../source/Network/Protocol/Packet.cs
    startLine: 13
  assemblies:
  - Network
  namespace: Network.Protocol
  syntax:
    content: public const byte BitMaskFragment_More = 64
    return:
      type: System.Byte
    content.vb: Public Const BitMaskFragment_More As Byte = 64
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Network.Protocol.Packet.BitMaskFragment_End
  commentId: F:Network.Protocol.Packet.BitMaskFragment_End
  id: BitMaskFragment_End
  parent: Network.Protocol.Packet
  langs:
  - csharp
  - vb
  name: BitMaskFragment_End
  nameWithType: Packet.BitMaskFragment_End
  fullName: Network.Protocol.Packet.BitMaskFragment_End
  type: Field
  source:
    remote:
      path: source/Network/Protocol/Packet.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: BitMaskFragment_End
    path: ../source/Network/Protocol/Packet.cs
    startLine: 14
  assemblies:
  - Network
  namespace: Network.Protocol
  syntax:
    content: public const byte BitMaskFragment_End = 128
    return:
      type: System.Byte
    content.vb: Public Const BitMaskFragment_End As Byte = 128
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Network.Protocol.Packet.Payload
  commentId: F:Network.Protocol.Packet.Payload
  id: Payload
  parent: Network.Protocol.Packet
  langs:
  - csharp
  - vb
  name: Payload
  nameWithType: Packet.Payload
  fullName: Network.Protocol.Packet.Payload
  type: Field
  source:
    remote:
      path: source/Network/Protocol/Packet.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Payload
    path: ../source/Network/Protocol/Packet.cs
    startLine: 16
  assemblies:
  - Network
  namespace: Network.Protocol
  syntax:
    content: public ArraySegment<byte> Payload
    return:
      type: System.ArraySegment{System.Byte}
    content.vb: Public Payload As ArraySegment(Of Byte)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Network.Protocol.Packet.#ctor(Network.Protocol.EPacket,System.ArraySegment{System.Byte})
  commentId: M:Network.Protocol.Packet.#ctor(Network.Protocol.EPacket,System.ArraySegment{System.Byte})
  id: '#ctor(Network.Protocol.EPacket,System.ArraySegment{System.Byte})'
  parent: Network.Protocol.Packet
  langs:
  - csharp
  - vb
  name: Packet(EPacket, ArraySegment<Byte>)
  nameWithType: Packet.Packet(EPacket, ArraySegment<Byte>)
  fullName: Network.Protocol.Packet.Packet(Network.Protocol.EPacket, System.ArraySegment<System.Byte>)
  type: Constructor
  source:
    remote:
      path: source/Network/Protocol/Packet.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: .ctor
    path: ../source/Network/Protocol/Packet.cs
    startLine: 18
  assemblies:
  - Network
  namespace: Network.Protocol
  syntax:
    content: Packet(EPacket eType, ArraySegment<byte> payload)
    parameters:
    - id: eType
      type: Network.Protocol.EPacket
    - id: payload
      type: System.ArraySegment{System.Byte}
    content.vb: Sub New(eType As EPacket, payload As ArraySegment(Of Byte))
  overload: Network.Protocol.Packet.#ctor*
  nameWithType.vb: Packet.Packet(EPacket, ArraySegment(Of Byte))
  fullName.vb: Network.Protocol.Packet.Packet(Network.Protocol.EPacket, System.ArraySegment(Of System.Byte))
  name.vb: Packet(EPacket, ArraySegment(Of Byte))
- uid: Network.Protocol.Packet.#ctor(Network.Protocol.EPacket,System.Byte[])
  commentId: M:Network.Protocol.Packet.#ctor(Network.Protocol.EPacket,System.Byte[])
  id: '#ctor(Network.Protocol.EPacket,System.Byte[])'
  parent: Network.Protocol.Packet
  langs:
  - csharp
  - vb
  name: Packet(EPacket, Byte[])
  nameWithType: Packet.Packet(EPacket, Byte[])
  fullName: Network.Protocol.Packet.Packet(Network.Protocol.EPacket, System.Byte[])
  type: Constructor
  source:
    remote:
      path: source/Network/Protocol/Packet.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: .ctor
    path: ../source/Network/Protocol/Packet.cs
    startLine: 24
  assemblies:
  - Network
  namespace: Network.Protocol
  syntax:
    content: public Packet(EPacket eType, byte[] payload)
    parameters:
    - id: eType
      type: Network.Protocol.EPacket
    - id: payload
      type: System.Byte[]
    content.vb: Public Sub New(eType As EPacket, payload As Byte())
  overload: Network.Protocol.Packet.#ctor*
  nameWithType.vb: Packet.Packet(EPacket, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Network.Protocol.Packet.Packet(Network.Protocol.EPacket, System.Byte())
  name.vb: Packet(EPacket, Byte())
- uid: Network.Protocol.Packet.#ctor(Network.Protocol.EPacket,System.IO.MemoryStream)
  commentId: M:Network.Protocol.Packet.#ctor(Network.Protocol.EPacket,System.IO.MemoryStream)
  id: '#ctor(Network.Protocol.EPacket,System.IO.MemoryStream)'
  parent: Network.Protocol.Packet
  langs:
  - csharp
  - vb
  name: Packet(EPacket, MemoryStream)
  nameWithType: Packet.Packet(EPacket, MemoryStream)
  fullName: Network.Protocol.Packet.Packet(Network.Protocol.EPacket, System.IO.MemoryStream)
  type: Constructor
  source:
    remote:
      path: source/Network/Protocol/Packet.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: .ctor
    path: ../source/Network/Protocol/Packet.cs
    startLine: 28
  assemblies:
  - Network
  namespace: Network.Protocol
  syntax:
    content: public Packet(EPacket eType, MemoryStream stream)
    parameters:
    - id: eType
      type: Network.Protocol.EPacket
    - id: stream
      type: System.IO.MemoryStream
    content.vb: Public Sub New(eType As EPacket, stream As MemoryStream)
  overload: Network.Protocol.Packet.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Network.Protocol.Packet.Type
  commentId: P:Network.Protocol.Packet.Type
  id: Type
  parent: Network.Protocol.Packet
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Packet.Type
  fullName: Network.Protocol.Packet.Type
  type: Property
  source:
    remote:
      path: source/Network/Protocol/Packet.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Type
    path: ../source/Network/Protocol/Packet.cs
    startLine: 32
  assemblies:
  - Network
  namespace: Network.Protocol
  syntax:
    content: public EPacket Type { get; }
    parameters: []
    return:
      type: Network.Protocol.EPacket
    content.vb: Public ReadOnly Property Type As EPacket
  overload: Network.Protocol.Packet.Type*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Network.Protocol.Packet.Length
  commentId: P:Network.Protocol.Packet.Length
  id: Length
  parent: Network.Protocol.Packet
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: Packet.Length
  fullName: Network.Protocol.Packet.Length
  type: Property
  source:
    remote:
      path: source/Network/Protocol/Packet.cs
      branch: readthedocs
      repo: https://github.com/Bannerlord-Coop-Team/BannerlordCoop.git
    id: Length
    path: ../source/Network/Protocol/Packet.cs
    startLine: 34
  assemblies:
  - Network
  namespace: Network.Protocol
  syntax:
    content: public int Length { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Length As Integer
  overload: Network.Protocol.Packet.Length*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Network.Protocol
  commentId: N:Network.Protocol
  name: Network.Protocol
  nameWithType: Network.Protocol
  fullName: Network.Protocol
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.ArraySegment{System.Byte}
  commentId: T:System.ArraySegment{System.Byte}
  parent: System
  definition: System.ArraySegment`1
  name: ArraySegment<Byte>
  nameWithType: ArraySegment<Byte>
  fullName: System.ArraySegment<System.Byte>
  nameWithType.vb: ArraySegment(Of Byte)
  fullName.vb: System.ArraySegment(Of System.Byte)
  name.vb: ArraySegment(Of Byte)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ArraySegment`1
  commentId: T:System.ArraySegment`1
  isExternal: true
  name: ArraySegment<T>
  nameWithType: ArraySegment<T>
  fullName: System.ArraySegment<T>
  nameWithType.vb: ArraySegment(Of T)
  fullName.vb: System.ArraySegment(Of T)
  name.vb: ArraySegment(Of T)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Network.Protocol.Packet.#ctor*
  commentId: Overload:Network.Protocol.Packet.#ctor
  name: Packet
  nameWithType: Packet.Packet
  fullName: Network.Protocol.Packet.Packet
- uid: Network.Protocol.EPacket
  commentId: T:Network.Protocol.EPacket
  parent: Network.Protocol
  name: EPacket
  nameWithType: EPacket
  fullName: Network.Protocol.EPacket
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.IO.MemoryStream
  commentId: T:System.IO.MemoryStream
  parent: System.IO
  isExternal: true
  name: MemoryStream
  nameWithType: MemoryStream
  fullName: System.IO.MemoryStream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Network.Protocol.Packet.Type*
  commentId: Overload:Network.Protocol.Packet.Type
  name: Type
  nameWithType: Packet.Type
  fullName: Network.Protocol.Packet.Type
- uid: Network.Protocol.Packet.Length*
  commentId: Overload:Network.Protocol.Packet.Length
  name: Length
  nameWithType: Packet.Length
  fullName: Network.Protocol.Packet.Length
